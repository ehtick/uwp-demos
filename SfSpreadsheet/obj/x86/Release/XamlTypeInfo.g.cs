//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Syncfusion.SampleBrowser.UWP.SfSpreadsheet
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMetaDataProvider __appProvider;
        private global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[106];
            _typeNameTable[0] = "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon";
            _typeNameTable[1] = "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[3] = "Object";
            _typeNameTable[4] = "System.Collections.IEnumerable";
            _typeNameTable[5] = "System.Collections.Generic.List`1<String>";
            _typeNameTable[6] = "String";
            _typeNameTable[7] = "Double[]";
            _typeNameTable[8] = "System.Array";
            _typeNameTable[9] = "Double";
            _typeNameTable[10] = "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet";
            _typeNameTable[11] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[12] = "Windows.UI.Xaml.HorizontalAlignment";
            _typeNameTable[13] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[14] = "Int32";
            _typeNameTable[15] = "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbonTab";
            _typeNameTable[16] = "Syncfusion.UI.Xaml.Controls.SfRibbon.QuickAccessToolBar";
            _typeNameTable[17] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[18] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[19] = "Syncfusion.UI.Xaml.Controls.SfRibbon.SfBackstage";
            _typeNameTable[20] = "Syncfusion.UI.Xaml.Controls.SfRibbon.RibbonState";
            _typeNameTable[21] = "System.Enum";
            _typeNameTable[22] = "System.ValueType";
            _typeNameTable[23] = "Boolean";
            _typeNameTable[24] = "Syncfusion.XlsIO.IWorkbook";
            _typeNameTable[25] = "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste";
            _typeNameTable[26] = "Syncfusion.UI.Xaml.CellGrid.GridCopyPaste";
            _typeNameTable[27] = "Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController";
            _typeNameTable[28] = "Syncfusion.UI.Xaml.Spreadsheet.SearchManager";
            _typeNameTable[29] = "System.Collections.Generic.Dictionary`2<String, Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid>";
            _typeNameTable[30] = "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid";
            _typeNameTable[31] = "Syncfusion.UI.Xaml.CellGrid.SfCellGrid";
            _typeNameTable[32] = "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell";
            _typeNameTable[33] = "Syncfusion.UI.Xaml.CellGrid.GridCurrentCell";
            _typeNameTable[34] = "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel";
            _typeNameTable[35] = "Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel";
            _typeNameTable[36] = "Syncfusion.XlsIO.IWorksheet";
            _typeNameTable[37] = "Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection";
            _typeNameTable[38] = "Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.Disposable";
            _typeNameTable[39] = "Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.NonFinalizeDisposable";
            _typeNameTable[40] = "Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController";
            _typeNameTable[41] = "System.Func`2<Syncfusion.UI.Xaml.CellGrid.SfCellGrid, Syncfusion.UI.Xaml.CellGrid.GridColumn>";
            _typeNameTable[42] = "System.MulticastDelegate";
            _typeNameTable[43] = "System.Delegate";
            _typeNameTable[44] = "Syncfusion.UI.Xaml.CellGrid.SelectionController";
            _typeNameTable[45] = "Syncfusion.UI.Xaml.CellGrid.GridAutoScroller";
            _typeNameTable[46] = "Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList";
            _typeNameTable[47] = "System.Collections.Generic.List`1<Syncfusion.UI.Xaml.CellGrid.GridRangeInfo>";
            _typeNameTable[48] = "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo";
            _typeNameTable[49] = "Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType";
            _typeNameTable[50] = "Syncfusion.UI.Xaml.CellGrid.Helpers.EditTrigger";
            _typeNameTable[51] = "Syncfusion.UI.Xaml.CellGrid.Helpers.EditorSelectionBehavior";
            _typeNameTable[52] = "Syncfusion.UI.Xaml.CellGrid.FormulaEngine";
            _typeNameTable[53] = "Syncfusion.UI.Xaml.Grid.ScrollAxis.LineSizeCollection";
            _typeNameTable[54] = "Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection";
            _typeNameTable[55] = "Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1<Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo>";
            _typeNameTable[56] = "Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo";
            _typeNameTable[57] = "Syncfusion.UI.Xaml.CellGrid.CellSpanInfo";
            _typeNameTable[58] = "Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase";
            _typeNameTable[59] = "Syncfusion.UI.Xaml.CellGrid.ColumnResizingController";
            _typeNameTable[60] = "Syncfusion.UI.Xaml.CellGrid.RowResizingController";
            _typeNameTable[61] = "Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisBase";
            _typeNameTable[62] = "Syncfusion.UI.Xaml.CellGrid.ContextMenu";
            _typeNameTable[63] = "Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands";
            _typeNameTable[64] = "Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager";
            _typeNameTable[65] = "Syncfusion.XlsIO.IRange";
            _typeNameTable[66] = "Syncfusion.XlsIO.IStyle";
            _typeNameTable[67] = "Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController";
            _typeNameTable[68] = "SpreadsheetSamples.SpreadsheetShowcase";
            _typeNameTable[69] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[70] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[71] = "Common.SampleLayout";
            _typeNameTable[72] = "System.Windows.Input.ICommand";
            _typeNameTable[73] = "SpreadsheetSamples.AdvancedConditionalFormatting";
            _typeNameTable[74] = "Syncfusion.UI.Xaml.Spreadsheet.FormulaBar";
            _typeNameTable[75] = "Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter";
            _typeNameTable[76] = "Windows.UI.Xaml.Style";
            _typeNameTable[77] = "Windows.UI.Xaml.Controls.ControlTemplate";
            _typeNameTable[78] = "Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel";
            _typeNameTable[79] = "Windows.UI.Xaml.Controls.Panel";
            _typeNameTable[80] = "Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion";
            _typeNameTable[81] = "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl";
            _typeNameTable[82] = "Syncfusion.UI.Xaml.Primitives.Selector";
            _typeNameTable[83] = "Syncfusion.UI.Xaml.Controls.Navigation.CloseButtonType";
            _typeNameTable[84] = "Syncfusion.UI.Xaml.Controls.Navigation.TabScrollButtonVisibility";
            _typeNameTable[85] = "Syncfusion.UI.Xaml.Controls.Navigation.TabStripPlacement";
            _typeNameTable[86] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[87] = "Windows.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[88] = "Windows.UI.Xaml.Media.Animation.TransitionCollection";
            _typeNameTable[89] = "Syncfusion.UI.Xaml.Controls.Navigation.SelectionStyle";
            _typeNameTable[90] = "System.Collections.Generic.List`1<Object>";
            _typeNameTable[91] = "SpreadsheetSamples.ImageConverter";
            _typeNameTable[92] = "SpreadsheetSamples.CellCustomization";
            _typeNameTable[93] = "SpreadsheetSamples.CellFormatting";
            _typeNameTable[94] = "SpreadsheetSamples.Chart";
            _typeNameTable[95] = "SpreadsheetSamples.ConditionalFormatting";
            _typeNameTable[96] = "SpreadsheetSamples.Formula";
            _typeNameTable[97] = "SpreadsheetSamples.GettingStarted";
            _typeNameTable[98] = "SpreadsheetSamples.GraphicCell";
            _typeNameTable[99] = "SpreadsheetSamples.Localization";
            _typeNameTable[100] = "SpreadsheetSamples.Outline";
            _typeNameTable[101] = "SpreadsheetSamples.Sparkline";
            _typeNameTable[102] = "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper";
            _typeNameTable[103] = "Windows.UI.Xaml.Data.Binding";
            _typeNameTable[104] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>";
            _typeNameTable[105] = "Windows.UI.Xaml.FrameworkElement";

            _typeTable = new global::System.Type[106];
            _typeTable[0] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon);
            _typeTable[1] = typeof(global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[3] = typeof(global::System.Object);
            _typeTable[4] = typeof(global::System.Collections.IEnumerable);
            _typeTable[5] = typeof(global::System.Collections.Generic.List<global::System.String>);
            _typeTable[6] = typeof(global::System.String);
            _typeTable[7] = typeof(global::System.Double[]);
            _typeTable[8] = typeof(global::System.Array);
            _typeTable[9] = typeof(global::System.Double);
            _typeTable[10] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet);
            _typeTable[11] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[12] = typeof(global::Windows.UI.Xaml.HorizontalAlignment);
            _typeTable[13] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[14] = typeof(global::System.Int32);
            _typeTable[15] = typeof(global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbonTab);
            _typeTable[16] = typeof(global::Syncfusion.UI.Xaml.Controls.SfRibbon.QuickAccessToolBar);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[18] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[19] = typeof(global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfBackstage);
            _typeTable[20] = typeof(global::Syncfusion.UI.Xaml.Controls.SfRibbon.RibbonState);
            _typeTable[21] = typeof(global::System.Enum);
            _typeTable[22] = typeof(global::System.ValueType);
            _typeTable[23] = typeof(global::System.Boolean);
            _typeTable[24] = typeof(global::Syncfusion.XlsIO.IWorkbook);
            _typeTable[25] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste);
            _typeTable[26] = typeof(global::Syncfusion.UI.Xaml.CellGrid.GridCopyPaste);
            _typeTable[27] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController);
            _typeTable[28] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.SearchManager);
            _typeTable[29] = typeof(global::System.Collections.Generic.Dictionary<global::System.String, global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid>);
            _typeTable[30] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid);
            _typeTable[31] = typeof(global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid);
            _typeTable[32] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell);
            _typeTable[33] = typeof(global::Syncfusion.UI.Xaml.CellGrid.GridCurrentCell);
            _typeTable[34] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel);
            _typeTable[35] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel);
            _typeTable[36] = typeof(global::Syncfusion.XlsIO.IWorksheet);
            _typeTable[37] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection);
            _typeTable[38] = typeof(global::Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.Disposable);
            _typeTable[39] = typeof(global::Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.NonFinalizeDisposable);
            _typeTable[40] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController);
            _typeTable[41] = typeof(global::System.Func<global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid, global::Syncfusion.UI.Xaml.CellGrid.GridColumn>);
            _typeTable[42] = typeof(global::System.MulticastDelegate);
            _typeTable[43] = typeof(global::System.Delegate);
            _typeTable[44] = typeof(global::Syncfusion.UI.Xaml.CellGrid.SelectionController);
            _typeTable[45] = typeof(global::Syncfusion.UI.Xaml.CellGrid.GridAutoScroller);
            _typeTable[46] = typeof(global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList);
            _typeTable[47] = typeof(global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo>);
            _typeTable[48] = typeof(global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo);
            _typeTable[49] = typeof(global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType);
            _typeTable[50] = typeof(global::Syncfusion.UI.Xaml.CellGrid.Helpers.EditTrigger);
            _typeTable[51] = typeof(global::Syncfusion.UI.Xaml.CellGrid.Helpers.EditorSelectionBehavior);
            _typeTable[52] = typeof(global::Syncfusion.UI.Xaml.CellGrid.FormulaEngine);
            _typeTable[53] = typeof(global::Syncfusion.UI.Xaml.Grid.ScrollAxis.LineSizeCollection);
            _typeTable[54] = typeof(global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection);
            _typeTable[55] = typeof(global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection<global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo>);
            _typeTable[56] = typeof(global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo);
            _typeTable[57] = typeof(global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfo);
            _typeTable[58] = typeof(global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase);
            _typeTable[59] = typeof(global::Syncfusion.UI.Xaml.CellGrid.ColumnResizingController);
            _typeTable[60] = typeof(global::Syncfusion.UI.Xaml.CellGrid.RowResizingController);
            _typeTable[61] = typeof(global::Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisBase);
            _typeTable[62] = typeof(global::Syncfusion.UI.Xaml.CellGrid.ContextMenu);
            _typeTable[63] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands);
            _typeTable[64] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager);
            _typeTable[65] = typeof(global::Syncfusion.XlsIO.IRange);
            _typeTable[66] = typeof(global::Syncfusion.XlsIO.IStyle);
            _typeTable[67] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController);
            _typeTable[68] = typeof(global::SpreadsheetSamples.SpreadsheetShowcase);
            _typeTable[69] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[70] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[71] = typeof(global::Common.SampleLayout);
            _typeTable[72] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[73] = typeof(global::SpreadsheetSamples.AdvancedConditionalFormatting);
            _typeTable[74] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.FormulaBar);
            _typeTable[75] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter);
            _typeTable[76] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[77] = typeof(global::Windows.UI.Xaml.Controls.ControlTemplate);
            _typeTable[78] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel);
            _typeTable[79] = typeof(global::Windows.UI.Xaml.Controls.Panel);
            _typeTable[80] = typeof(global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion);
            _typeTable[81] = typeof(global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl);
            _typeTable[82] = typeof(global::Syncfusion.UI.Xaml.Primitives.Selector);
            _typeTable[83] = typeof(global::Syncfusion.UI.Xaml.Controls.Navigation.CloseButtonType);
            _typeTable[84] = typeof(global::Syncfusion.UI.Xaml.Controls.Navigation.TabScrollButtonVisibility);
            _typeTable[85] = typeof(global::Syncfusion.UI.Xaml.Controls.Navigation.TabStripPlacement);
            _typeTable[86] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[87] = typeof(global::Windows.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[88] = typeof(global::Windows.UI.Xaml.Media.Animation.TransitionCollection);
            _typeTable[89] = typeof(global::Syncfusion.UI.Xaml.Controls.Navigation.SelectionStyle);
            _typeTable[90] = typeof(global::System.Collections.Generic.List<global::System.Object>);
            _typeTable[91] = typeof(global::SpreadsheetSamples.ImageConverter);
            _typeTable[92] = typeof(global::SpreadsheetSamples.CellCustomization);
            _typeTable[93] = typeof(global::SpreadsheetSamples.CellFormatting);
            _typeTable[94] = typeof(global::SpreadsheetSamples.Chart);
            _typeTable[95] = typeof(global::SpreadsheetSamples.ConditionalFormatting);
            _typeTable[96] = typeof(global::SpreadsheetSamples.Formula);
            _typeTable[97] = typeof(global::SpreadsheetSamples.GettingStarted);
            _typeTable[98] = typeof(global::SpreadsheetSamples.GraphicCell);
            _typeTable[99] = typeof(global::SpreadsheetSamples.Localization);
            _typeTable[100] = typeof(global::SpreadsheetSamples.Outline);
            _typeTable[101] = typeof(global::SpreadsheetSamples.Sparkline);
            _typeTable[102] = typeof(global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper);
            _typeTable[103] = typeof(global::Windows.UI.Xaml.Data.Binding);
            _typeTable[104] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>);
            _typeTable[105] = typeof(global::Windows.UI.Xaml.FrameworkElement);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_SfSpreadsheetRibbon() { return new global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon(); }
        private object Activate_1_SfRibbon() { return new global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon(); }
        private object Activate_5_List() { return new global::System.Collections.Generic.List<global::System.String>(); }
        private object Activate_10_SfSpreadsheet() { return new global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet(); }
        private object Activate_15_SfRibbonTab() { return new global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbonTab(); }
        private object Activate_16_QuickAccessToolBar() { return new global::Syncfusion.UI.Xaml.Controls.SfRibbon.QuickAccessToolBar(); }
        private object Activate_19_SfBackstage() { return new global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfBackstage(); }
        private object Activate_25_SpreadsheetCopyPaste() { return new global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste(); }
        private object Activate_26_GridCopyPaste() { return new global::Syncfusion.UI.Xaml.CellGrid.GridCopyPaste(); }
        private object Activate_29_Dictionary() { return new global::System.Collections.Generic.Dictionary<global::System.String, global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid>(); }
        private object Activate_30_SpreadsheetGrid() { return new global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid(); }
        private object Activate_31_SfCellGrid() { return new global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid(); }
        private object Activate_38_Disposable() { return new global::Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.Disposable(); }
        private object Activate_39_NonFinalizeDisposable() { return new global::Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.NonFinalizeDisposable(); }
        private object Activate_45_GridAutoScroller() { return new global::Syncfusion.UI.Xaml.CellGrid.GridAutoScroller(); }
        private object Activate_46_GridRangeInfoList() { return new global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList(); }
        private object Activate_47_List() { return new global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo>(); }
        private object Activate_48_GridRangeInfo() { return new global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo(); }
        private object Activate_53_LineSizeCollection() { return new global::Syncfusion.UI.Xaml.Grid.ScrollAxis.LineSizeCollection(); }
        private object Activate_55_CellSpanInfoCollection() { return new global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection<global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo>(); }
        private object Activate_56_CoveredCellInfo() { return new global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo(); }
        private object Activate_57_CellSpanInfo() { return new global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfo(); }
        private object Activate_58_CellSpanInfoBase() { return new global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase(); }
        private object Activate_62_ContextMenu() { return new global::Syncfusion.UI.Xaml.CellGrid.ContextMenu(); }
        private object Activate_67_FormulaRangeSelectionController() { return new global::Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController(); }
        private object Activate_68_SpreadsheetShowcase() { return new global::SpreadsheetSamples.SpreadsheetShowcase(); }
        private object Activate_71_SampleLayout() { return new global::Common.SampleLayout(); }
        private object Activate_73_AdvancedConditionalFormatting() { return new global::SpreadsheetSamples.AdvancedConditionalFormatting(); }
        private object Activate_74_FormulaBar() { return new global::Syncfusion.UI.Xaml.Spreadsheet.FormulaBar(); }
        private object Activate_75_SfGridSplitter() { return new global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter(); }
        private object Activate_78_OutlinesPanel() { return new global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel(); }
        private object Activate_81_SfTabControl() { return new global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl(); }
        private object Activate_82_Selector() { return new global::Syncfusion.UI.Xaml.Primitives.Selector(); }
        private object Activate_90_List() { return new global::System.Collections.Generic.List<global::System.Object>(); }
        private object Activate_91_ImageConverter() { return new global::SpreadsheetSamples.ImageConverter(); }
        private object Activate_92_CellCustomization() { return new global::SpreadsheetSamples.CellCustomization(); }
        private object Activate_93_CellFormatting() { return new global::SpreadsheetSamples.CellFormatting(); }
        private object Activate_94_Chart() { return new global::SpreadsheetSamples.Chart(); }
        private object Activate_95_ConditionalFormatting() { return new global::SpreadsheetSamples.ConditionalFormatting(); }
        private object Activate_96_Formula() { return new global::SpreadsheetSamples.Formula(); }
        private object Activate_97_GettingStarted() { return new global::SpreadsheetSamples.GettingStarted(); }
        private object Activate_98_GraphicCell() { return new global::SpreadsheetSamples.GraphicCell(); }
        private object Activate_99_Localization() { return new global::SpreadsheetSamples.Localization(); }
        private object Activate_100_Outline() { return new global::SpreadsheetSamples.Outline(); }
        private object Activate_101_Sparkline() { return new global::SpreadsheetSamples.Sparkline(); }
        private object Activate_102_SetterValueBindingHelper() { return new global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper(); }
        private object Activate_104_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>(); }
        private void VectorAdd_5_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }
        private void MapAdd_29_Dictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_46_GridRangeInfoList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_47_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_54_CoveredCellInfoCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_55_CellSpanInfoCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_90_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_104_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon"));
                userType.Activator = Activate_0_SfSpreadsheetRibbon;
                userType.AddMemberName("NumberFormatSource");
                userType.AddMemberName("FontFamilyNames");
                userType.AddMemberName("FontSizeSource");
                userType.AddMemberName("SfSpreadsheet");
                xamlType = userType;
                break;

            case 1:   //  Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_1_SfRibbon;
                userType.AddMemberName("Content");
                userType.AddMemberName("Title");
                userType.AddMemberName("TitleAlignment");
                userType.AddMemberName("Icon");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("QuickAccessToolBar");
                userType.AddMemberName("AccentBrush");
                userType.AddMemberName("TabPanelItem");
                userType.AddMemberName("QATVisibility");
                userType.AddMemberName("TabPanelVisibility");
                userType.AddMemberName("ToggleButtonVisibility");
                userType.AddMemberName("BackStage");
                userType.AddMemberName("RibbonState");
                userType.AddMemberName("IsQATBelow");
                userType.AddMemberName("BackStageWidth");
                userType.AddMemberName("BackStageHeader");
                userType.AddMemberName("RibbonTabPopupWidth");
                xamlType = userType;
                break;

            case 2:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Object
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  System.Collections.IEnumerable
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 5:   //  System.Collections.Generic.List`1<String>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_5_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 6:   //  String
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Double[]
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Array"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  System.Array
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 9:   //  Double
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_10_SfSpreadsheet;
                userType.AddMemberName("SelectedTabIndex");
                userType.AddMemberName("SelectedTabItem");
                userType.AddMemberName("FormulaBarVisibility");
                userType.AddMemberName("Workbook");
                userType.AddMemberName("CopyPaste");
                userType.AddMemberName("GraphicCopyPaste");
                userType.AddMemberName("SearchManager");
                userType.AddMemberName("GridCollection");
                userType.AddMemberName("AllowZooming");
                userType.AddMemberName("AllowCellContextMenu");
                userType.AddMemberName("Commands");
                userType.AddMemberName("HistoryManager");
                userType.AddMemberName("FileName");
                userType.AddMemberName("AllowExtendRowColumnCount");
                userType.AddMemberName("DefaultRowCount");
                userType.AddMemberName("DefaultColumnCount");
                userType.AddMemberName("DisplayAlerts");
                userType.AddMemberName("ActiveGrid");
                userType.AddMemberName("ActiveSheet");
                userType.AddMemberName("CurrentCellRange");
                userType.AddMemberName("CurrentCellStyle");
                userType.AddMemberName("CurrentCellValue");
                userType.AddMemberName("FormulaRangeSelectionController");
                userType.AddMemberName("AllowFormulaRangeSelection");
                userType.AddMemberName("ShowBusyIndicator");
                xamlType = userType;
                break;

            case 11:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Windows.UI.Xaml.HorizontalAlignment
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  Int32
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbonTab
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 16:   //  Syncfusion.UI.Xaml.Controls.SfRibbon.QuickAccessToolBar
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 17:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  Syncfusion.UI.Xaml.Controls.SfRibbon.SfBackstage
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 20:   //  Syncfusion.UI.Xaml.Controls.SfRibbon.RibbonState
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Syncfusion.UI.Xaml.Controls.SfRibbon.RibbonState.Normal);
                userType.AddEnumValue("Adorner", global::Syncfusion.UI.Xaml.Controls.SfRibbon.RibbonState.Adorner);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.Controls.SfRibbon.RibbonState.Hide);
                xamlType = userType;
                break;

            case 21:   //  System.Enum
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 22:   //  System.ValueType
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 23:   //  Boolean
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  Syncfusion.XlsIO.IWorkbook
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridCopyPaste"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 26:   //  Syncfusion.UI.Xaml.CellGrid.GridCopyPaste
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_26_GridCopyPaste;
                xamlType = userType;
                break;

            case 27:   //  Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  Syncfusion.UI.Xaml.Spreadsheet.SearchManager
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  System.Collections.Generic.Dictionary`2<String, Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_29_Dictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 30:   //  Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid"));
                userType.Activator = Activate_30_SpreadsheetGrid;
                userType.AddMemberName("CurrentCell");
                userType.AddMemberName("Model");
                userType.AddMemberName("SheetName");
                userType.AddMemberName("GraphicModel");
                userType.AddMemberName("Worksheet");
                userType.AddMemberName("CellRenderers");
                userType.AddMemberName("FillSeriesController");
                xamlType = userType;
                break;

            case 31:   //  Syncfusion.UI.Xaml.CellGrid.SfCellGrid
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_31_SfCellGrid;
                userType.AddMemberName("CreateGridColumn");
                userType.AddMemberName("SelectionController");
                userType.AddMemberName("AutoScroller");
                userType.AddMemberName("SelectedRanges");
                userType.AddMemberName("EditTrigger");
                userType.AddMemberName("EditorSelectionBehavior");
                userType.AddMemberName("FormulaEngine");
                userType.AddMemberName("CopyPaste");
                userType.AddMemberName("RowCount");
                userType.AddMemberName("ColumnCount");
                userType.AddMemberName("FrozenRows");
                userType.AddMemberName("FrozenColumns");
                userType.AddMemberName("FooterRows");
                userType.AddMemberName("FooterColumns");
                userType.AddMemberName("HeaderRows");
                userType.AddMemberName("HeaderColumns");
                userType.AddMemberName("DefaultColumnWidth");
                userType.AddMemberName("DefaultRowHeight");
                userType.AddMemberName("RowHeights");
                userType.AddMemberName("ColumnWidths");
                userType.AddMemberName("ShowGridLines");
                userType.AddMemberName("GridLineColor");
                userType.AddMemberName("SelectionBorderThickness");
                userType.AddMemberName("SelectionBorderBrush");
                userType.AddMemberName("SelectionBrush");
                userType.AddMemberName("CoveredCells");
                userType.AddMemberName("AllowEditing");
                userType.AddMemberName("AllowSelection");
                userType.AddMemberName("ColumnResizingController");
                userType.AddMemberName("RowResizingController");
                userType.AddMemberName("AllowRowResize");
                userType.AddMemberName("AllowColumnResize");
                userType.AddMemberName("AllowHiddenRowResize");
                userType.AddMemberName("AllowHiddenColumnResize");
                userType.AddMemberName("ShowComment");
                userType.AddMemberName("ShowTooltip");
                userType.AddMemberName("AllowFloatingCell");
                userType.AddMemberName("AllowFloatingCellInEdit");
                userType.AddMemberName("AllowExcelLikeKeyNavigation");
                userType.AddMemberName("ScrollRows");
                userType.AddMemberName("ScrollColumns");
                userType.AddMemberName("CellContextMenu");
                userType.AddMemberName("AllowEditorsContextMenu");
                xamlType = userType;
                break;

            case 32:   //  Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridCurrentCell"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  Syncfusion.UI.Xaml.CellGrid.GridCurrentCell
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 34:   //  Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 35:   //  Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 36:   //  Syncfusion.XlsIO.IWorksheet
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.Disposable"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.Disposable
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.NonFinalizeDisposable"));
                userType.Activator = Activate_38_Disposable;
                xamlType = userType;
                break;

            case 39:   //  Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.NonFinalizeDisposable
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_39_NonFinalizeDisposable;
                xamlType = userType;
                break;

            case 40:   //  Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 41:   //  System.Func`2<Syncfusion.UI.Xaml.CellGrid.SfCellGrid, Syncfusion.UI.Xaml.CellGrid.GridColumn>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.MulticastDelegate"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  System.MulticastDelegate
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Delegate"));
                xamlType = userType;
                break;

            case 43:   //  System.Delegate
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 44:   //  Syncfusion.UI.Xaml.CellGrid.SelectionController
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 45:   //  Syncfusion.UI.Xaml.CellGrid.GridAutoScroller
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.Generic.List`1<Syncfusion.UI.Xaml.CellGrid.GridRangeInfo>"));
                userType.CollectionAdd = VectorAdd_46_GridRangeInfoList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 47:   //  System.Collections.Generic.List`1<Syncfusion.UI.Xaml.CellGrid.GridRangeInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_47_List;
                userType.CollectionAdd = VectorAdd_47_List;
                xamlType = userType;
                break;

            case 48:   //  Syncfusion.UI.Xaml.CellGrid.GridRangeInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_48_GridRangeInfo;
                userType.AddMemberName("RangeType");
                userType.AddMemberName("IsTable");
                userType.AddMemberName("IsRows");
                userType.AddMemberName("IsCols");
                userType.AddMemberName("IsCells");
                userType.AddMemberName("Top");
                userType.AddMemberName("Left");
                userType.AddMemberName("Bottom");
                userType.AddMemberName("Right");
                userType.AddMemberName("IsEmpty");
                userType.AddMemberName("Width");
                userType.AddMemberName("Height");
                userType.AddMemberName("Info");
                xamlType = userType;
                break;

            case 49:   //  Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Empty", global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType.Empty);
                userType.AddEnumValue("Cells", global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType.Cells);
                userType.AddEnumValue("Rows", global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType.Rows);
                userType.AddEnumValue("Cols", global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType.Cols);
                userType.AddEnumValue("Table", global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType.Table);
                xamlType = userType;
                break;

            case 50:   //  Syncfusion.UI.Xaml.CellGrid.Helpers.EditTrigger
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("OnTap", global::Syncfusion.UI.Xaml.CellGrid.Helpers.EditTrigger.OnTap);
                userType.AddEnumValue("OnDoubleTap", global::Syncfusion.UI.Xaml.CellGrid.Helpers.EditTrigger.OnDoubleTap);
                xamlType = userType;
                break;

            case 51:   //  Syncfusion.UI.Xaml.CellGrid.Helpers.EditorSelectionBehavior
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("SelectAll", global::Syncfusion.UI.Xaml.CellGrid.Helpers.EditorSelectionBehavior.SelectAll);
                userType.AddEnumValue("MoveLast", global::Syncfusion.UI.Xaml.CellGrid.Helpers.EditorSelectionBehavior.MoveLast);
                xamlType = userType;
                break;

            case 52:   //  Syncfusion.UI.Xaml.CellGrid.FormulaEngine
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 53:   //  Syncfusion.UI.Xaml.Grid.ScrollAxis.LineSizeCollection
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 54:   //  Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1<Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo>"));
                userType.CollectionAdd = VectorAdd_54_CoveredCellInfoCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 55:   //  Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1<Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_55_CellSpanInfoCollection;
                userType.CollectionAdd = VectorAdd_55_CellSpanInfoCollection;
                xamlType = userType;
                break;

            case 56:   //  Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CellSpanInfo"));
                userType.Activator = Activate_56_CoveredCellInfo;
                userType.AddMemberName("SpanWholeRow");
                userType.AddMemberName("SpanWholeColumn");
                xamlType = userType;
                break;

            case 57:   //  Syncfusion.UI.Xaml.CellGrid.CellSpanInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase"));
                userType.Activator = Activate_57_CellSpanInfo;
                userType.AddMemberName("ClipRows");
                userType.AddMemberName("ClipColumns");
                xamlType = userType;
                break;

            case 58:   //  Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_58_CellSpanInfoBase;
                userType.AddMemberName("Top");
                userType.AddMemberName("Left");
                userType.AddMemberName("Bottom");
                userType.AddMemberName("Right");
                userType.AddMemberName("Width");
                userType.AddMemberName("Height");
                xamlType = userType;
                break;

            case 59:   //  Syncfusion.UI.Xaml.CellGrid.ColumnResizingController
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 60:   //  Syncfusion.UI.Xaml.CellGrid.RowResizingController
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 61:   //  Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisBase
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 62:   //  Syncfusion.UI.Xaml.CellGrid.ContextMenu
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 63:   //  Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 64:   //  Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 65:   //  Syncfusion.XlsIO.IRange
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 66:   //  Syncfusion.XlsIO.IStyle
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 67:   //  Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 68:   //  SpreadsheetSamples.SpreadsheetShowcase
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_68_SpreadsheetShowcase;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 69:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 70:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 71:   //  Common.SampleLayout
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_71_SampleLayout;
                userType.AddMemberName("Header");
                userType.AddMemberName("Sample");
                userType.AddMemberName("Setting");
                userType.AddMemberName("OptionVisibility");
                userType.AddMemberName("FontIcons");
                userType.AddMemberName("Pathstring");
                userType.AddMemberName("ClickCommand");
                xamlType = userType;
                break;

            case 72:   //  System.Windows.Input.ICommand
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 73:   //  SpreadsheetSamples.AdvancedConditionalFormatting
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_73_AdvancedConditionalFormatting;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 74:   //  Syncfusion.UI.Xaml.Spreadsheet.FormulaBar
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_74_FormulaBar;
                xamlType = userType;
                break;

            case 75:   //  Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_75_SfGridSplitter;
                userType.AddMemberName("ShowsPreview");
                userType.AddMemberName("PreviewStyle");
                userType.AddMemberName("UpButtonTemplate");
                userType.AddMemberName("DownButtonTemplate");
                userType.AddMemberName("EnableCollapseButton");
                xamlType = userType;
                break;

            case 76:   //  Windows.UI.Xaml.Style
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 77:   //  Windows.UI.Xaml.Controls.ControlTemplate
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 78:   //  Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Panel"));
                userType.Activator = Activate_78_OutlinesPanel;
                userType.AddMemberName("Orientation");
                userType.AddMemberName("SfSpreadsheet");
                userType.AddMemberName("ActiveGrid");
                xamlType = userType;
                break;

            case 79:   //  Windows.UI.Xaml.Controls.Panel
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 80:   //  Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Vertical", global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion.Vertical);
                userType.AddEnumValue("Horizontal", global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion.Horizontal);
                xamlType = userType;
                break;

            case 81:   //  Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Primitives.Selector"));
                userType.Activator = Activate_81_SfTabControl;
                userType.AddMemberName("CloseButtonType");
                userType.AddMemberName("TabControlHorizontalTemplate");
                userType.AddMemberName("TabScrollButtonVisibility");
                userType.AddMemberName("TabStripPlacement");
                userType.AddMemberName("RightHeader");
                userType.AddMemberName("ShowCustomContextMenu");
                userType.AddMemberName("ShowContextMenu");
                userType.AddMemberName("LeftHeader");
                userType.AddMemberName("DisableTabItemContentUnload");
                userType.AddMemberName("HeaderFontSize");
                userType.AddMemberName("ShowIcon");
                userType.AddMemberName("HighlightOnSelection");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("HeaderTemplateSelector");
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("ContentTransitions");
                userType.AddMemberName("ContentTemplateSelector");
                userType.AddMemberName("PinnedTabScrollButtonVisibility");
                userType.AddMemberName("SelectionStyle");
                userType.AddMemberName("ShowTabstripMenu");
                userType.AddMemberName("TabstripMenuItems");
                userType.AddMemberName("TabstripMenuItemTemplate");
                userType.AddMemberName("TabControlVerticalTemplate");
                userType.AddMemberName("EnableSwipeGestures");
                xamlType = userType;
                break;

            case 82:   //  Syncfusion.UI.Xaml.Primitives.Selector
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_82_Selector;
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                xamlType = userType;
                break;

            case 83:   //  Syncfusion.UI.Xaml.Controls.Navigation.CloseButtonType
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Common", global::Syncfusion.UI.Xaml.Controls.Navigation.CloseButtonType.Common);
                userType.AddEnumValue("Individual", global::Syncfusion.UI.Xaml.Controls.Navigation.CloseButtonType.Individual);
                userType.AddEnumValue("Both", global::Syncfusion.UI.Xaml.Controls.Navigation.CloseButtonType.Both);
                userType.AddEnumValue("IndividualOnMouseOver", global::Syncfusion.UI.Xaml.Controls.Navigation.CloseButtonType.IndividualOnMouseOver);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.Controls.Navigation.CloseButtonType.Hide);
                userType.AddEnumValue("Extended", global::Syncfusion.UI.Xaml.Controls.Navigation.CloseButtonType.Extended);
                xamlType = userType;
                break;

            case 84:   //  Syncfusion.UI.Xaml.Controls.Navigation.TabScrollButtonVisibility
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Visible", global::Syncfusion.UI.Xaml.Controls.Navigation.TabScrollButtonVisibility.Visible);
                userType.AddEnumValue("Collapsed", global::Syncfusion.UI.Xaml.Controls.Navigation.TabScrollButtonVisibility.Collapsed);
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Controls.Navigation.TabScrollButtonVisibility.Auto);
                xamlType = userType;
                break;

            case 85:   //  Syncfusion.UI.Xaml.Controls.Navigation.TabStripPlacement
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Syncfusion.UI.Xaml.Controls.Navigation.TabStripPlacement.Left);
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Controls.Navigation.TabStripPlacement.Top);
                userType.AddEnumValue("Right", global::Syncfusion.UI.Xaml.Controls.Navigation.TabStripPlacement.Right);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Controls.Navigation.TabStripPlacement.Bottom);
                xamlType = userType;
                break;

            case 86:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 87:   //  Windows.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 88:   //  Windows.UI.Xaml.Media.Animation.TransitionCollection
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 89:   //  Syncfusion.UI.Xaml.Controls.Navigation.SelectionStyle
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("HeaderText", global::Syncfusion.UI.Xaml.Controls.Navigation.SelectionStyle.HeaderText);
                userType.AddEnumValue("CompleteHeader", global::Syncfusion.UI.Xaml.Controls.Navigation.SelectionStyle.CompleteHeader);
                xamlType = userType;
                break;

            case 90:   //  System.Collections.Generic.List`1<Object>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_90_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 91:   //  SpreadsheetSamples.ImageConverter
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_91_ImageConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 92:   //  SpreadsheetSamples.CellCustomization
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_92_CellCustomization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 93:   //  SpreadsheetSamples.CellFormatting
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_93_CellFormatting;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 94:   //  SpreadsheetSamples.Chart
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_94_Chart;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 95:   //  SpreadsheetSamples.ConditionalFormatting
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_95_ConditionalFormatting;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 96:   //  SpreadsheetSamples.Formula
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_96_Formula;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 97:   //  SpreadsheetSamples.GettingStarted
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_97_GettingStarted;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 98:   //  SpreadsheetSamples.GraphicCell
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_98_GraphicCell;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 99:   //  SpreadsheetSamples.Localization
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_99_Localization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 100:   //  SpreadsheetSamples.Outline
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_100_Outline;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 101:   //  SpreadsheetSamples.Sparkline
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_101_Sparkline;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 102:   //  Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_102_SetterValueBindingHelper;
                userType.AddMemberName("Type");
                userType.AddMemberName("Property");
                userType.AddMemberName("Binding");
                userType.AddMemberName("Values");
                userType.AddMemberName("PropertyBinding");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 103:   //  Windows.UI.Xaml.Data.Binding
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 104:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_104_Collection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 105:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Common_2015.Syncfusion_SampleBrowser_UWP_Common_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfGantt.UWP.Syncfusion_SfGantt_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfImageEditor.UWP.Syncfusion_SfImageEditor_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfSmithChart.UWP.Syncfusion_SfSmithChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_SfRibbon_Content(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.Content;
        }
        private void set_0_SfRibbon_Content(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_1_SfSpreadsheetRibbon_NumberFormatSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon)instance;
            return that.NumberFormatSource;
        }
        private void set_1_SfSpreadsheetRibbon_NumberFormatSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon)instance;
            that.NumberFormatSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_2_SfSpreadsheetRibbon_FontFamilyNames(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon)instance;
            return that.FontFamilyNames;
        }
        private void set_2_SfSpreadsheetRibbon_FontFamilyNames(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon)instance;
            that.FontFamilyNames = (global::System.Collections.Generic.List<global::System.String>)Value;
        }
        private object get_3_SfSpreadsheetRibbon_FontSizeSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon)instance;
            return that.FontSizeSource;
        }
        private void set_3_SfSpreadsheetRibbon_FontSizeSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon)instance;
            that.FontSizeSource = (global::System.Double[])Value;
        }
        private object get_4_SfSpreadsheetRibbon_SfSpreadsheet(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon)instance;
            return that.SfSpreadsheet;
        }
        private void set_4_SfSpreadsheetRibbon_SfSpreadsheet(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon)instance;
            that.SfSpreadsheet = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)Value;
        }
        private object get_5_SfRibbon_Title(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.Title;
        }
        private void set_5_SfRibbon_Title(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.Title = (global::System.Object)Value;
        }
        private object get_6_SfRibbon_TitleAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.TitleAlignment;
        }
        private void set_6_SfRibbon_TitleAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.TitleAlignment = (global::Windows.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_7_SfRibbon_Icon(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.Icon;
        }
        private void set_7_SfRibbon_Icon(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.Icon = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_8_SfRibbon_SelectedIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.SelectedIndex;
        }
        private void set_8_SfRibbon_SelectedIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_9_SfRibbon_SelectedItem(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.SelectedItem;
        }
        private void set_9_SfRibbon_SelectedItem(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.SelectedItem = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbonTab)Value;
        }
        private object get_10_SfRibbon_QuickAccessToolBar(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.QuickAccessToolBar;
        }
        private void set_10_SfRibbon_QuickAccessToolBar(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.QuickAccessToolBar = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.QuickAccessToolBar)Value;
        }
        private object get_11_SfRibbon_AccentBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.AccentBrush;
        }
        private void set_11_SfRibbon_AccentBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.AccentBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_12_SfRibbon_TabPanelItem(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.TabPanelItem;
        }
        private void set_12_SfRibbon_TabPanelItem(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.TabPanelItem = (global::System.Object)Value;
        }
        private object get_13_SfRibbon_QATVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.QATVisibility;
        }
        private void set_13_SfRibbon_QATVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.QATVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_14_SfRibbon_TabPanelVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.TabPanelVisibility;
        }
        private void set_14_SfRibbon_TabPanelVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.TabPanelVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_15_SfRibbon_ToggleButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.ToggleButtonVisibility;
        }
        private void set_15_SfRibbon_ToggleButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.ToggleButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_16_SfRibbon_BackStage(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.BackStage;
        }
        private void set_16_SfRibbon_BackStage(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.BackStage = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfBackstage)Value;
        }
        private object get_17_SfRibbon_RibbonState(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.RibbonState;
        }
        private void set_17_SfRibbon_RibbonState(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.RibbonState = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.RibbonState)Value;
        }
        private object get_18_SfRibbon_IsQATBelow(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.IsQATBelow;
        }
        private void set_18_SfRibbon_IsQATBelow(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.IsQATBelow = (global::System.Boolean)Value;
        }
        private object get_19_SfRibbon_BackStageWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.BackStageWidth;
        }
        private void set_19_SfRibbon_BackStageWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.BackStageWidth = (global::System.Double)Value;
        }
        private object get_20_SfRibbon_BackStageHeader(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.BackStageHeader;
        }
        private void set_20_SfRibbon_BackStageHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.BackStageHeader = (global::System.Object)Value;
        }
        private object get_21_SfRibbon_RibbonTabPopupWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            return that.RibbonTabPopupWidth;
        }
        private void set_21_SfRibbon_RibbonTabPopupWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon)instance;
            that.RibbonTabPopupWidth = (global::System.Double)Value;
        }
        private object get_22_SfSpreadsheet_SelectedTabIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.SelectedTabIndex;
        }
        private void set_22_SfSpreadsheet_SelectedTabIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.SelectedTabIndex = (global::System.Int32)Value;
        }
        private object get_23_SfSpreadsheet_SelectedTabItem(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.SelectedTabItem;
        }
        private void set_23_SfSpreadsheet_SelectedTabItem(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.SelectedTabItem = (global::System.Object)Value;
        }
        private object get_24_SfSpreadsheet_FormulaBarVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.FormulaBarVisibility;
        }
        private void set_24_SfSpreadsheet_FormulaBarVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.FormulaBarVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_25_SfSpreadsheet_Workbook(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.Workbook;
        }
        private void set_25_SfSpreadsheet_Workbook(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.Workbook = (global::Syncfusion.XlsIO.IWorkbook)Value;
        }
        private object get_26_SfSpreadsheet_CopyPaste(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.CopyPaste;
        }
        private void set_26_SfSpreadsheet_CopyPaste(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.CopyPaste = (global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste)Value;
        }
        private object get_27_SfSpreadsheet_GraphicCopyPaste(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.GraphicCopyPaste;
        }
        private void set_27_SfSpreadsheet_GraphicCopyPaste(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.GraphicCopyPaste = (global::Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController)Value;
        }
        private object get_28_SfSpreadsheet_SearchManager(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.SearchManager;
        }
        private void set_28_SfSpreadsheet_SearchManager(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.SearchManager = (global::Syncfusion.UI.Xaml.Spreadsheet.SearchManager)Value;
        }
        private object get_29_SfSpreadsheet_GridCollection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.GridCollection;
        }
        private object get_30_SpreadsheetGrid_CurrentCell(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)instance;
            return that.CurrentCell;
        }
        private object get_31_SpreadsheetGrid_Model(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)instance;
            return that.Model;
        }
        private object get_32_SpreadsheetGrid_SheetName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)instance;
            return that.SheetName;
        }
        private object get_33_SpreadsheetGrid_GraphicModel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)instance;
            return that.GraphicModel;
        }
        private object get_34_SpreadsheetGrid_Worksheet(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)instance;
            return that.Worksheet;
        }
        private object get_35_SpreadsheetGrid_CellRenderers(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)instance;
            return that.CellRenderers;
        }
        private object get_36_SpreadsheetGrid_FillSeriesController(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)instance;
            return that.FillSeriesController;
        }
        private void set_36_SpreadsheetGrid_FillSeriesController(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)instance;
            that.FillSeriesController = (global::Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController)Value;
        }
        private object get_37_SfCellGrid_CreateGridColumn(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.CreateGridColumn;
        }
        private void set_37_SfCellGrid_CreateGridColumn(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.CreateGridColumn = (global::System.Func<global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid, global::Syncfusion.UI.Xaml.CellGrid.GridColumn>)Value;
        }
        private object get_38_SfCellGrid_SelectionController(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.SelectionController;
        }
        private void set_38_SfCellGrid_SelectionController(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.SelectionController = (global::Syncfusion.UI.Xaml.CellGrid.SelectionController)Value;
        }
        private object get_39_SfCellGrid_AutoScroller(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.AutoScroller;
        }
        private object get_40_SfCellGrid_SelectedRanges(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.SelectedRanges;
        }
        private void set_40_SfCellGrid_SelectedRanges(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.SelectedRanges = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList)Value;
        }
        private object get_41_GridRangeInfo_RangeType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.RangeType;
        }
        private object get_42_GridRangeInfo_IsTable(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.IsTable;
        }
        private object get_43_GridRangeInfo_IsRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.IsRows;
        }
        private object get_44_GridRangeInfo_IsCols(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.IsCols;
        }
        private object get_45_GridRangeInfo_IsCells(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.IsCells;
        }
        private object get_46_GridRangeInfo_Top(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.Top;
        }
        private object get_47_GridRangeInfo_Left(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.Left;
        }
        private object get_48_GridRangeInfo_Bottom(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.Bottom;
        }
        private object get_49_GridRangeInfo_Right(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.Right;
        }
        private object get_50_GridRangeInfo_IsEmpty(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.IsEmpty;
        }
        private object get_51_GridRangeInfo_Width(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.Width;
        }
        private object get_52_GridRangeInfo_Height(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.Height;
        }
        private object get_53_GridRangeInfo_Info(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)instance;
            return that.Info;
        }
        private object get_54_SfCellGrid_EditTrigger(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.EditTrigger;
        }
        private void set_54_SfCellGrid_EditTrigger(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.EditTrigger = (global::Syncfusion.UI.Xaml.CellGrid.Helpers.EditTrigger)Value;
        }
        private object get_55_SfCellGrid_EditorSelectionBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.EditorSelectionBehavior;
        }
        private void set_55_SfCellGrid_EditorSelectionBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.EditorSelectionBehavior = (global::Syncfusion.UI.Xaml.CellGrid.Helpers.EditorSelectionBehavior)Value;
        }
        private object get_56_SfCellGrid_FormulaEngine(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.FormulaEngine;
        }
        private object get_57_SfCellGrid_CopyPaste(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.CopyPaste;
        }
        private object get_58_SfCellGrid_RowCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.RowCount;
        }
        private void set_58_SfCellGrid_RowCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.RowCount = (global::System.Int32)Value;
        }
        private object get_59_SfCellGrid_ColumnCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.ColumnCount;
        }
        private void set_59_SfCellGrid_ColumnCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.ColumnCount = (global::System.Int32)Value;
        }
        private object get_60_SfCellGrid_FrozenRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.FrozenRows;
        }
        private void set_60_SfCellGrid_FrozenRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.FrozenRows = (global::System.Int32)Value;
        }
        private object get_61_SfCellGrid_FrozenColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.FrozenColumns;
        }
        private void set_61_SfCellGrid_FrozenColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.FrozenColumns = (global::System.Int32)Value;
        }
        private object get_62_SfCellGrid_FooterRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.FooterRows;
        }
        private void set_62_SfCellGrid_FooterRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.FooterRows = (global::System.Int32)Value;
        }
        private object get_63_SfCellGrid_FooterColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.FooterColumns;
        }
        private void set_63_SfCellGrid_FooterColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.FooterColumns = (global::System.Int32)Value;
        }
        private object get_64_SfCellGrid_HeaderRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.HeaderRows;
        }
        private void set_64_SfCellGrid_HeaderRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.HeaderRows = (global::System.Int32)Value;
        }
        private object get_65_SfCellGrid_HeaderColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.HeaderColumns;
        }
        private void set_65_SfCellGrid_HeaderColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.HeaderColumns = (global::System.Int32)Value;
        }
        private object get_66_SfCellGrid_DefaultColumnWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.DefaultColumnWidth;
        }
        private void set_66_SfCellGrid_DefaultColumnWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.DefaultColumnWidth = (global::System.Double)Value;
        }
        private object get_67_SfCellGrid_DefaultRowHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.DefaultRowHeight;
        }
        private void set_67_SfCellGrid_DefaultRowHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.DefaultRowHeight = (global::System.Double)Value;
        }
        private object get_68_SfCellGrid_RowHeights(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.RowHeights;
        }
        private object get_69_SfCellGrid_ColumnWidths(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.ColumnWidths;
        }
        private object get_70_SfCellGrid_ShowGridLines(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.ShowGridLines;
        }
        private void set_70_SfCellGrid_ShowGridLines(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.ShowGridLines = (global::System.Boolean)Value;
        }
        private object get_71_SfCellGrid_GridLineColor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.GridLineColor;
        }
        private void set_71_SfCellGrid_GridLineColor(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.GridLineColor = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_72_SfCellGrid_SelectionBorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.SelectionBorderThickness;
        }
        private void set_72_SfCellGrid_SelectionBorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.SelectionBorderThickness = (global::System.Double)Value;
        }
        private object get_73_SfCellGrid_SelectionBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.SelectionBorderBrush;
        }
        private void set_73_SfCellGrid_SelectionBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.SelectionBorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_74_SfCellGrid_SelectionBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.SelectionBrush;
        }
        private void set_74_SfCellGrid_SelectionBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.SelectionBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_75_SfCellGrid_CoveredCells(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.CoveredCells;
        }
        private object get_76_CoveredCellInfo_SpanWholeRow(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo)instance;
            return that.SpanWholeRow;
        }
        private void set_76_CoveredCellInfo_SpanWholeRow(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo)instance;
            that.SpanWholeRow = (global::System.Boolean)Value;
        }
        private object get_77_CoveredCellInfo_SpanWholeColumn(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo)instance;
            return that.SpanWholeColumn;
        }
        private void set_77_CoveredCellInfo_SpanWholeColumn(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo)instance;
            that.SpanWholeColumn = (global::System.Boolean)Value;
        }
        private object get_78_CellSpanInfo_ClipRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfo)instance;
            return that.ClipRows;
        }
        private void set_78_CellSpanInfo_ClipRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfo)instance;
            that.ClipRows = (global::System.Boolean)Value;
        }
        private object get_79_CellSpanInfo_ClipColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfo)instance;
            return that.ClipColumns;
        }
        private void set_79_CellSpanInfo_ClipColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfo)instance;
            that.ClipColumns = (global::System.Boolean)Value;
        }
        private object get_80_CellSpanInfoBase_Top(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase)instance;
            return that.Top;
        }
        private object get_81_CellSpanInfoBase_Left(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase)instance;
            return that.Left;
        }
        private object get_82_CellSpanInfoBase_Bottom(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase)instance;
            return that.Bottom;
        }
        private object get_83_CellSpanInfoBase_Right(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase)instance;
            return that.Right;
        }
        private object get_84_CellSpanInfoBase_Width(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase)instance;
            return that.Width;
        }
        private object get_85_CellSpanInfoBase_Height(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase)instance;
            return that.Height;
        }
        private object get_86_SfCellGrid_AllowEditing(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.AllowEditing;
        }
        private void set_86_SfCellGrid_AllowEditing(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.AllowEditing = (global::System.Boolean)Value;
        }
        private object get_87_SfCellGrid_AllowSelection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.AllowSelection;
        }
        private void set_87_SfCellGrid_AllowSelection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.AllowSelection = (global::System.Boolean)Value;
        }
        private object get_88_SfCellGrid_ColumnResizingController(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.ColumnResizingController;
        }
        private void set_88_SfCellGrid_ColumnResizingController(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.ColumnResizingController = (global::Syncfusion.UI.Xaml.CellGrid.ColumnResizingController)Value;
        }
        private object get_89_SfCellGrid_RowResizingController(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.RowResizingController;
        }
        private void set_89_SfCellGrid_RowResizingController(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.RowResizingController = (global::Syncfusion.UI.Xaml.CellGrid.RowResizingController)Value;
        }
        private object get_90_SfCellGrid_AllowRowResize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.AllowRowResize;
        }
        private void set_90_SfCellGrid_AllowRowResize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.AllowRowResize = (global::System.Boolean)Value;
        }
        private object get_91_SfCellGrid_AllowColumnResize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.AllowColumnResize;
        }
        private void set_91_SfCellGrid_AllowColumnResize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.AllowColumnResize = (global::System.Boolean)Value;
        }
        private object get_92_SfCellGrid_AllowHiddenRowResize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.AllowHiddenRowResize;
        }
        private void set_92_SfCellGrid_AllowHiddenRowResize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.AllowHiddenRowResize = (global::System.Boolean)Value;
        }
        private object get_93_SfCellGrid_AllowHiddenColumnResize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.AllowHiddenColumnResize;
        }
        private void set_93_SfCellGrid_AllowHiddenColumnResize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.AllowHiddenColumnResize = (global::System.Boolean)Value;
        }
        private object get_94_SfCellGrid_ShowComment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.ShowComment;
        }
        private void set_94_SfCellGrid_ShowComment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.ShowComment = (global::System.Boolean)Value;
        }
        private object get_95_SfCellGrid_ShowTooltip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.ShowTooltip;
        }
        private void set_95_SfCellGrid_ShowTooltip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.ShowTooltip = (global::System.Boolean)Value;
        }
        private object get_96_SfCellGrid_AllowFloatingCell(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.AllowFloatingCell;
        }
        private void set_96_SfCellGrid_AllowFloatingCell(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.AllowFloatingCell = (global::System.Boolean)Value;
        }
        private object get_97_SfCellGrid_AllowFloatingCellInEdit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.AllowFloatingCellInEdit;
        }
        private void set_97_SfCellGrid_AllowFloatingCellInEdit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.AllowFloatingCellInEdit = (global::System.Boolean)Value;
        }
        private object get_98_SfCellGrid_AllowExcelLikeKeyNavigation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.AllowExcelLikeKeyNavigation;
        }
        private void set_98_SfCellGrid_AllowExcelLikeKeyNavigation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.AllowExcelLikeKeyNavigation = (global::System.Boolean)Value;
        }
        private object get_99_SfCellGrid_ScrollRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.ScrollRows;
        }
        private object get_100_SfCellGrid_ScrollColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.ScrollColumns;
        }
        private object get_101_SfCellGrid_CellContextMenu(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.CellContextMenu;
        }
        private void set_101_SfCellGrid_CellContextMenu(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.CellContextMenu = (global::Syncfusion.UI.Xaml.CellGrid.ContextMenu)Value;
        }
        private object get_102_SfCellGrid_AllowEditorsContextMenu(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            return that.AllowEditorsContextMenu;
        }
        private void set_102_SfCellGrid_AllowEditorsContextMenu(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid)instance;
            that.AllowEditorsContextMenu = (global::System.Boolean)Value;
        }
        private object get_103_SfSpreadsheet_AllowZooming(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.AllowZooming;
        }
        private void set_103_SfSpreadsheet_AllowZooming(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.AllowZooming = (global::System.Boolean)Value;
        }
        private object get_104_SfSpreadsheet_AllowCellContextMenu(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.AllowCellContextMenu;
        }
        private void set_104_SfSpreadsheet_AllowCellContextMenu(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.AllowCellContextMenu = (global::System.Boolean)Value;
        }
        private object get_105_SfSpreadsheet_Commands(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.Commands;
        }
        private void set_105_SfSpreadsheet_Commands(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.Commands = (global::Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands)Value;
        }
        private object get_106_SfSpreadsheet_HistoryManager(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.HistoryManager;
        }
        private object get_107_SfSpreadsheet_FileName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.FileName;
        }
        private void set_107_SfSpreadsheet_FileName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.FileName = (global::System.String)Value;
        }
        private object get_108_SfSpreadsheet_AllowExtendRowColumnCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.AllowExtendRowColumnCount;
        }
        private void set_108_SfSpreadsheet_AllowExtendRowColumnCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.AllowExtendRowColumnCount = (global::System.Boolean)Value;
        }
        private object get_109_SfSpreadsheet_DefaultRowCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.DefaultRowCount;
        }
        private void set_109_SfSpreadsheet_DefaultRowCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.DefaultRowCount = (global::System.Int32)Value;
        }
        private object get_110_SfSpreadsheet_DefaultColumnCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.DefaultColumnCount;
        }
        private void set_110_SfSpreadsheet_DefaultColumnCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.DefaultColumnCount = (global::System.Int32)Value;
        }
        private object get_111_SfSpreadsheet_DisplayAlerts(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.DisplayAlerts;
        }
        private void set_111_SfSpreadsheet_DisplayAlerts(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.DisplayAlerts = (global::System.Boolean)Value;
        }
        private object get_112_SfSpreadsheet_ActiveGrid(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.ActiveGrid;
        }
        private object get_113_SfSpreadsheet_ActiveSheet(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.ActiveSheet;
        }
        private void set_113_SfSpreadsheet_ActiveSheet(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.ActiveSheet = (global::Syncfusion.XlsIO.IWorksheet)Value;
        }
        private object get_114_SfSpreadsheet_CurrentCellRange(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.CurrentCellRange;
        }
        private object get_115_SfSpreadsheet_CurrentCellStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.CurrentCellStyle;
        }
        private object get_116_SfSpreadsheet_CurrentCellValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.CurrentCellValue;
        }
        private object get_117_SfSpreadsheet_FormulaRangeSelectionController(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.FormulaRangeSelectionController;
        }
        private void set_117_SfSpreadsheet_FormulaRangeSelectionController(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.FormulaRangeSelectionController = (global::Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController)Value;
        }
        private object get_118_SfSpreadsheet_AllowFormulaRangeSelection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.AllowFormulaRangeSelection;
        }
        private void set_118_SfSpreadsheet_AllowFormulaRangeSelection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.AllowFormulaRangeSelection = (global::System.Boolean)Value;
        }
        private object get_119_SfSpreadsheet_ShowBusyIndicator(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            return that.ShowBusyIndicator;
        }
        private void set_119_SfSpreadsheet_ShowBusyIndicator(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)instance;
            that.ShowBusyIndicator = (global::System.Boolean)Value;
        }
        private object get_120_SampleLayout_Header(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Header;
        }
        private void set_120_SampleLayout_Header(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Header = (global::System.String)Value;
        }
        private object get_121_SampleLayout_Sample(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Sample;
        }
        private void set_121_SampleLayout_Sample(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Sample = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_122_SampleLayout_Setting(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Setting;
        }
        private void set_122_SampleLayout_Setting(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Setting = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_123_SampleLayout_OptionVisibility(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.OptionVisibility;
        }
        private void set_123_SampleLayout_OptionVisibility(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.OptionVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_124_SampleLayout_FontIcons(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.FontIcons;
        }
        private void set_124_SampleLayout_FontIcons(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.FontIcons = (global::System.String)Value;
        }
        private object get_125_SampleLayout_Pathstring(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Pathstring;
        }
        private void set_125_SampleLayout_Pathstring(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Pathstring = (global::System.String)Value;
        }
        private object get_126_SampleLayout_ClickCommand(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.ClickCommand;
        }
        private object get_127_SfGridSplitter_ShowsPreview(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter)instance;
            return that.ShowsPreview;
        }
        private void set_127_SfGridSplitter_ShowsPreview(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter)instance;
            that.ShowsPreview = (global::System.Boolean)Value;
        }
        private object get_128_SfGridSplitter_PreviewStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter)instance;
            return that.PreviewStyle;
        }
        private void set_128_SfGridSplitter_PreviewStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter)instance;
            that.PreviewStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_129_SfGridSplitter_UpButtonTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter)instance;
            return that.UpButtonTemplate;
        }
        private void set_129_SfGridSplitter_UpButtonTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter)instance;
            that.UpButtonTemplate = (global::Windows.UI.Xaml.Controls.ControlTemplate)Value;
        }
        private object get_130_SfGridSplitter_DownButtonTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter)instance;
            return that.DownButtonTemplate;
        }
        private void set_130_SfGridSplitter_DownButtonTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter)instance;
            that.DownButtonTemplate = (global::Windows.UI.Xaml.Controls.ControlTemplate)Value;
        }
        private object get_131_SfGridSplitter_EnableCollapseButton(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter)instance;
            return that.EnableCollapseButton;
        }
        private void set_131_SfGridSplitter_EnableCollapseButton(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter)instance;
            that.EnableCollapseButton = (global::System.Boolean)Value;
        }
        private object get_132_OutlinesPanel_Orientation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel)instance;
            return that.Orientation;
        }
        private void set_132_OutlinesPanel_Orientation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel)instance;
            that.Orientation = (global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion)Value;
        }
        private object get_133_OutlinesPanel_SfSpreadsheet(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel)instance;
            return that.SfSpreadsheet;
        }
        private void set_133_OutlinesPanel_SfSpreadsheet(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel)instance;
            that.SfSpreadsheet = (global::Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)Value;
        }
        private object get_134_OutlinesPanel_ActiveGrid(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel)instance;
            return that.ActiveGrid;
        }
        private void set_134_OutlinesPanel_ActiveGrid(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel)instance;
            that.ActiveGrid = (global::Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)Value;
        }
        private object get_135_SfTabControl_CloseButtonType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.CloseButtonType;
        }
        private void set_135_SfTabControl_CloseButtonType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.CloseButtonType = (global::Syncfusion.UI.Xaml.Controls.Navigation.CloseButtonType)Value;
        }
        private object get_136_Selector_SelectedIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Primitives.Selector)instance;
            return that.SelectedIndex;
        }
        private void set_136_Selector_SelectedIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Primitives.Selector)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_137_Selector_SelectedItem(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Primitives.Selector)instance;
            return that.SelectedItem;
        }
        private void set_137_Selector_SelectedItem(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Primitives.Selector)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_138_SfTabControl_TabControlHorizontalTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.TabControlHorizontalTemplate;
        }
        private void set_138_SfTabControl_TabControlHorizontalTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.TabControlHorizontalTemplate = (global::Windows.UI.Xaml.Controls.ControlTemplate)Value;
        }
        private object get_139_SfTabControl_TabScrollButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.TabScrollButtonVisibility;
        }
        private void set_139_SfTabControl_TabScrollButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.TabScrollButtonVisibility = (global::Syncfusion.UI.Xaml.Controls.Navigation.TabScrollButtonVisibility)Value;
        }
        private object get_140_SfTabControl_TabStripPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.TabStripPlacement;
        }
        private void set_140_SfTabControl_TabStripPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.TabStripPlacement = (global::Syncfusion.UI.Xaml.Controls.Navigation.TabStripPlacement)Value;
        }
        private object get_141_SfTabControl_RightHeader(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.RightHeader;
        }
        private void set_141_SfTabControl_RightHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.RightHeader = (global::System.Object)Value;
        }
        private object get_142_SfTabControl_ShowCustomContextMenu(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.ShowCustomContextMenu;
        }
        private void set_142_SfTabControl_ShowCustomContextMenu(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.ShowCustomContextMenu = (global::System.Boolean)Value;
        }
        private object get_143_SfTabControl_ShowContextMenu(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.ShowContextMenu;
        }
        private void set_143_SfTabControl_ShowContextMenu(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.ShowContextMenu = (global::System.Boolean)Value;
        }
        private object get_144_SfTabControl_LeftHeader(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.LeftHeader;
        }
        private void set_144_SfTabControl_LeftHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.LeftHeader = (global::System.Object)Value;
        }
        private object get_145_SfTabControl_DisableTabItemContentUnload(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.DisableTabItemContentUnload;
        }
        private void set_145_SfTabControl_DisableTabItemContentUnload(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.DisableTabItemContentUnload = (global::System.Boolean)Value;
        }
        private object get_146_SfTabControl_HeaderFontSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.HeaderFontSize;
        }
        private void set_146_SfTabControl_HeaderFontSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.HeaderFontSize = (global::System.Double)Value;
        }
        private object get_147_SfTabControl_ShowIcon(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.ShowIcon;
        }
        private void set_147_SfTabControl_ShowIcon(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.ShowIcon = (global::System.Boolean)Value;
        }
        private object get_148_SfTabControl_HighlightOnSelection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.HighlightOnSelection;
        }
        private void set_148_SfTabControl_HighlightOnSelection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.HighlightOnSelection = (global::System.Boolean)Value;
        }
        private object get_149_SfTabControl_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.HeaderTemplate;
        }
        private void set_149_SfTabControl_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_150_SfTabControl_HeaderTemplateSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.HeaderTemplateSelector;
        }
        private void set_150_SfTabControl_HeaderTemplateSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.HeaderTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_151_SfTabControl_ContentTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.ContentTemplate;
        }
        private void set_151_SfTabControl_ContentTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.ContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_152_SfTabControl_ContentTransitions(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.ContentTransitions;
        }
        private void set_152_SfTabControl_ContentTransitions(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.ContentTransitions = (global::Windows.UI.Xaml.Media.Animation.TransitionCollection)Value;
        }
        private object get_153_SfTabControl_ContentTemplateSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.ContentTemplateSelector;
        }
        private void set_153_SfTabControl_ContentTemplateSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.ContentTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_154_SfTabControl_PinnedTabScrollButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.PinnedTabScrollButtonVisibility;
        }
        private void set_154_SfTabControl_PinnedTabScrollButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.PinnedTabScrollButtonVisibility = (global::Syncfusion.UI.Xaml.Controls.Navigation.TabScrollButtonVisibility)Value;
        }
        private object get_155_SfTabControl_SelectionStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.SelectionStyle;
        }
        private void set_155_SfTabControl_SelectionStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.SelectionStyle = (global::Syncfusion.UI.Xaml.Controls.Navigation.SelectionStyle)Value;
        }
        private object get_156_SfTabControl_ShowTabstripMenu(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.ShowTabstripMenu;
        }
        private void set_156_SfTabControl_ShowTabstripMenu(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.ShowTabstripMenu = (global::System.Boolean)Value;
        }
        private object get_157_SfTabControl_TabstripMenuItems(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.TabstripMenuItems;
        }
        private void set_157_SfTabControl_TabstripMenuItems(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.TabstripMenuItems = (global::System.Collections.Generic.List<global::System.Object>)Value;
        }
        private object get_158_SfTabControl_TabstripMenuItemTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.TabstripMenuItemTemplate;
        }
        private void set_158_SfTabControl_TabstripMenuItemTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.TabstripMenuItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_159_SfTabControl_TabControlVerticalTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.TabControlVerticalTemplate;
        }
        private void set_159_SfTabControl_TabControlVerticalTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.TabControlVerticalTemplate = (global::Windows.UI.Xaml.Controls.ControlTemplate)Value;
        }
        private object get_160_SfTabControl_EnableSwipeGestures(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            return that.EnableSwipeGestures;
        }
        private void set_160_SfTabControl_EnableSwipeGestures(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl)instance;
            that.EnableSwipeGestures = (global::System.Boolean)Value;
        }
        private object get_161_SetterValueBindingHelper_Type(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Type;
        }
        private void set_161_SetterValueBindingHelper_Type(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Type = (global::System.String)Value;
        }
        private object get_162_SetterValueBindingHelper_Property(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Property;
        }
        private void set_162_SetterValueBindingHelper_Property(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Property = (global::System.String)Value;
        }
        private object get_163_SetterValueBindingHelper_Binding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Binding;
        }
        private void set_163_SetterValueBindingHelper_Binding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Binding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_164_SetterValueBindingHelper_Values(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Values;
        }
        private object get_165_SetterValueBindingHelper_PropertyBinding(object instance)
        {
            return global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.GetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance);
        }
        private void set_165_SetterValueBindingHelper_PropertyBinding(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.SetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance, (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)Value);
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember xamlMember = null;
            global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.Content":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_SfRibbon_Content;
                xamlMember.Setter = set_0_SfRibbon_Content;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.NumberFormatSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "NumberFormatSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_SfSpreadsheetRibbon_NumberFormatSource;
                xamlMember.Setter = set_1_SfSpreadsheetRibbon_NumberFormatSource;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.FontFamilyNames":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FontFamilyNames", "System.Collections.Generic.List`1<String>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_SfSpreadsheetRibbon_FontFamilyNames;
                xamlMember.Setter = set_2_SfSpreadsheetRibbon_FontFamilyNames;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.FontSizeSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FontSizeSource", "Double[]");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_SfSpreadsheetRibbon_FontSizeSource;
                xamlMember.Setter = set_3_SfSpreadsheetRibbon_FontSizeSource;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.SfSpreadsheet":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SfSpreadsheet", "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember.Getter = get_4_SfSpreadsheetRibbon_SfSpreadsheet;
                xamlMember.Setter = set_4_SfSpreadsheetRibbon_SfSpreadsheet;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.Title":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Title", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SfRibbon_Title;
                xamlMember.Setter = set_5_SfRibbon_Title;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.TitleAlignment":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "TitleAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_SfRibbon_TitleAlignment;
                xamlMember.Setter = set_6_SfRibbon_TitleAlignment;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.Icon":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Icon", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_SfRibbon_Icon;
                xamlMember.Setter = set_7_SfRibbon_Icon;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.SelectedIndex":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_SfRibbon_SelectedIndex;
                xamlMember.Setter = set_8_SfRibbon_SelectedIndex;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.SelectedItem":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectedItem", "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbonTab");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_SfRibbon_SelectedItem;
                xamlMember.Setter = set_9_SfRibbon_SelectedItem;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.QuickAccessToolBar":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "QuickAccessToolBar", "Syncfusion.UI.Xaml.Controls.SfRibbon.QuickAccessToolBar");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_SfRibbon_QuickAccessToolBar;
                xamlMember.Setter = set_10_SfRibbon_QuickAccessToolBar;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.AccentBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AccentBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_SfRibbon_AccentBrush;
                xamlMember.Setter = set_11_SfRibbon_AccentBrush;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.TabPanelItem":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "TabPanelItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_SfRibbon_TabPanelItem;
                xamlMember.Setter = set_12_SfRibbon_TabPanelItem;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.QATVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "QATVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_SfRibbon_QATVisibility;
                xamlMember.Setter = set_13_SfRibbon_QATVisibility;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.TabPanelVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "TabPanelVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_SfRibbon_TabPanelVisibility;
                xamlMember.Setter = set_14_SfRibbon_TabPanelVisibility;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.ToggleButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ToggleButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_SfRibbon_ToggleButtonVisibility;
                xamlMember.Setter = set_15_SfRibbon_ToggleButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.BackStage":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "BackStage", "Syncfusion.UI.Xaml.Controls.SfRibbon.SfBackstage");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_SfRibbon_BackStage;
                xamlMember.Setter = set_16_SfRibbon_BackStage;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.RibbonState":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "RibbonState", "Syncfusion.UI.Xaml.Controls.SfRibbon.RibbonState");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_SfRibbon_RibbonState;
                xamlMember.Setter = set_17_SfRibbon_RibbonState;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.IsQATBelow":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "IsQATBelow", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_SfRibbon_IsQATBelow;
                xamlMember.Setter = set_18_SfRibbon_IsQATBelow;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.BackStageWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "BackStageWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_SfRibbon_BackStageWidth;
                xamlMember.Setter = set_19_SfRibbon_BackStageWidth;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.BackStageHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "BackStageHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_SfRibbon_BackStageHeader;
                xamlMember.Setter = set_20_SfRibbon_BackStageHeader;
                break;
            case "Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon.RibbonTabPopupWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.SfRibbon.SfRibbon");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "RibbonTabPopupWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_SfRibbon_RibbonTabPopupWidth;
                xamlMember.Setter = set_21_SfRibbon_RibbonTabPopupWidth;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SelectedTabIndex":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectedTabIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_SfSpreadsheet_SelectedTabIndex;
                xamlMember.Setter = set_22_SfSpreadsheet_SelectedTabIndex;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SelectedTabItem":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectedTabItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_SfSpreadsheet_SelectedTabItem;
                xamlMember.Setter = set_23_SfSpreadsheet_SelectedTabItem;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormulaBarVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FormulaBarVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_SfSpreadsheet_FormulaBarVisibility;
                xamlMember.Setter = set_24_SfSpreadsheet_FormulaBarVisibility;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Workbook":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Workbook", "Syncfusion.XlsIO.IWorkbook");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_SfSpreadsheet_Workbook;
                xamlMember.Setter = set_25_SfSpreadsheet_Workbook;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CopyPaste":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "CopyPaste", "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste");
                xamlMember.Getter = get_26_SfSpreadsheet_CopyPaste;
                xamlMember.Setter = set_26_SfSpreadsheet_CopyPaste;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GraphicCopyPaste":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "GraphicCopyPaste", "Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController");
                xamlMember.Getter = get_27_SfSpreadsheet_GraphicCopyPaste;
                xamlMember.Setter = set_27_SfSpreadsheet_GraphicCopyPaste;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SearchManager":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SearchManager", "Syncfusion.UI.Xaml.Spreadsheet.SearchManager");
                xamlMember.Getter = get_28_SfSpreadsheet_SearchManager;
                xamlMember.Setter = set_28_SfSpreadsheet_SearchManager;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GridCollection":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "GridCollection", "System.Collections.Generic.Dictionary`2<String, Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid>");
                xamlMember.Getter = get_29_SfSpreadsheet_GridCollection;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.CurrentCell":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "CurrentCell", "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell");
                xamlMember.Getter = get_30_SpreadsheetGrid_CurrentCell;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.Model":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Model", "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel");
                xamlMember.Getter = get_31_SpreadsheetGrid_Model;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.SheetName":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SheetName", "String");
                xamlMember.Getter = get_32_SpreadsheetGrid_SheetName;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GraphicModel":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "GraphicModel", "Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel");
                xamlMember.Getter = get_33_SpreadsheetGrid_GraphicModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.Worksheet":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Worksheet", "Syncfusion.XlsIO.IWorksheet");
                xamlMember.Getter = get_34_SpreadsheetGrid_Worksheet;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.CellRenderers":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "CellRenderers", "Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection");
                xamlMember.Getter = get_35_SpreadsheetGrid_CellRenderers;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.FillSeriesController":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FillSeriesController", "Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController");
                xamlMember.Getter = get_36_SpreadsheetGrid_FillSeriesController;
                xamlMember.Setter = set_36_SpreadsheetGrid_FillSeriesController;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CreateGridColumn":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "CreateGridColumn", "System.Func`2<Syncfusion.UI.Xaml.CellGrid.SfCellGrid, Syncfusion.UI.Xaml.CellGrid.GridColumn>");
                xamlMember.Getter = get_37_SfCellGrid_CreateGridColumn;
                xamlMember.Setter = set_37_SfCellGrid_CreateGridColumn;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectionController":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectionController", "Syncfusion.UI.Xaml.CellGrid.SelectionController");
                xamlMember.Getter = get_38_SfCellGrid_SelectionController;
                xamlMember.Setter = set_38_SfCellGrid_SelectionController;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AutoScroller":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AutoScroller", "Syncfusion.UI.Xaml.CellGrid.GridAutoScroller");
                xamlMember.Getter = get_39_SfCellGrid_AutoScroller;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectedRanges":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectedRanges", "Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList");
                xamlMember.Getter = get_40_SfCellGrid_SelectedRanges;
                xamlMember.Setter = set_40_SfCellGrid_SelectedRanges;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.RangeType":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "RangeType", "Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType");
                xamlMember.Getter = get_41_GridRangeInfo_RangeType;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IsTable":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "IsTable", "Boolean");
                xamlMember.Getter = get_42_GridRangeInfo_IsTable;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IsRows":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "IsRows", "Boolean");
                xamlMember.Getter = get_43_GridRangeInfo_IsRows;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IsCols":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "IsCols", "Boolean");
                xamlMember.Getter = get_44_GridRangeInfo_IsCols;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IsCells":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "IsCells", "Boolean");
                xamlMember.Getter = get_45_GridRangeInfo_IsCells;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Top":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Top", "Int32");
                xamlMember.Getter = get_46_GridRangeInfo_Top;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Left":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Left", "Int32");
                xamlMember.Getter = get_47_GridRangeInfo_Left;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Bottom":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Bottom", "Int32");
                xamlMember.Getter = get_48_GridRangeInfo_Bottom;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Right":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Right", "Int32");
                xamlMember.Getter = get_49_GridRangeInfo_Right;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IsEmpty":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "IsEmpty", "Boolean");
                xamlMember.Getter = get_50_GridRangeInfo_IsEmpty;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Width":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Width", "Int32");
                xamlMember.Getter = get_51_GridRangeInfo_Width;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Height":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Height", "Int32");
                xamlMember.Getter = get_52_GridRangeInfo_Height;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Info":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.GridRangeInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Info", "String");
                xamlMember.Getter = get_53_GridRangeInfo_Info;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.EditTrigger":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "EditTrigger", "Syncfusion.UI.Xaml.CellGrid.Helpers.EditTrigger");
                xamlMember.Getter = get_54_SfCellGrid_EditTrigger;
                xamlMember.Setter = set_54_SfCellGrid_EditTrigger;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.EditorSelectionBehavior":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "EditorSelectionBehavior", "Syncfusion.UI.Xaml.CellGrid.Helpers.EditorSelectionBehavior");
                xamlMember.Getter = get_55_SfCellGrid_EditorSelectionBehavior;
                xamlMember.Setter = set_55_SfCellGrid_EditorSelectionBehavior;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FormulaEngine":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FormulaEngine", "Syncfusion.UI.Xaml.CellGrid.FormulaEngine");
                xamlMember.Getter = get_56_SfCellGrid_FormulaEngine;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CopyPaste":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "CopyPaste", "Syncfusion.UI.Xaml.CellGrid.GridCopyPaste");
                xamlMember.Getter = get_57_SfCellGrid_CopyPaste;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.RowCount":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "RowCount", "Int32");
                xamlMember.Getter = get_58_SfCellGrid_RowCount;
                xamlMember.Setter = set_58_SfCellGrid_RowCount;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ColumnCount":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ColumnCount", "Int32");
                xamlMember.Getter = get_59_SfCellGrid_ColumnCount;
                xamlMember.Setter = set_59_SfCellGrid_ColumnCount;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FrozenRows":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FrozenRows", "Int32");
                xamlMember.Getter = get_60_SfCellGrid_FrozenRows;
                xamlMember.Setter = set_60_SfCellGrid_FrozenRows;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FrozenColumns":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FrozenColumns", "Int32");
                xamlMember.Getter = get_61_SfCellGrid_FrozenColumns;
                xamlMember.Setter = set_61_SfCellGrid_FrozenColumns;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FooterRows":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FooterRows", "Int32");
                xamlMember.Getter = get_62_SfCellGrid_FooterRows;
                xamlMember.Setter = set_62_SfCellGrid_FooterRows;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FooterColumns":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FooterColumns", "Int32");
                xamlMember.Getter = get_63_SfCellGrid_FooterColumns;
                xamlMember.Setter = set_63_SfCellGrid_FooterColumns;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.HeaderRows":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "HeaderRows", "Int32");
                xamlMember.Getter = get_64_SfCellGrid_HeaderRows;
                xamlMember.Setter = set_64_SfCellGrid_HeaderRows;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.HeaderColumns":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "HeaderColumns", "Int32");
                xamlMember.Getter = get_65_SfCellGrid_HeaderColumns;
                xamlMember.Setter = set_65_SfCellGrid_HeaderColumns;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.DefaultColumnWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "DefaultColumnWidth", "Double");
                xamlMember.Getter = get_66_SfCellGrid_DefaultColumnWidth;
                xamlMember.Setter = set_66_SfCellGrid_DefaultColumnWidth;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.DefaultRowHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "DefaultRowHeight", "Double");
                xamlMember.Getter = get_67_SfCellGrid_DefaultRowHeight;
                xamlMember.Setter = set_67_SfCellGrid_DefaultRowHeight;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.RowHeights":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "RowHeights", "Syncfusion.UI.Xaml.Grid.ScrollAxis.LineSizeCollection");
                xamlMember.Getter = get_68_SfCellGrid_RowHeights;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ColumnWidths":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ColumnWidths", "Syncfusion.UI.Xaml.Grid.ScrollAxis.LineSizeCollection");
                xamlMember.Getter = get_69_SfCellGrid_ColumnWidths;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ShowGridLines":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ShowGridLines", "Boolean");
                xamlMember.Getter = get_70_SfCellGrid_ShowGridLines;
                xamlMember.Setter = set_70_SfCellGrid_ShowGridLines;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.GridLineColor":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "GridLineColor", "Windows.UI.Xaml.Media.Brush");
                xamlMember.Getter = get_71_SfCellGrid_GridLineColor;
                xamlMember.Setter = set_71_SfCellGrid_GridLineColor;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectionBorderThickness":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectionBorderThickness", "Double");
                xamlMember.Getter = get_72_SfCellGrid_SelectionBorderThickness;
                xamlMember.Setter = set_72_SfCellGrid_SelectionBorderThickness;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectionBorderBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectionBorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.Getter = get_73_SfCellGrid_SelectionBorderBrush;
                xamlMember.Setter = set_73_SfCellGrid_SelectionBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectionBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectionBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.Getter = get_74_SfCellGrid_SelectionBrush;
                xamlMember.Setter = set_74_SfCellGrid_SelectionBrush;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CoveredCells":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "CoveredCells", "Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection");
                xamlMember.Getter = get_75_SfCellGrid_CoveredCells;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo.SpanWholeRow":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SpanWholeRow", "Boolean");
                xamlMember.Getter = get_76_CoveredCellInfo_SpanWholeRow;
                xamlMember.Setter = set_76_CoveredCellInfo_SpanWholeRow;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo.SpanWholeColumn":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SpanWholeColumn", "Boolean");
                xamlMember.Getter = get_77_CoveredCellInfo_SpanWholeColumn;
                xamlMember.Setter = set_77_CoveredCellInfo_SpanWholeColumn;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.CellSpanInfo.ClipRows":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CellSpanInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ClipRows", "Boolean");
                xamlMember.Getter = get_78_CellSpanInfo_ClipRows;
                xamlMember.Setter = set_78_CellSpanInfo_ClipRows;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.CellSpanInfo.ClipColumns":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CellSpanInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ClipColumns", "Boolean");
                xamlMember.Getter = get_79_CellSpanInfo_ClipColumns;
                xamlMember.Setter = set_79_CellSpanInfo_ClipColumns;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Top":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Top", "Int32");
                xamlMember.Getter = get_80_CellSpanInfoBase_Top;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Left":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Left", "Int32");
                xamlMember.Getter = get_81_CellSpanInfoBase_Left;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Bottom":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Bottom", "Int32");
                xamlMember.Getter = get_82_CellSpanInfoBase_Bottom;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Right":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Right", "Int32");
                xamlMember.Getter = get_83_CellSpanInfoBase_Right;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Width":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Width", "Int32");
                xamlMember.Getter = get_84_CellSpanInfoBase_Width;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Height":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Height", "Int32");
                xamlMember.Getter = get_85_CellSpanInfoBase_Height;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowEditing":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowEditing", "Boolean");
                xamlMember.Getter = get_86_SfCellGrid_AllowEditing;
                xamlMember.Setter = set_86_SfCellGrid_AllowEditing;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowSelection":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowSelection", "Boolean");
                xamlMember.Getter = get_87_SfCellGrid_AllowSelection;
                xamlMember.Setter = set_87_SfCellGrid_AllowSelection;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ColumnResizingController":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ColumnResizingController", "Syncfusion.UI.Xaml.CellGrid.ColumnResizingController");
                xamlMember.Getter = get_88_SfCellGrid_ColumnResizingController;
                xamlMember.Setter = set_88_SfCellGrid_ColumnResizingController;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.RowResizingController":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "RowResizingController", "Syncfusion.UI.Xaml.CellGrid.RowResizingController");
                xamlMember.Getter = get_89_SfCellGrid_RowResizingController;
                xamlMember.Setter = set_89_SfCellGrid_RowResizingController;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowRowResize":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowRowResize", "Boolean");
                xamlMember.Getter = get_90_SfCellGrid_AllowRowResize;
                xamlMember.Setter = set_90_SfCellGrid_AllowRowResize;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowColumnResize":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowColumnResize", "Boolean");
                xamlMember.Getter = get_91_SfCellGrid_AllowColumnResize;
                xamlMember.Setter = set_91_SfCellGrid_AllowColumnResize;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowHiddenRowResize":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowHiddenRowResize", "Boolean");
                xamlMember.Getter = get_92_SfCellGrid_AllowHiddenRowResize;
                xamlMember.Setter = set_92_SfCellGrid_AllowHiddenRowResize;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowHiddenColumnResize":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowHiddenColumnResize", "Boolean");
                xamlMember.Getter = get_93_SfCellGrid_AllowHiddenColumnResize;
                xamlMember.Setter = set_93_SfCellGrid_AllowHiddenColumnResize;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ShowComment":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ShowComment", "Boolean");
                xamlMember.Getter = get_94_SfCellGrid_ShowComment;
                xamlMember.Setter = set_94_SfCellGrid_ShowComment;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ShowTooltip":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ShowTooltip", "Boolean");
                xamlMember.Getter = get_95_SfCellGrid_ShowTooltip;
                xamlMember.Setter = set_95_SfCellGrid_ShowTooltip;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowFloatingCell":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowFloatingCell", "Boolean");
                xamlMember.Getter = get_96_SfCellGrid_AllowFloatingCell;
                xamlMember.Setter = set_96_SfCellGrid_AllowFloatingCell;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowFloatingCellInEdit":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowFloatingCellInEdit", "Boolean");
                xamlMember.Getter = get_97_SfCellGrid_AllowFloatingCellInEdit;
                xamlMember.Setter = set_97_SfCellGrid_AllowFloatingCellInEdit;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowExcelLikeKeyNavigation":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowExcelLikeKeyNavigation", "Boolean");
                xamlMember.Getter = get_98_SfCellGrid_AllowExcelLikeKeyNavigation;
                xamlMember.Setter = set_98_SfCellGrid_AllowExcelLikeKeyNavigation;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ScrollRows":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ScrollRows", "Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisBase");
                xamlMember.Getter = get_99_SfCellGrid_ScrollRows;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ScrollColumns":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ScrollColumns", "Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisBase");
                xamlMember.Getter = get_100_SfCellGrid_ScrollColumns;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CellContextMenu":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "CellContextMenu", "Syncfusion.UI.Xaml.CellGrid.ContextMenu");
                xamlMember.Getter = get_101_SfCellGrid_CellContextMenu;
                xamlMember.Setter = set_101_SfCellGrid_CellContextMenu;
                break;
            case "Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowEditorsContextMenu":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowEditorsContextMenu", "Boolean");
                xamlMember.Getter = get_102_SfCellGrid_AllowEditorsContextMenu;
                xamlMember.Setter = set_102_SfCellGrid_AllowEditorsContextMenu;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowZooming":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowZooming", "Boolean");
                xamlMember.Getter = get_103_SfSpreadsheet_AllowZooming;
                xamlMember.Setter = set_103_SfSpreadsheet_AllowZooming;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowCellContextMenu":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowCellContextMenu", "Boolean");
                xamlMember.Getter = get_104_SfSpreadsheet_AllowCellContextMenu;
                xamlMember.Setter = set_104_SfSpreadsheet_AllowCellContextMenu;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Commands":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Commands", "Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands");
                xamlMember.Getter = get_105_SfSpreadsheet_Commands;
                xamlMember.Setter = set_105_SfSpreadsheet_Commands;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HistoryManager":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "HistoryManager", "Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager");
                xamlMember.Getter = get_106_SfSpreadsheet_HistoryManager;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FileName":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FileName", "String");
                xamlMember.Getter = get_107_SfSpreadsheet_FileName;
                xamlMember.Setter = set_107_SfSpreadsheet_FileName;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowExtendRowColumnCount":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowExtendRowColumnCount", "Boolean");
                xamlMember.Getter = get_108_SfSpreadsheet_AllowExtendRowColumnCount;
                xamlMember.Setter = set_108_SfSpreadsheet_AllowExtendRowColumnCount;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DefaultRowCount":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "DefaultRowCount", "Int32");
                xamlMember.Getter = get_109_SfSpreadsheet_DefaultRowCount;
                xamlMember.Setter = set_109_SfSpreadsheet_DefaultRowCount;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DefaultColumnCount":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "DefaultColumnCount", "Int32");
                xamlMember.Getter = get_110_SfSpreadsheet_DefaultColumnCount;
                xamlMember.Setter = set_110_SfSpreadsheet_DefaultColumnCount;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DisplayAlerts":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "DisplayAlerts", "Boolean");
                xamlMember.Getter = get_111_SfSpreadsheet_DisplayAlerts;
                xamlMember.Setter = set_111_SfSpreadsheet_DisplayAlerts;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ActiveGrid":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ActiveGrid", "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid");
                xamlMember.Getter = get_112_SfSpreadsheet_ActiveGrid;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ActiveSheet":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ActiveSheet", "Syncfusion.XlsIO.IWorksheet");
                xamlMember.Getter = get_113_SfSpreadsheet_ActiveSheet;
                xamlMember.Setter = set_113_SfSpreadsheet_ActiveSheet;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CurrentCellRange":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "CurrentCellRange", "Syncfusion.XlsIO.IRange");
                xamlMember.Getter = get_114_SfSpreadsheet_CurrentCellRange;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CurrentCellStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "CurrentCellStyle", "Syncfusion.XlsIO.IStyle");
                xamlMember.Getter = get_115_SfSpreadsheet_CurrentCellStyle;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CurrentCellValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "CurrentCellValue", "String");
                xamlMember.Getter = get_116_SfSpreadsheet_CurrentCellValue;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormulaRangeSelectionController":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FormulaRangeSelectionController", "Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController");
                xamlMember.Getter = get_117_SfSpreadsheet_FormulaRangeSelectionController;
                xamlMember.Setter = set_117_SfSpreadsheet_FormulaRangeSelectionController;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowFormulaRangeSelection":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "AllowFormulaRangeSelection", "Boolean");
                xamlMember.Getter = get_118_SfSpreadsheet_AllowFormulaRangeSelection;
                xamlMember.Setter = set_118_SfSpreadsheet_AllowFormulaRangeSelection;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ShowBusyIndicator":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ShowBusyIndicator", "Boolean");
                xamlMember.Getter = get_119_SfSpreadsheet_ShowBusyIndicator;
                xamlMember.Setter = set_119_SfSpreadsheet_ShowBusyIndicator;
                break;
            case "Common.SampleLayout.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Header", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_SampleLayout_Header;
                xamlMember.Setter = set_120_SampleLayout_Header;
                break;
            case "Common.SampleLayout.Sample":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Sample", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_SampleLayout_Sample;
                xamlMember.Setter = set_121_SampleLayout_Sample;
                break;
            case "Common.SampleLayout.Setting":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Setting", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_SampleLayout_Setting;
                xamlMember.Setter = set_122_SampleLayout_Setting;
                break;
            case "Common.SampleLayout.OptionVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "OptionVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_SampleLayout_OptionVisibility;
                xamlMember.Setter = set_123_SampleLayout_OptionVisibility;
                break;
            case "Common.SampleLayout.FontIcons":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "FontIcons", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_SampleLayout_FontIcons;
                xamlMember.Setter = set_124_SampleLayout_FontIcons;
                break;
            case "Common.SampleLayout.Pathstring":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Pathstring", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_SampleLayout_Pathstring;
                xamlMember.Setter = set_125_SampleLayout_Pathstring;
                break;
            case "Common.SampleLayout.ClickCommand":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ClickCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_126_SampleLayout_ClickCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter.ShowsPreview":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ShowsPreview", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_SfGridSplitter_ShowsPreview;
                xamlMember.Setter = set_127_SfGridSplitter_ShowsPreview;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter.PreviewStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "PreviewStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_SfGridSplitter_PreviewStyle;
                xamlMember.Setter = set_128_SfGridSplitter_PreviewStyle;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter.UpButtonTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "UpButtonTemplate", "Windows.UI.Xaml.Controls.ControlTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_SfGridSplitter_UpButtonTemplate;
                xamlMember.Setter = set_129_SfGridSplitter_UpButtonTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter.DownButtonTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "DownButtonTemplate", "Windows.UI.Xaml.Controls.ControlTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_SfGridSplitter_DownButtonTemplate;
                xamlMember.Setter = set_130_SfGridSplitter_DownButtonTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter.EnableCollapseButton":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfGridSplitter");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "EnableCollapseButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_SfGridSplitter_EnableCollapseButton;
                xamlMember.Setter = set_131_SfGridSplitter_EnableCollapseButton;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.Orientation":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Orientation", "Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion");
                xamlMember.Getter = get_132_OutlinesPanel_Orientation;
                xamlMember.Setter = set_132_OutlinesPanel_Orientation;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.SfSpreadsheet":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SfSpreadsheet", "Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet");
                xamlMember.Getter = get_133_OutlinesPanel_SfSpreadsheet;
                xamlMember.Setter = set_133_OutlinesPanel_SfSpreadsheet;
                break;
            case "Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.ActiveGrid":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ActiveGrid", "Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid");
                xamlMember.Getter = get_134_OutlinesPanel_ActiveGrid;
                xamlMember.Setter = set_134_OutlinesPanel_ActiveGrid;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.CloseButtonType":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "CloseButtonType", "Syncfusion.UI.Xaml.Controls.Navigation.CloseButtonType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_SfTabControl_CloseButtonType;
                xamlMember.Setter = set_135_SfTabControl_CloseButtonType;
                break;
            case "Syncfusion.UI.Xaml.Primitives.Selector.SelectedIndex":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Primitives.Selector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_Selector_SelectedIndex;
                xamlMember.Setter = set_136_Selector_SelectedIndex;
                break;
            case "Syncfusion.UI.Xaml.Primitives.Selector.SelectedItem":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Primitives.Selector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_Selector_SelectedItem;
                xamlMember.Setter = set_137_Selector_SelectedItem;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.TabControlHorizontalTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "TabControlHorizontalTemplate", "Windows.UI.Xaml.Controls.ControlTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_SfTabControl_TabControlHorizontalTemplate;
                xamlMember.Setter = set_138_SfTabControl_TabControlHorizontalTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.TabScrollButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "TabScrollButtonVisibility", "Syncfusion.UI.Xaml.Controls.Navigation.TabScrollButtonVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_SfTabControl_TabScrollButtonVisibility;
                xamlMember.Setter = set_139_SfTabControl_TabScrollButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.TabStripPlacement":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "TabStripPlacement", "Syncfusion.UI.Xaml.Controls.Navigation.TabStripPlacement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_SfTabControl_TabStripPlacement;
                xamlMember.Setter = set_140_SfTabControl_TabStripPlacement;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.RightHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "RightHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_SfTabControl_RightHeader;
                xamlMember.Setter = set_141_SfTabControl_RightHeader;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.ShowCustomContextMenu":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ShowCustomContextMenu", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_SfTabControl_ShowCustomContextMenu;
                xamlMember.Setter = set_142_SfTabControl_ShowCustomContextMenu;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.ShowContextMenu":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ShowContextMenu", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_SfTabControl_ShowContextMenu;
                xamlMember.Setter = set_143_SfTabControl_ShowContextMenu;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.LeftHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "LeftHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_SfTabControl_LeftHeader;
                xamlMember.Setter = set_144_SfTabControl_LeftHeader;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.DisableTabItemContentUnload":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "DisableTabItemContentUnload", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_SfTabControl_DisableTabItemContentUnload;
                xamlMember.Setter = set_145_SfTabControl_DisableTabItemContentUnload;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.HeaderFontSize":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "HeaderFontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_SfTabControl_HeaderFontSize;
                xamlMember.Setter = set_146_SfTabControl_HeaderFontSize;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.ShowIcon":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ShowIcon", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_SfTabControl_ShowIcon;
                xamlMember.Setter = set_147_SfTabControl_ShowIcon;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.HighlightOnSelection":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "HighlightOnSelection", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_SfTabControl_HighlightOnSelection;
                xamlMember.Setter = set_148_SfTabControl_HighlightOnSelection;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.HeaderTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_SfTabControl_HeaderTemplate;
                xamlMember.Setter = set_149_SfTabControl_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.HeaderTemplateSelector":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "HeaderTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_150_SfTabControl_HeaderTemplateSelector;
                xamlMember.Setter = set_150_SfTabControl_HeaderTemplateSelector;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.ContentTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_SfTabControl_ContentTemplate;
                xamlMember.Setter = set_151_SfTabControl_ContentTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.ContentTransitions":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ContentTransitions", "Windows.UI.Xaml.Media.Animation.TransitionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_SfTabControl_ContentTransitions;
                xamlMember.Setter = set_152_SfTabControl_ContentTransitions;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.ContentTemplateSelector":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ContentTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_SfTabControl_ContentTemplateSelector;
                xamlMember.Setter = set_153_SfTabControl_ContentTemplateSelector;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.PinnedTabScrollButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "PinnedTabScrollButtonVisibility", "Syncfusion.UI.Xaml.Controls.Navigation.TabScrollButtonVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_SfTabControl_PinnedTabScrollButtonVisibility;
                xamlMember.Setter = set_154_SfTabControl_PinnedTabScrollButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.SelectionStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "SelectionStyle", "Syncfusion.UI.Xaml.Controls.Navigation.SelectionStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_SfTabControl_SelectionStyle;
                xamlMember.Setter = set_155_SfTabControl_SelectionStyle;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.ShowTabstripMenu":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "ShowTabstripMenu", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_SfTabControl_ShowTabstripMenu;
                xamlMember.Setter = set_156_SfTabControl_ShowTabstripMenu;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.TabstripMenuItems":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "TabstripMenuItems", "System.Collections.Generic.List`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_157_SfTabControl_TabstripMenuItems;
                xamlMember.Setter = set_157_SfTabControl_TabstripMenuItems;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.TabstripMenuItemTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "TabstripMenuItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_SfTabControl_TabstripMenuItemTemplate;
                xamlMember.Setter = set_158_SfTabControl_TabstripMenuItemTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.TabControlVerticalTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "TabControlVerticalTemplate", "Windows.UI.Xaml.Controls.ControlTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_SfTabControl_TabControlVerticalTemplate;
                xamlMember.Setter = set_159_SfTabControl_TabControlVerticalTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl.EnableSwipeGestures":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Navigation.SfTabControl");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "EnableSwipeGestures", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_SfTabControl_EnableSwipeGestures;
                xamlMember.Setter = set_160_SfTabControl_EnableSwipeGestures;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Type":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Type", "String");
                xamlMember.Getter = get_161_SetterValueBindingHelper_Type;
                xamlMember.Setter = set_161_SetterValueBindingHelper_Type;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Property":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Property", "String");
                xamlMember.Getter = get_162_SetterValueBindingHelper_Property;
                xamlMember.Setter = set_162_SetterValueBindingHelper_Property;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Binding":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Binding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_163_SetterValueBindingHelper_Binding;
                xamlMember.Setter = set_163_SetterValueBindingHelper_Binding;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Values":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "Values", "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>");
                xamlMember.Getter = get_164_SetterValueBindingHelper_Values;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.PropertyBinding":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlMember(this, "PropertyBinding", "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_165_SetterValueBindingHelper_PropertyBinding;
                xamlMember.Setter = set_165_SetterValueBindingHelper_PropertyBinding;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlSystemBaseType
    {
        global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Syncfusion.SampleBrowser.UWP.SfSpreadsheet.Syncfusion_SampleBrowser_UWP_SfSpreadsheet_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

