//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[84];
            _typeNameTable[0] = "Syncfusion.SampleBrowser.UWP.TreeMap.MainPage";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "TreeMapWinRTSamples.PopulationViewModel";
            _typeNameTable[4] = "Object";
            _typeNameTable[5] = "System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>";
            _typeNameTable[6] = "System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>";
            _typeNameTable[7] = "TreeMapWinRTSamples.PopulationViewModel.PopulationDetail";
            _typeNameTable[8] = "String";
            _typeNameTable[9] = "Double";
            _typeNameTable[10] = "TreeMapWinRTSamples.StringFormatConverter";
            _typeNameTable[11] = "Syncfusion.UI.Xaml.TreeMap.SfTreeMap";
            _typeNameTable[12] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[13] = "Syncfusion.UI.Xaml.TreeMap.TreeMapLayoutMode";
            _typeNameTable[14] = "System.Enum";
            _typeNameTable[15] = "System.ValueType";
            _typeNameTable[16] = "Boolean";
            _typeNameTable[17] = "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings";
            _typeNameTable[18] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[19] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[20] = "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend";
            _typeNameTable[21] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[22] = "Syncfusion.UI.Xaml.TreeMap.ColorMapping";
            _typeNameTable[23] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>";
            _typeNameTable[24] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>";
            _typeNameTable[25] = "Syncfusion.UI.Xaml.TreeMap.TreeMapLevel";
            _typeNameTable[26] = "System.Collections.Generic.List`1<Syncfusion.UI.Xaml.TreeMap.TreeMapItem>";
            _typeNameTable[27] = "Syncfusion.UI.Xaml.TreeMap.TreeMapItem";
            _typeNameTable[28] = "System.Collections.Generic.List`1<Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode>";
            _typeNameTable[29] = "Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode";
            _typeNameTable[30] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[31] = "Syncfusion.UI.Xaml.TreeMap.TooltipSetting";
            _typeNameTable[32] = "Syncfusion.UI.Xaml.TreeMap.TreeMapSelectionModes";
            _typeNameTable[33] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>";
            _typeNameTable[34] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>";
            _typeNameTable[35] = "Syncfusion.UI.Xaml.TreeMap.GroupColorMapping";
            _typeNameTable[36] = "Int32";
            _typeNameTable[37] = "System.Collections.ObjectModel.ObservableCollection`1<Object>";
            _typeNameTable[38] = "System.Collections.ObjectModel.Collection`1<Object>";
            _typeNameTable[39] = "Windows.Foundation.Point";
            _typeNameTable[40] = "Syncfusion.UI.Xaml.TreeMap.LabelOverflowMode";
            _typeNameTable[41] = "Windows.UI.Xaml.Media.FontFamily";
            _typeNameTable[42] = "Windows.UI.Text.FontStyle";
            _typeNameTable[43] = "Windows.UI.Text.FontWeight";
            _typeNameTable[44] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[45] = "Syncfusion.UI.Xaml.TreeMap.TreeMapLegendPosition";
            _typeNameTable[46] = "Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon";
            _typeNameTable[47] = "Syncfusion.UI.Xaml.TreeMap.RangeBrushColorMapping";
            _typeNameTable[48] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.TreeMap.RangeBrush>";
            _typeNameTable[49] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.TreeMap.RangeBrush>";
            _typeNameTable[50] = "Syncfusion.UI.Xaml.TreeMap.RangeBrush";
            _typeNameTable[51] = "Windows.UI.Color";
            _typeNameTable[52] = "System.Collections.Generic.List`1<Windows.UI.Color>";
            _typeNameTable[53] = "Byte";
            _typeNameTable[54] = "Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel";
            _typeNameTable[55] = "TreeMapWinRTSamples.FlatCollectionTreeMap";
            _typeNameTable[56] = "TreeMapWinRTSamples.CountrySalesCollection";
            _typeNameTable[57] = "System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.CountrySale>";
            _typeNameTable[58] = "System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.CountrySale>";
            _typeNameTable[59] = "TreeMapWinRTSamples.CountrySale";
            _typeNameTable[60] = "System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.RegionSale>";
            _typeNameTable[61] = "System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.RegionSale>";
            _typeNameTable[62] = "TreeMapWinRTSamples.RegionSale";
            _typeNameTable[63] = "Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping";
            _typeNameTable[64] = "Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel";
            _typeNameTable[65] = "TreeMapWinRTSamples.HierarchicalCollectionTreeMap";
            _typeNameTable[66] = "TreeMapWinRTSamples.OlymicMedalsViewModel";
            _typeNameTable[67] = "System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.OlympicMedals>";
            _typeNameTable[68] = "System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.OlympicMedals>";
            _typeNameTable[69] = "TreeMapWinRTSamples.OlympicMedals";
            _typeNameTable[70] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[71] = "TreeMapWinRTSamples.TreeMapCustomization";
            _typeNameTable[72] = "TreeMapWinRTSamples.Continents";
            _typeNameTable[73] = "System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.SubDivision>";
            _typeNameTable[74] = "System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.SubDivision>";
            _typeNameTable[75] = "TreeMapWinRTSamples.SubDivision";
            _typeNameTable[76] = "TreeMapWinRTSamples.VisibilityConverter";
            _typeNameTable[77] = "TreeMapWinRTSamples.UnitStringFormatConverter";
            _typeNameTable[78] = "Syncfusion.UI.Xaml.TreeMap.UniColorMapping";
            _typeNameTable[79] = "TreeMapWinRTSamples.TreeMapDrillDown";
            _typeNameTable[80] = "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper";
            _typeNameTable[81] = "Windows.UI.Xaml.Data.Binding";
            _typeNameTable[82] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>";
            _typeNameTable[83] = "Windows.UI.Xaml.FrameworkElement";

            _typeTable = new global::System.Type[84];
            _typeTable[0] = typeof(global::Syncfusion.SampleBrowser.UWP.TreeMap.MainPage);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::TreeMapWinRTSamples.PopulationViewModel);
            _typeTable[4] = typeof(global::System.Object);
            _typeTable[5] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>);
            _typeTable[6] = typeof(global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>);
            _typeTable[7] = typeof(global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail);
            _typeTable[8] = typeof(global::System.String);
            _typeTable[9] = typeof(global::System.Double);
            _typeTable[10] = typeof(global::TreeMapWinRTSamples.StringFormatConverter);
            _typeTable[11] = typeof(global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap);
            _typeTable[12] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[13] = typeof(global::Syncfusion.UI.Xaml.TreeMap.TreeMapLayoutMode);
            _typeTable[14] = typeof(global::System.Enum);
            _typeTable[15] = typeof(global::System.ValueType);
            _typeTable[16] = typeof(global::System.Boolean);
            _typeTable[17] = typeof(global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings);
            _typeTable[18] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[19] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[20] = typeof(global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[22] = typeof(global::Syncfusion.UI.Xaml.TreeMap.ColorMapping);
            _typeTable[23] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>);
            _typeTable[24] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>);
            _typeTable[25] = typeof(global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel);
            _typeTable[26] = typeof(global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem>);
            _typeTable[27] = typeof(global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem);
            _typeTable[28] = typeof(global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode>);
            _typeTable[29] = typeof(global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode);
            _typeTable[30] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[31] = typeof(global::Syncfusion.UI.Xaml.TreeMap.TooltipSetting);
            _typeTable[32] = typeof(global::Syncfusion.UI.Xaml.TreeMap.TreeMapSelectionModes);
            _typeTable[33] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>);
            _typeTable[34] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>);
            _typeTable[35] = typeof(global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping);
            _typeTable[36] = typeof(global::System.Int32);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>);
            _typeTable[38] = typeof(global::System.Collections.ObjectModel.Collection<global::System.Object>);
            _typeTable[39] = typeof(global::Windows.Foundation.Point);
            _typeTable[40] = typeof(global::Syncfusion.UI.Xaml.TreeMap.LabelOverflowMode);
            _typeTable[41] = typeof(global::Windows.UI.Xaml.Media.FontFamily);
            _typeTable[42] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[43] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[44] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[45] = typeof(global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendPosition);
            _typeTable[46] = typeof(global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon);
            _typeTable[47] = typeof(global::Syncfusion.UI.Xaml.TreeMap.RangeBrushColorMapping);
            _typeTable[48] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.TreeMap.RangeBrush>);
            _typeTable[49] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.TreeMap.RangeBrush>);
            _typeTable[50] = typeof(global::Syncfusion.UI.Xaml.TreeMap.RangeBrush);
            _typeTable[51] = typeof(global::Windows.UI.Color);
            _typeTable[52] = typeof(global::System.Collections.Generic.List<global::Windows.UI.Color>);
            _typeTable[53] = typeof(global::System.Byte);
            _typeTable[54] = typeof(global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel);
            _typeTable[55] = typeof(global::TreeMapWinRTSamples.FlatCollectionTreeMap);
            _typeTable[56] = typeof(global::TreeMapWinRTSamples.CountrySalesCollection);
            _typeTable[57] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.CountrySale>);
            _typeTable[58] = typeof(global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.CountrySale>);
            _typeTable[59] = typeof(global::TreeMapWinRTSamples.CountrySale);
            _typeTable[60] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.RegionSale>);
            _typeTable[61] = typeof(global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.RegionSale>);
            _typeTable[62] = typeof(global::TreeMapWinRTSamples.RegionSale);
            _typeTable[63] = typeof(global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping);
            _typeTable[64] = typeof(global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel);
            _typeTable[65] = typeof(global::TreeMapWinRTSamples.HierarchicalCollectionTreeMap);
            _typeTable[66] = typeof(global::TreeMapWinRTSamples.OlymicMedalsViewModel);
            _typeTable[67] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.OlympicMedals>);
            _typeTable[68] = typeof(global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.OlympicMedals>);
            _typeTable[69] = typeof(global::TreeMapWinRTSamples.OlympicMedals);
            _typeTable[70] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[71] = typeof(global::TreeMapWinRTSamples.TreeMapCustomization);
            _typeTable[72] = typeof(global::TreeMapWinRTSamples.Continents);
            _typeTable[73] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.SubDivision>);
            _typeTable[74] = typeof(global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.SubDivision>);
            _typeTable[75] = typeof(global::TreeMapWinRTSamples.SubDivision);
            _typeTable[76] = typeof(global::TreeMapWinRTSamples.VisibilityConverter);
            _typeTable[77] = typeof(global::TreeMapWinRTSamples.UnitStringFormatConverter);
            _typeTable[78] = typeof(global::Syncfusion.UI.Xaml.TreeMap.UniColorMapping);
            _typeTable[79] = typeof(global::TreeMapWinRTSamples.TreeMapDrillDown);
            _typeTable[80] = typeof(global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper);
            _typeTable[81] = typeof(global::Windows.UI.Xaml.Data.Binding);
            _typeTable[82] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>);
            _typeTable[83] = typeof(global::Windows.UI.Xaml.FrameworkElement);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_MainPage() { return new global::Syncfusion.SampleBrowser.UWP.TreeMap.MainPage(); }
        private object Activate_3_PopulationViewModel() { return new global::TreeMapWinRTSamples.PopulationViewModel(); }
        private object Activate_5_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>(); }
        private object Activate_6_Collection() { return new global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>(); }
        private object Activate_10_StringFormatConverter() { return new global::TreeMapWinRTSamples.StringFormatConverter(); }
        private object Activate_11_SfTreeMap() { return new global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap(); }
        private object Activate_17_LeafItemSettings() { return new global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings(); }
        private object Activate_20_TreeMapLegend() { return new global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend(); }
        private object Activate_22_ColorMapping() { return new global::Syncfusion.UI.Xaml.TreeMap.ColorMapping(); }
        private object Activate_23_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>(); }
        private object Activate_24_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>(); }
        private object Activate_26_List() { return new global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem>(); }
        private object Activate_27_TreeMapItem() { return new global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem(); }
        private object Activate_28_List() { return new global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode>(); }
        private object Activate_29_TreeMapLeafNode() { return new global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode(); }
        private object Activate_31_TooltipSetting() { return new global::Syncfusion.UI.Xaml.TreeMap.TooltipSetting(); }
        private object Activate_33_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>(); }
        private object Activate_34_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>(); }
        private object Activate_35_GroupColorMapping() { return new global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping(); }
        private object Activate_37_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>(); }
        private object Activate_38_Collection() { return new global::System.Collections.ObjectModel.Collection<global::System.Object>(); }
        private object Activate_47_RangeBrushColorMapping() { return new global::Syncfusion.UI.Xaml.TreeMap.RangeBrushColorMapping(); }
        private object Activate_48_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.TreeMap.RangeBrush>(); }
        private object Activate_49_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.TreeMap.RangeBrush>(); }
        private object Activate_50_RangeBrush() { return new global::Syncfusion.UI.Xaml.TreeMap.RangeBrush(); }
        private object Activate_52_List() { return new global::System.Collections.Generic.List<global::Windows.UI.Color>(); }
        private object Activate_54_TreeMapFlatLevel() { return new global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel(); }
        private object Activate_55_FlatCollectionTreeMap() { return new global::TreeMapWinRTSamples.FlatCollectionTreeMap(); }
        private object Activate_56_CountrySalesCollection() { return new global::TreeMapWinRTSamples.CountrySalesCollection(); }
        private object Activate_57_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.CountrySale>(); }
        private object Activate_58_Collection() { return new global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.CountrySale>(); }
        private object Activate_59_CountrySale() { return new global::TreeMapWinRTSamples.CountrySale(); }
        private object Activate_60_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.RegionSale>(); }
        private object Activate_61_Collection() { return new global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.RegionSale>(); }
        private object Activate_62_RegionSale() { return new global::TreeMapWinRTSamples.RegionSale(); }
        private object Activate_63_DesaturationColorMapping() { return new global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping(); }
        private object Activate_64_TreeMapHierarchicalLevel() { return new global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel(); }
        private object Activate_65_HierarchicalCollectionTreeMap() { return new global::TreeMapWinRTSamples.HierarchicalCollectionTreeMap(); }
        private object Activate_66_OlymicMedalsViewModel() { return new global::TreeMapWinRTSamples.OlymicMedalsViewModel(); }
        private object Activate_67_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.OlympicMedals>(); }
        private object Activate_68_Collection() { return new global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.OlympicMedals>(); }
        private object Activate_69_OlympicMedals() { return new global::TreeMapWinRTSamples.OlympicMedals(); }
        private object Activate_71_TreeMapCustomization() { return new global::TreeMapWinRTSamples.TreeMapCustomization(); }
        private object Activate_72_Continents() { return new global::TreeMapWinRTSamples.Continents(); }
        private object Activate_73_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.SubDivision>(); }
        private object Activate_74_Collection() { return new global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.SubDivision>(); }
        private object Activate_75_SubDivision() { return new global::TreeMapWinRTSamples.SubDivision(); }
        private object Activate_76_VisibilityConverter() { return new global::TreeMapWinRTSamples.VisibilityConverter(); }
        private object Activate_77_UnitStringFormatConverter() { return new global::TreeMapWinRTSamples.UnitStringFormatConverter(); }
        private object Activate_78_UniColorMapping() { return new global::Syncfusion.UI.Xaml.TreeMap.UniColorMapping(); }
        private object Activate_79_TreeMapDrillDown() { return new global::TreeMapWinRTSamples.TreeMapDrillDown(); }
        private object Activate_80_SetterValueBindingHelper() { return new global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper(); }
        private object Activate_82_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>(); }
        private void VectorAdd_5_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>)instance;
            var newItem = (global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail)item;
            collection.Add(newItem);
        }
        private void VectorAdd_6_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>)instance;
            var newItem = (global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail)item;
            collection.Add(newItem);
        }
        private void VectorAdd_23_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_24_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_26_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_28_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode)item;
            collection.Add(newItem);
        }
        private void VectorAdd_33_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping)item;
            collection.Add(newItem);
        }
        private void VectorAdd_34_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_38_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_48_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.TreeMap.RangeBrush>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_49_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.TreeMap.RangeBrush>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_52_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Color>)instance;
            var newItem = (global::Windows.UI.Color)item;
            collection.Add(newItem);
        }
        private void VectorAdd_56_CountrySalesCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.CountrySale>)instance;
            var newItem = (global::TreeMapWinRTSamples.CountrySale)item;
            collection.Add(newItem);
        }
        private void VectorAdd_57_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.CountrySale>)instance;
            var newItem = (global::TreeMapWinRTSamples.CountrySale)item;
            collection.Add(newItem);
        }
        private void VectorAdd_58_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.CountrySale>)instance;
            var newItem = (global::TreeMapWinRTSamples.CountrySale)item;
            collection.Add(newItem);
        }
        private void VectorAdd_60_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.RegionSale>)instance;
            var newItem = (global::TreeMapWinRTSamples.RegionSale)item;
            collection.Add(newItem);
        }
        private void VectorAdd_61_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.RegionSale>)instance;
            var newItem = (global::TreeMapWinRTSamples.RegionSale)item;
            collection.Add(newItem);
        }
        private void VectorAdd_67_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.OlympicMedals>)instance;
            var newItem = (global::TreeMapWinRTSamples.OlympicMedals)item;
            collection.Add(newItem);
        }
        private void VectorAdd_68_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.OlympicMedals>)instance;
            var newItem = (global::TreeMapWinRTSamples.OlympicMedals)item;
            collection.Add(newItem);
        }
        private void VectorAdd_72_Continents(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.SubDivision>)instance;
            var newItem = (global::TreeMapWinRTSamples.SubDivision)item;
            collection.Add(newItem);
        }
        private void VectorAdd_73_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.SubDivision>)instance;
            var newItem = (global::TreeMapWinRTSamples.SubDivision)item;
            collection.Add(newItem);
        }
        private void VectorAdd_74_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TreeMapWinRTSamples.SubDivision>)instance;
            var newItem = (global::TreeMapWinRTSamples.SubDivision)item;
            collection.Add(newItem);
        }
        private void VectorAdd_82_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Syncfusion.SampleBrowser.UWP.TreeMap.MainPage
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  TreeMapWinRTSamples.PopulationViewModel
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_3_PopulationViewModel;
                userType.AddMemberName("PopulationDetails");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  Object
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>"));
                userType.CollectionAdd = VectorAdd_5_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 6:   //  System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_Collection;
                userType.CollectionAdd = VectorAdd_6_Collection;
                xamlType = userType;
                break;

            case 7:   //  TreeMapWinRTSamples.PopulationViewModel.PopulationDetail
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Continent");
                userType.AddMemberName("Country");
                userType.AddMemberName("Growth");
                userType.AddMemberName("Population");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  String
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Double
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  TreeMapWinRTSamples.StringFormatConverter
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_StringFormatConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  Syncfusion.UI.Xaml.TreeMap.SfTreeMap
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_11_SfTreeMap;
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("WeightValuePath");
                userType.AddMemberName("ColorValuePath");
                userType.AddMemberName("ItemsLayoutMode");
                userType.AddMemberName("ShowToolTip");
                userType.AddMemberName("LeafItemSettings");
                userType.AddMemberName("ToolTipTemplate");
                userType.AddMemberName("Legend");
                userType.AddMemberName("LeafColorMapping");
                userType.AddMemberName("Levels");
                userType.AddMemberName("TooltipSettings");
                userType.AddMemberName("SelectionModes");
                userType.AddMemberName("GroupColorMappings");
                userType.AddMemberName("LeafLabelPath");
                userType.AddMemberName("LeafTemplate");
                userType.AddMemberName("LeafNodes");
                userType.AddMemberName("ToolTipShowDuration");
                userType.AddMemberName("HighlightBorderBrush");
                userType.AddMemberName("HighlightHoverBrush");
                userType.AddMemberName("HighlightBorderThickness");
                userType.AddMemberName("HighlightOnSelection");
                userType.AddMemberName("HighlightGroupOnSelection");
                userType.AddMemberName("SelectedItems");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("EnableDrillDown");
                userType.AddMemberName("DrillDownHeaderHeight");
                userType.AddMemberName("DrillDownHeaderTemplate");
                userType.AddMemberName("DrillDownSelectionStroke");
                xamlType = userType;
                break;

            case 12:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Syncfusion.UI.Xaml.TreeMap.TreeMapLayoutMode
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Squarified", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLayoutMode.Squarified);
                userType.AddEnumValue("SliceAndDiceAuto", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLayoutMode.SliceAndDiceAuto);
                userType.AddEnumValue("SliceAndDiceHorizontal", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLayoutMode.SliceAndDiceHorizontal);
                userType.AddEnumValue("SliceAndDiceVertical", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLayoutMode.SliceAndDiceVertical);
                xamlType = userType;
                break;

            case 14:   //  System.Enum
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 15:   //  System.ValueType
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 16:   //  Boolean
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Syncfusion.UI.Xaml.TreeMap.LeafItemSettings
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_17_LeafItemSettings;
                userType.AddMemberName("LabelTemplate");
                userType.AddMemberName("Gap");
                userType.AddMemberName("BorderBrush");
                userType.AddMemberName("BorderThickness");
                userType.AddMemberName("LabelOffset");
                userType.AddMemberName("OverflowMode");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("ShowLabels");
                userType.AddMemberName("LabelPath");
                xamlType = userType;
                break;

            case 18:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Syncfusion.UI.Xaml.TreeMap.TreeMapLegend
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_20_TreeMapLegend;
                userType.AddMemberName("LegendItemMargin");
                userType.AddMemberName("LegendItemElementMargin");
                userType.AddMemberName("LegendIconHeight");
                userType.AddMemberName("LegendIconWidth");
                userType.AddMemberName("Header");
                userType.AddMemberName("LegendPosition");
                userType.AddMemberName("LegendItemWidth");
                userType.AddMemberName("LegendItemHeight");
                userType.AddMemberName("LegendIconStyle");
                userType.AddMemberName("LegendIconTemplate");
                userType.AddMemberName("TreeMap");
                xamlType = userType;
                break;

            case 21:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Syncfusion.UI.Xaml.TreeMap.ColorMapping
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_22_ColorMapping;
                xamlType = userType;
                break;

            case 23:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>"));
                userType.CollectionAdd = VectorAdd_23_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 24:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_24_Collection;
                userType.CollectionAdd = VectorAdd_24_Collection;
                xamlType = userType;
                break;

            case 25:   //  Syncfusion.UI.Xaml.TreeMap.TreeMapLevel
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("ColorMapping");
                userType.AddMemberName("HeaderHeight");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("LabelTemplate");
                userType.AddMemberName("ShowLabels");
                userType.AddMemberName("TreeMapItems");
                xamlType = userType;
                break;

            case 26:   //  System.Collections.Generic.List`1<Syncfusion.UI.Xaml.TreeMap.TreeMapItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_26_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  Syncfusion.UI.Xaml.TreeMap.TreeMapItem
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_27_TreeMapItem;
                userType.AddMemberName("Header");
                userType.AddMemberName("Label");
                userType.AddMemberName("ShowLabels");
                userType.AddMemberName("ChildTreeMapItems");
                userType.AddMemberName("LeafNodes");
                userType.AddMemberName("Data");
                userType.AddMemberName("IsGroupSelected");
                userType.AddMemberName("TreeMapLevel");
                xamlType = userType;
                break;

            case 28:   //  System.Collections.Generic.List`1<Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_28_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_29_TreeMapLeafNode;
                userType.AddMemberName("Height");
                userType.AddMemberName("Width");
                userType.AddMemberName("IsSelected");
                userType.AddMemberName("MappedColor");
                userType.AddMemberName("Label");
                userType.AddMemberName("Data");
                xamlType = userType;
                break;

            case 30:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  Syncfusion.UI.Xaml.TreeMap.TooltipSetting
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 32:   //  Syncfusion.UI.Xaml.TreeMap.TreeMapSelectionModes
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.TreeMap.TreeMapSelectionModes.Default);
                userType.AddEnumValue("Multiple", global::Syncfusion.UI.Xaml.TreeMap.TreeMapSelectionModes.Multiple);
                xamlType = userType;
                break;

            case 33:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>"));
                userType.CollectionAdd = VectorAdd_33_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_34_Collection;
                userType.CollectionAdd = VectorAdd_34_Collection;
                xamlType = userType;
                break;

            case 35:   //  Syncfusion.UI.Xaml.TreeMap.GroupColorMapping
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_35_GroupColorMapping;
                userType.AddMemberName("GroupID");
                userType.AddMemberName("TreeMapColorMapping");
                xamlType = userType;
                break;

            case 36:   //  Int32
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  System.Collections.ObjectModel.ObservableCollection`1<Object>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Object>"));
                userType.CollectionAdd = VectorAdd_37_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  System.Collections.ObjectModel.Collection`1<Object>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_Collection;
                userType.CollectionAdd = VectorAdd_38_Collection;
                xamlType = userType;
                break;

            case 39:   //  Windows.Foundation.Point
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  Syncfusion.UI.Xaml.TreeMap.LabelOverflowMode
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Trim", global::Syncfusion.UI.Xaml.TreeMap.LabelOverflowMode.Trim);
                userType.AddEnumValue("Wrap", global::Syncfusion.UI.Xaml.TreeMap.LabelOverflowMode.Wrap);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.TreeMap.LabelOverflowMode.Hide);
                xamlType = userType;
                break;

            case 41:   //  Windows.UI.Xaml.Media.FontFamily
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 42:   //  Windows.UI.Text.FontStyle
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 43:   //  Windows.UI.Text.FontWeight
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 44:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 45:   //  Syncfusion.UI.Xaml.TreeMap.TreeMapLegendPosition
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendPosition.Top);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendPosition.Bottom);
                userType.AddEnumValue("Left", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendPosition.Left);
                userType.AddEnumValue("Right", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendPosition.Right);
                xamlType = userType;
                break;

            case 46:   //  Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ellipse", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon.Ellipse);
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon.Rectangle);
                userType.AddEnumValue("Triangle", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon.Triangle);
                userType.AddEnumValue("InvertedTriangle", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon.InvertedTriangle);
                userType.AddEnumValue("Cross", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon.Cross);
                userType.AddEnumValue("Diamond", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon.Diamond);
                userType.AddEnumValue("Pentagon", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon.Pentagon);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon.Custom);
                xamlType = userType;
                break;

            case 47:   //  Syncfusion.UI.Xaml.TreeMap.RangeBrushColorMapping
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.ColorMapping"));
                userType.Activator = Activate_47_RangeBrushColorMapping;
                userType.AddMemberName("Brushes");
                xamlType = userType;
                break;

            case 48:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.TreeMap.RangeBrush>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.TreeMap.RangeBrush>"));
                userType.CollectionAdd = VectorAdd_48_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 49:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.TreeMap.RangeBrush>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_49_Collection;
                userType.CollectionAdd = VectorAdd_49_Collection;
                xamlType = userType;
                break;

            case 50:   //  Syncfusion.UI.Xaml.TreeMap.RangeBrush
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_50_RangeBrush;
                userType.AddMemberName("Color");
                userType.AddMemberName("From");
                userType.AddMemberName("To");
                userType.AddMemberName("LegendLabel");
                userType.AddMemberName("GradientColors");
                xamlType = userType;
                break;

            case 51:   //  Windows.UI.Color
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 52:   //  System.Collections.Generic.List`1<Windows.UI.Color>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_52_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 53:   //  Byte
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 54:   //  Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLevel"));
                userType.Activator = Activate_54_TreeMapFlatLevel;
                userType.AddMemberName("GroupPath");
                userType.AddMemberName("GroupGap");
                userType.AddMemberName("GroupBackground");
                userType.AddMemberName("GroupBorderBrush");
                userType.AddMemberName("GroupBorderThickness");
                userType.AddMemberName("GroupPadding");
                xamlType = userType;
                break;

            case 55:   //  TreeMapWinRTSamples.FlatCollectionTreeMap
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_55_FlatCollectionTreeMap;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 56:   //  TreeMapWinRTSamples.CountrySalesCollection
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.CountrySale>"));
                userType.Activator = Activate_56_CountrySalesCollection;
                userType.CollectionAdd = VectorAdd_56_CountrySalesCollection;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 57:   //  System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.CountrySale>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.CountrySale>"));
                userType.Activator = Activate_57_ObservableCollection;
                userType.CollectionAdd = VectorAdd_57_ObservableCollection;
                xamlType = userType;
                break;

            case 58:   //  System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.CountrySale>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_58_Collection;
                userType.CollectionAdd = VectorAdd_58_Collection;
                userType.AddMemberName("Count");
                xamlType = userType;
                break;

            case 59:   //  TreeMapWinRTSamples.CountrySale
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_59_CountrySale;
                userType.AddMemberName("Name");
                userType.AddMemberName("Sales");
                userType.AddMemberName("Expense");
                userType.AddMemberName("RegionalSales");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 60:   //  System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.RegionSale>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.RegionSale>"));
                userType.CollectionAdd = VectorAdd_60_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 61:   //  System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.RegionSale>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_61_Collection;
                userType.CollectionAdd = VectorAdd_61_Collection;
                xamlType = userType;
                break;

            case 62:   //  TreeMapWinRTSamples.RegionSale
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_62_RegionSale;
                userType.AddMemberName("Name");
                userType.AddMemberName("Country");
                userType.AddMemberName("Sales");
                userType.AddMemberName("Expense");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 63:   //  Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.ColorMapping"));
                userType.Activator = Activate_63_DesaturationColorMapping;
                userType.AddMemberName("From");
                userType.AddMemberName("To");
                userType.AddMemberName("Color");
                userType.AddMemberName("RangeMinimum");
                userType.AddMemberName("RangeMaximum");
                xamlType = userType;
                break;

            case 64:   //  Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLevel"));
                userType.Activator = Activate_64_TreeMapHierarchicalLevel;
                userType.AddMemberName("ChildPath");
                userType.AddMemberName("ChildGap");
                userType.AddMemberName("LabelPath");
                userType.AddMemberName("HeaderPath");
                userType.AddMemberName("ChildBackground");
                userType.AddMemberName("ChildBorderBrush");
                userType.AddMemberName("ChildBorderThickness");
                userType.AddMemberName("ChildPadding");
                xamlType = userType;
                break;

            case 65:   //  TreeMapWinRTSamples.HierarchicalCollectionTreeMap
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_65_HierarchicalCollectionTreeMap;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 66:   //  TreeMapWinRTSamples.OlymicMedalsViewModel
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_66_OlymicMedalsViewModel;
                userType.AddMemberName("OlympicMedalsDetails");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 67:   //  System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.OlympicMedals>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.OlympicMedals>"));
                userType.CollectionAdd = VectorAdd_67_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 68:   //  System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.OlympicMedals>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_68_Collection;
                userType.CollectionAdd = VectorAdd_68_Collection;
                xamlType = userType;
                break;

            case 69:   //  TreeMapWinRTSamples.OlympicMedals
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_69_OlympicMedals;
                userType.AddMemberName("Country");
                userType.AddMemberName("GameName");
                userType.AddMemberName("GoldMedals");
                userType.AddMemberName("SilverMedals");
                userType.AddMemberName("BronzeMedals");
                userType.AddMemberName("TotalMedals");
                userType.AddMemberName("GameImgSource");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 70:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 71:   //  TreeMapWinRTSamples.TreeMapCustomization
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_71_TreeMapCustomization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 72:   //  TreeMapWinRTSamples.Continents
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.SubDivision>"));
                userType.Activator = Activate_72_Continents;
                userType.CollectionAdd = VectorAdd_72_Continents;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 73:   //  System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.SubDivision>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.SubDivision>"));
                userType.Activator = Activate_73_ObservableCollection;
                userType.CollectionAdd = VectorAdd_73_ObservableCollection;
                xamlType = userType;
                break;

            case 74:   //  System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.SubDivision>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_74_Collection;
                userType.CollectionAdd = VectorAdd_74_Collection;
                userType.AddMemberName("Count");
                xamlType = userType;
                break;

            case 75:   //  TreeMapWinRTSamples.SubDivision
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_75_SubDivision;
                userType.AddMemberName("Name");
                userType.AddMemberName("Continent");
                userType.AddMemberName("Country");
                userType.AddMemberName("State");
                userType.AddMemberName("Population");
                userType.AddMemberName("Area");
                userType.AddMemberName("Density");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 76:   //  TreeMapWinRTSamples.VisibilityConverter
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_76_VisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 77:   //  TreeMapWinRTSamples.UnitStringFormatConverter
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_77_UnitStringFormatConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 78:   //  Syncfusion.UI.Xaml.TreeMap.UniColorMapping
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.ColorMapping"));
                userType.Activator = Activate_78_UniColorMapping;
                userType.AddMemberName("Color");
                xamlType = userType;
                break;

            case 79:   //  TreeMapWinRTSamples.TreeMapDrillDown
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_79_TreeMapDrillDown;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 80:   //  Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_80_SetterValueBindingHelper;
                userType.AddMemberName("Type");
                userType.AddMemberName("Property");
                userType.AddMemberName("Binding");
                userType.AddMemberName("Values");
                userType.AddMemberName("PropertyBinding");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 81:   //  Windows.UI.Xaml.Data.Binding
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 82:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>
                userType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_82_Collection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 83:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Common_2015.Syncfusion_SampleBrowser_UWP_Common_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfGantt.UWP.Syncfusion_SfGantt_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfImageEditor.UWP.Syncfusion_SfImageEditor_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfSmithChart.UWP.Syncfusion_SfSmithChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_PopulationViewModel_PopulationDetails(object instance)
        {
            var that = (global::TreeMapWinRTSamples.PopulationViewModel)instance;
            return that.PopulationDetails;
        }
        private void set_0_PopulationViewModel_PopulationDetails(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.PopulationViewModel)instance;
            that.PopulationDetails = (global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>)Value;
        }
        private object get_1_PopulationDetail_Continent(object instance)
        {
            var that = (global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail)instance;
            return that.Continent;
        }
        private void set_1_PopulationDetail_Continent(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail)instance;
            that.Continent = (global::System.String)Value;
        }
        private object get_2_PopulationDetail_Country(object instance)
        {
            var that = (global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail)instance;
            return that.Country;
        }
        private void set_2_PopulationDetail_Country(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail)instance;
            that.Country = (global::System.String)Value;
        }
        private object get_3_PopulationDetail_Growth(object instance)
        {
            var that = (global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail)instance;
            return that.Growth;
        }
        private void set_3_PopulationDetail_Growth(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail)instance;
            that.Growth = (global::System.Double)Value;
        }
        private object get_4_PopulationDetail_Population(object instance)
        {
            var that = (global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail)instance;
            return that.Population;
        }
        private void set_4_PopulationDetail_Population(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.PopulationViewModel.PopulationDetail)instance;
            that.Population = (global::System.Double)Value;
        }
        private object get_5_SfTreeMap_ItemsSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.ItemsSource;
        }
        private void set_5_SfTreeMap_ItemsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_6_SfTreeMap_WeightValuePath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.WeightValuePath;
        }
        private void set_6_SfTreeMap_WeightValuePath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.WeightValuePath = (global::System.String)Value;
        }
        private object get_7_SfTreeMap_ColorValuePath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.ColorValuePath;
        }
        private void set_7_SfTreeMap_ColorValuePath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.ColorValuePath = (global::System.String)Value;
        }
        private object get_8_SfTreeMap_ItemsLayoutMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.ItemsLayoutMode;
        }
        private void set_8_SfTreeMap_ItemsLayoutMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.ItemsLayoutMode = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLayoutMode)Value;
        }
        private object get_9_SfTreeMap_ShowToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.ShowToolTip;
        }
        private void set_9_SfTreeMap_ShowToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.ShowToolTip = (global::System.Boolean)Value;
        }
        private object get_10_SfTreeMap_LeafItemSettings(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.LeafItemSettings;
        }
        private void set_10_SfTreeMap_LeafItemSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.LeafItemSettings = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)Value;
        }
        private object get_11_SfTreeMap_ToolTipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.ToolTipTemplate;
        }
        private void set_11_SfTreeMap_ToolTipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.ToolTipTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_12_SfTreeMap_Legend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.Legend;
        }
        private void set_12_SfTreeMap_Legend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.Legend = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)Value;
        }
        private object get_13_SfTreeMap_LeafColorMapping(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.LeafColorMapping;
        }
        private void set_13_SfTreeMap_LeafColorMapping(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.LeafColorMapping = (global::Syncfusion.UI.Xaml.TreeMap.ColorMapping)Value;
        }
        private object get_14_SfTreeMap_Levels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.Levels;
        }
        private void set_14_SfTreeMap_Levels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.Levels = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>)Value;
        }
        private object get_15_TreeMapLevel_ColorMapping(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)instance;
            return that.ColorMapping;
        }
        private void set_15_TreeMapLevel_ColorMapping(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)instance;
            that.ColorMapping = (global::Syncfusion.UI.Xaml.TreeMap.ColorMapping)Value;
        }
        private object get_16_TreeMapLevel_HeaderHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)instance;
            return that.HeaderHeight;
        }
        private void set_16_TreeMapLevel_HeaderHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)instance;
            that.HeaderHeight = (global::System.Double)Value;
        }
        private object get_17_TreeMapLevel_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)instance;
            return that.HeaderTemplate;
        }
        private void set_17_TreeMapLevel_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_18_TreeMapLevel_LabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)instance;
            return that.LabelTemplate;
        }
        private void set_18_TreeMapLevel_LabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)instance;
            that.LabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_19_TreeMapLevel_ShowLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)instance;
            return that.ShowLabels;
        }
        private void set_19_TreeMapLevel_ShowLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)instance;
            that.ShowLabels = (global::System.Boolean)Value;
        }
        private object get_20_TreeMapLevel_TreeMapItems(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLevel)instance;
            return that.TreeMapItems;
        }
        private object get_21_TreeMapItem_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem)instance;
            return that.Header;
        }
        private object get_22_TreeMapItem_Label(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem)instance;
            return that.Label;
        }
        private object get_23_TreeMapItem_ShowLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem)instance;
            return that.ShowLabels;
        }
        private object get_24_TreeMapItem_ChildTreeMapItems(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem)instance;
            return that.ChildTreeMapItems;
        }
        private object get_25_TreeMapItem_LeafNodes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem)instance;
            return that.LeafNodes;
        }
        private object get_26_TreeMapLeafNode_Height(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode)instance;
            return that.Height;
        }
        private object get_27_TreeMapLeafNode_Width(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode)instance;
            return that.Width;
        }
        private object get_28_TreeMapLeafNode_IsSelected(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode)instance;
            return that.IsSelected;
        }
        private void set_28_TreeMapLeafNode_IsSelected(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_29_TreeMapLeafNode_MappedColor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode)instance;
            return that.MappedColor;
        }
        private object get_30_TreeMapLeafNode_Label(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode)instance;
            return that.Label;
        }
        private object get_31_TreeMapLeafNode_Data(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode)instance;
            return that.Data;
        }
        private object get_32_TreeMapItem_Data(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem)instance;
            return that.Data;
        }
        private object get_33_TreeMapItem_IsGroupSelected(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem)instance;
            return that.IsGroupSelected;
        }
        private void set_33_TreeMapItem_IsGroupSelected(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem)instance;
            that.IsGroupSelected = (global::System.Boolean)Value;
        }
        private object get_34_TreeMapItem_TreeMapLevel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapItem)instance;
            return that.TreeMapLevel;
        }
        private object get_35_SfTreeMap_TooltipSettings(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.TooltipSettings;
        }
        private void set_35_SfTreeMap_TooltipSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.TooltipSettings = (global::Syncfusion.UI.Xaml.TreeMap.TooltipSetting)Value;
        }
        private object get_36_SfTreeMap_SelectionModes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.SelectionModes;
        }
        private void set_36_SfTreeMap_SelectionModes(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.SelectionModes = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapSelectionModes)Value;
        }
        private object get_37_SfTreeMap_GroupColorMappings(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.GroupColorMappings;
        }
        private void set_37_SfTreeMap_GroupColorMappings(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.GroupColorMappings = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>)Value;
        }
        private object get_38_GroupColorMapping_GroupID(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping)instance;
            return that.GroupID;
        }
        private void set_38_GroupColorMapping_GroupID(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping)instance;
            that.GroupID = (global::System.String)Value;
        }
        private object get_39_GroupColorMapping_TreeMapColorMapping(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping)instance;
            return that.TreeMapColorMapping;
        }
        private void set_39_GroupColorMapping_TreeMapColorMapping(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.GroupColorMapping)instance;
            that.TreeMapColorMapping = (global::Syncfusion.UI.Xaml.TreeMap.ColorMapping)Value;
        }
        private object get_40_SfTreeMap_LeafLabelPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.LeafLabelPath;
        }
        private void set_40_SfTreeMap_LeafLabelPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.LeafLabelPath = (global::System.String)Value;
        }
        private object get_41_SfTreeMap_LeafTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.LeafTemplate;
        }
        private void set_41_SfTreeMap_LeafTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.LeafTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_42_SfTreeMap_LeafNodes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.LeafNodes;
        }
        private object get_43_SfTreeMap_ToolTipShowDuration(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.ToolTipShowDuration;
        }
        private void set_43_SfTreeMap_ToolTipShowDuration(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.ToolTipShowDuration = (global::System.Int32)Value;
        }
        private object get_44_SfTreeMap_HighlightBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.HighlightBorderBrush;
        }
        private void set_44_SfTreeMap_HighlightBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.HighlightBorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_45_SfTreeMap_HighlightHoverBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.HighlightHoverBrush;
        }
        private void set_45_SfTreeMap_HighlightHoverBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.HighlightHoverBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_46_SfTreeMap_HighlightBorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.HighlightBorderThickness;
        }
        private void set_46_SfTreeMap_HighlightBorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.HighlightBorderThickness = (global::System.Double)Value;
        }
        private object get_47_SfTreeMap_HighlightOnSelection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.HighlightOnSelection;
        }
        private void set_47_SfTreeMap_HighlightOnSelection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.HighlightOnSelection = (global::System.Boolean)Value;
        }
        private object get_48_SfTreeMap_HighlightGroupOnSelection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.HighlightGroupOnSelection;
        }
        private void set_48_SfTreeMap_HighlightGroupOnSelection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.HighlightGroupOnSelection = (global::System.Boolean)Value;
        }
        private object get_49_SfTreeMap_SelectedItems(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.SelectedItems;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_50_SfTreeMap_SelectedItem(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.SelectedItem;
        }
#pragma warning restore 0618
        private object get_51_SfTreeMap_EnableDrillDown(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.EnableDrillDown;
        }
        private void set_51_SfTreeMap_EnableDrillDown(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.EnableDrillDown = (global::System.Boolean)Value;
        }
        private object get_52_SfTreeMap_DrillDownHeaderHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.DrillDownHeaderHeight;
        }
        private void set_52_SfTreeMap_DrillDownHeaderHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.DrillDownHeaderHeight = (global::System.Double)Value;
        }
        private object get_53_SfTreeMap_DrillDownHeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.DrillDownHeaderTemplate;
        }
        private void set_53_SfTreeMap_DrillDownHeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.DrillDownHeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_54_SfTreeMap_DrillDownSelectionStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            return that.DrillDownSelectionStroke;
        }
        private void set_54_SfTreeMap_DrillDownSelectionStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.SfTreeMap)instance;
            that.DrillDownSelectionStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_55_LeafItemSettings_LabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.LabelTemplate;
        }
        private void set_55_LeafItemSettings_LabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.LabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_56_LeafItemSettings_Gap(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.Gap;
        }
        private void set_56_LeafItemSettings_Gap(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.Gap = (global::System.Double)Value;
        }
        private object get_57_LeafItemSettings_BorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.BorderBrush;
        }
        private void set_57_LeafItemSettings_BorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.BorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_58_LeafItemSettings_BorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.BorderThickness;
        }
        private void set_58_LeafItemSettings_BorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.BorderThickness = (global::System.Double)Value;
        }
        private object get_59_LeafItemSettings_LabelOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.LabelOffset;
        }
        private void set_59_LeafItemSettings_LabelOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.LabelOffset = (global::Windows.Foundation.Point)Value;
        }
        private object get_60_LeafItemSettings_OverflowMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.OverflowMode;
        }
        private void set_60_LeafItemSettings_OverflowMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.OverflowMode = (global::Syncfusion.UI.Xaml.TreeMap.LabelOverflowMode)Value;
        }
        private object get_61_LeafItemSettings_FontFamily(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.FontFamily;
        }
        private void set_61_LeafItemSettings_FontFamily(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_62_LeafItemSettings_FontSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.FontSize;
        }
        private void set_62_LeafItemSettings_FontSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_63_LeafItemSettings_FontStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.FontStyle;
        }
        private void set_63_LeafItemSettings_FontStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_64_LeafItemSettings_FontWeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.FontWeight;
        }
        private void set_64_LeafItemSettings_FontWeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_65_LeafItemSettings_Foreground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.Foreground;
        }
        private void set_65_LeafItemSettings_Foreground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_66_LeafItemSettings_ShowLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.ShowLabels;
        }
        private void set_66_LeafItemSettings_ShowLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.ShowLabels = (global::System.Boolean)Value;
        }
        private object get_67_LeafItemSettings_LabelPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            return that.LabelPath;
        }
        private void set_67_LeafItemSettings_LabelPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.LeafItemSettings)instance;
            that.LabelPath = (global::System.String)Value;
        }
        private object get_68_TreeMapLegend_LegendItemMargin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            return that.LegendItemMargin;
        }
        private void set_68_TreeMapLegend_LegendItemMargin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            that.LegendItemMargin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_69_TreeMapLegend_LegendItemElementMargin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            return that.LegendItemElementMargin;
        }
        private void set_69_TreeMapLegend_LegendItemElementMargin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            that.LegendItemElementMargin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_70_TreeMapLegend_LegendIconHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            return that.LegendIconHeight;
        }
        private void set_70_TreeMapLegend_LegendIconHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            that.LegendIconHeight = (global::System.Double)Value;
        }
        private object get_71_TreeMapLegend_LegendIconWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            return that.LegendIconWidth;
        }
        private void set_71_TreeMapLegend_LegendIconWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            that.LegendIconWidth = (global::System.Double)Value;
        }
        private object get_72_TreeMapLegend_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            return that.Header;
        }
        private void set_72_TreeMapLegend_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_73_TreeMapLegend_LegendPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            return that.LegendPosition;
        }
        private void set_73_TreeMapLegend_LegendPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            that.LegendPosition = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendPosition)Value;
        }
        private object get_74_TreeMapLegend_LegendItemWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            return that.LegendItemWidth;
        }
        private void set_74_TreeMapLegend_LegendItemWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            that.LegendItemWidth = (global::System.Double)Value;
        }
        private object get_75_TreeMapLegend_LegendItemHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            return that.LegendItemHeight;
        }
        private void set_75_TreeMapLegend_LegendItemHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            that.LegendItemHeight = (global::System.Double)Value;
        }
        private object get_76_TreeMapLegend_LegendIconStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            return that.LegendIconStyle;
        }
        private void set_76_TreeMapLegend_LegendIconStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            that.LegendIconStyle = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon)Value;
        }
        private object get_77_TreeMapLegend_LegendIconTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            return that.LegendIconTemplate;
        }
        private void set_77_TreeMapLegend_LegendIconTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            that.LegendIconTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_78_TreeMapLegend_TreeMap(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapLegend)instance;
            return that.TreeMap;
        }
        private object get_79_RangeBrushColorMapping_Brushes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrushColorMapping)instance;
            return that.Brushes;
        }
        private void set_79_RangeBrushColorMapping_Brushes(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrushColorMapping)instance;
            that.Brushes = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.TreeMap.RangeBrush>)Value;
        }
        private object get_80_RangeBrush_Color(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)instance;
            return that.Color;
        }
        private void set_80_RangeBrush_Color(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)instance;
            that.Color = (global::Windows.UI.Color)Value;
        }
        private object get_81_RangeBrush_From(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)instance;
            return that.From;
        }
        private void set_81_RangeBrush_From(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)instance;
            that.From = (global::System.Double)Value;
        }
        private object get_82_RangeBrush_To(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)instance;
            return that.To;
        }
        private void set_82_RangeBrush_To(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)instance;
            that.To = (global::System.Double)Value;
        }
        private object get_83_RangeBrush_LegendLabel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)instance;
            return that.LegendLabel;
        }
        private void set_83_RangeBrush_LegendLabel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)instance;
            that.LegendLabel = (global::System.String)Value;
        }
        private object get_84_RangeBrush_GradientColors(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)instance;
            return that.GradientColors;
        }
        private void set_84_RangeBrush_GradientColors(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.RangeBrush)instance;
            that.GradientColors = (global::System.Collections.Generic.List<global::Windows.UI.Color>)Value;
        }
        private object get_85_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_85_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_86_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_86_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_87_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_87_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_88_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_88_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_89_TreeMapFlatLevel_GroupPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            return that.GroupPath;
        }
        private void set_89_TreeMapFlatLevel_GroupPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            that.GroupPath = (global::System.String)Value;
        }
        private object get_90_TreeMapFlatLevel_GroupGap(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            return that.GroupGap;
        }
        private void set_90_TreeMapFlatLevel_GroupGap(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            that.GroupGap = (global::System.Double)Value;
        }
        private object get_91_TreeMapFlatLevel_GroupBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            return that.GroupBackground;
        }
        private void set_91_TreeMapFlatLevel_GroupBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            that.GroupBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_92_TreeMapFlatLevel_GroupBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            return that.GroupBorderBrush;
        }
        private void set_92_TreeMapFlatLevel_GroupBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            that.GroupBorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_93_TreeMapFlatLevel_GroupBorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            return that.GroupBorderThickness;
        }
        private void set_93_TreeMapFlatLevel_GroupBorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            that.GroupBorderThickness = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_94_TreeMapFlatLevel_GroupPadding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            return that.GroupPadding;
        }
        private void set_94_TreeMapFlatLevel_GroupPadding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel)instance;
            that.GroupPadding = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_95_CountrySale_Name(object instance)
        {
            var that = (global::TreeMapWinRTSamples.CountrySale)instance;
            return that.Name;
        }
        private void set_95_CountrySale_Name(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.CountrySale)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_96_CountrySale_Sales(object instance)
        {
            var that = (global::TreeMapWinRTSamples.CountrySale)instance;
            return that.Sales;
        }
        private void set_96_CountrySale_Sales(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.CountrySale)instance;
            that.Sales = (global::System.Double)Value;
        }
        private object get_97_CountrySale_Expense(object instance)
        {
            var that = (global::TreeMapWinRTSamples.CountrySale)instance;
            return that.Expense;
        }
        private void set_97_CountrySale_Expense(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.CountrySale)instance;
            that.Expense = (global::System.Double)Value;
        }
        private object get_98_CountrySale_RegionalSales(object instance)
        {
            var that = (global::TreeMapWinRTSamples.CountrySale)instance;
            return that.RegionalSales;
        }
        private void set_98_CountrySale_RegionalSales(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.CountrySale)instance;
            that.RegionalSales = (global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.RegionSale>)Value;
        }
        private object get_99_RegionSale_Name(object instance)
        {
            var that = (global::TreeMapWinRTSamples.RegionSale)instance;
            return that.Name;
        }
        private void set_99_RegionSale_Name(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.RegionSale)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_100_RegionSale_Country(object instance)
        {
            var that = (global::TreeMapWinRTSamples.RegionSale)instance;
            return that.Country;
        }
        private void set_100_RegionSale_Country(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.RegionSale)instance;
            that.Country = (global::System.String)Value;
        }
        private object get_101_RegionSale_Sales(object instance)
        {
            var that = (global::TreeMapWinRTSamples.RegionSale)instance;
            return that.Sales;
        }
        private void set_101_RegionSale_Sales(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.RegionSale)instance;
            that.Sales = (global::System.Double)Value;
        }
        private object get_102_RegionSale_Expense(object instance)
        {
            var that = (global::TreeMapWinRTSamples.RegionSale)instance;
            return that.Expense;
        }
        private void set_102_RegionSale_Expense(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.RegionSale)instance;
            that.Expense = (global::System.Double)Value;
        }
        private object get_103_Collection_Count(object instance)
        {
            var that = (global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.CountrySale>)instance;
            return that.Count;
        }
        private object get_104_DesaturationColorMapping_From(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping)instance;
            return that.From;
        }
        private void set_104_DesaturationColorMapping_From(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping)instance;
            that.From = (global::System.Double)Value;
        }
        private object get_105_DesaturationColorMapping_To(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping)instance;
            return that.To;
        }
        private void set_105_DesaturationColorMapping_To(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping)instance;
            that.To = (global::System.Double)Value;
        }
        private object get_106_DesaturationColorMapping_Color(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping)instance;
            return that.Color;
        }
        private void set_106_DesaturationColorMapping_Color(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping)instance;
            that.Color = (global::Windows.UI.Color)Value;
        }
        private object get_107_DesaturationColorMapping_RangeMinimum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping)instance;
            return that.RangeMinimum;
        }
        private void set_107_DesaturationColorMapping_RangeMinimum(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping)instance;
            that.RangeMinimum = (global::System.Double)Value;
        }
        private object get_108_DesaturationColorMapping_RangeMaximum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping)instance;
            return that.RangeMaximum;
        }
        private void set_108_DesaturationColorMapping_RangeMaximum(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping)instance;
            that.RangeMaximum = (global::System.Double)Value;
        }
        private object get_109_TreeMapHierarchicalLevel_ChildPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            return that.ChildPath;
        }
        private void set_109_TreeMapHierarchicalLevel_ChildPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            that.ChildPath = (global::System.String)Value;
        }
        private object get_110_TreeMapHierarchicalLevel_ChildGap(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            return that.ChildGap;
        }
        private void set_110_TreeMapHierarchicalLevel_ChildGap(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            that.ChildGap = (global::System.Double)Value;
        }
        private object get_111_TreeMapHierarchicalLevel_LabelPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            return that.LabelPath;
        }
        private void set_111_TreeMapHierarchicalLevel_LabelPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            that.LabelPath = (global::System.String)Value;
        }
        private object get_112_TreeMapHierarchicalLevel_HeaderPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            return that.HeaderPath;
        }
        private void set_112_TreeMapHierarchicalLevel_HeaderPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            that.HeaderPath = (global::System.String)Value;
        }
        private object get_113_TreeMapHierarchicalLevel_ChildBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            return that.ChildBackground;
        }
        private void set_113_TreeMapHierarchicalLevel_ChildBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            that.ChildBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_114_TreeMapHierarchicalLevel_ChildBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            return that.ChildBorderBrush;
        }
        private void set_114_TreeMapHierarchicalLevel_ChildBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            that.ChildBorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_115_TreeMapHierarchicalLevel_ChildBorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            return that.ChildBorderThickness;
        }
        private void set_115_TreeMapHierarchicalLevel_ChildBorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            that.ChildBorderThickness = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_116_TreeMapHierarchicalLevel_ChildPadding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            return that.ChildPadding;
        }
        private void set_116_TreeMapHierarchicalLevel_ChildPadding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel)instance;
            that.ChildPadding = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_117_OlymicMedalsViewModel_OlympicMedalsDetails(object instance)
        {
            var that = (global::TreeMapWinRTSamples.OlymicMedalsViewModel)instance;
            return that.OlympicMedalsDetails;
        }
        private void set_117_OlymicMedalsViewModel_OlympicMedalsDetails(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.OlymicMedalsViewModel)instance;
            that.OlympicMedalsDetails = (global::System.Collections.ObjectModel.ObservableCollection<global::TreeMapWinRTSamples.OlympicMedals>)Value;
        }
        private object get_118_OlympicMedals_Country(object instance)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            return that.Country;
        }
        private void set_118_OlympicMedals_Country(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            that.Country = (global::System.String)Value;
        }
        private object get_119_OlympicMedals_GameName(object instance)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            return that.GameName;
        }
        private void set_119_OlympicMedals_GameName(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            that.GameName = (global::System.String)Value;
        }
        private object get_120_OlympicMedals_GoldMedals(object instance)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            return that.GoldMedals;
        }
        private void set_120_OlympicMedals_GoldMedals(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            that.GoldMedals = (global::System.Double)Value;
        }
        private object get_121_OlympicMedals_SilverMedals(object instance)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            return that.SilverMedals;
        }
        private void set_121_OlympicMedals_SilverMedals(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            that.SilverMedals = (global::System.Double)Value;
        }
        private object get_122_OlympicMedals_BronzeMedals(object instance)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            return that.BronzeMedals;
        }
        private void set_122_OlympicMedals_BronzeMedals(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            that.BronzeMedals = (global::System.Double)Value;
        }
        private object get_123_OlympicMedals_TotalMedals(object instance)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            return that.TotalMedals;
        }
        private void set_123_OlympicMedals_TotalMedals(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            that.TotalMedals = (global::System.Double)Value;
        }
        private object get_124_OlympicMedals_GameImgSource(object instance)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            return that.GameImgSource;
        }
        private void set_124_OlympicMedals_GameImgSource(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.OlympicMedals)instance;
            that.GameImgSource = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_125_SubDivision_Name(object instance)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            return that.Name;
        }
        private void set_125_SubDivision_Name(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_126_SubDivision_Continent(object instance)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            return that.Continent;
        }
        private void set_126_SubDivision_Continent(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            that.Continent = (global::System.String)Value;
        }
        private object get_127_SubDivision_Country(object instance)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            return that.Country;
        }
        private void set_127_SubDivision_Country(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            that.Country = (global::System.String)Value;
        }
        private object get_128_SubDivision_State(object instance)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            return that.State;
        }
        private void set_128_SubDivision_State(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            that.State = (global::System.String)Value;
        }
        private object get_129_SubDivision_Population(object instance)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            return that.Population;
        }
        private void set_129_SubDivision_Population(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            that.Population = (global::System.Int32)Value;
        }
        private object get_130_SubDivision_Area(object instance)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            return that.Area;
        }
        private void set_130_SubDivision_Area(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            that.Area = (global::System.Int32)Value;
        }
        private object get_131_SubDivision_Density(object instance)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            return that.Density;
        }
        private void set_131_SubDivision_Density(object instance, object Value)
        {
            var that = (global::TreeMapWinRTSamples.SubDivision)instance;
            that.Density = (global::System.Int32)Value;
        }
        private object get_132_Collection_Count(object instance)
        {
            var that = (global::System.Collections.ObjectModel.Collection<global::TreeMapWinRTSamples.SubDivision>)instance;
            return that.Count;
        }
        private object get_133_UniColorMapping_Color(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.UniColorMapping)instance;
            return that.Color;
        }
        private void set_133_UniColorMapping_Color(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.TreeMap.UniColorMapping)instance;
            that.Color = (global::Windows.UI.Color)Value;
        }
        private object get_134_SetterValueBindingHelper_Type(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Type;
        }
        private void set_134_SetterValueBindingHelper_Type(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Type = (global::System.String)Value;
        }
        private object get_135_SetterValueBindingHelper_Property(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Property;
        }
        private void set_135_SetterValueBindingHelper_Property(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Property = (global::System.String)Value;
        }
        private object get_136_SetterValueBindingHelper_Binding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Binding;
        }
        private void set_136_SetterValueBindingHelper_Binding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Binding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_137_SetterValueBindingHelper_Values(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Values;
        }
        private object get_138_SetterValueBindingHelper_PropertyBinding(object instance)
        {
            return global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.GetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance);
        }
        private void set_138_SetterValueBindingHelper_PropertyBinding(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.SetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance, (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)Value);
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember xamlMember = null;
            global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "TreeMapWinRTSamples.PopulationViewModel.PopulationDetails":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.PopulationViewModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "PopulationDetails", "System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.PopulationViewModel.PopulationDetail>");
                xamlMember.Getter = get_0_PopulationViewModel_PopulationDetails;
                xamlMember.Setter = set_0_PopulationViewModel_PopulationDetails;
                break;
            case "TreeMapWinRTSamples.PopulationViewModel.PopulationDetail.Continent":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.PopulationViewModel.PopulationDetail");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Continent", "String");
                xamlMember.Getter = get_1_PopulationDetail_Continent;
                xamlMember.Setter = set_1_PopulationDetail_Continent;
                break;
            case "TreeMapWinRTSamples.PopulationViewModel.PopulationDetail.Country":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.PopulationViewModel.PopulationDetail");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Country", "String");
                xamlMember.Getter = get_2_PopulationDetail_Country;
                xamlMember.Setter = set_2_PopulationDetail_Country;
                break;
            case "TreeMapWinRTSamples.PopulationViewModel.PopulationDetail.Growth":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.PopulationViewModel.PopulationDetail");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Growth", "Double");
                xamlMember.Getter = get_3_PopulationDetail_Growth;
                xamlMember.Setter = set_3_PopulationDetail_Growth;
                break;
            case "TreeMapWinRTSamples.PopulationViewModel.PopulationDetail.Population":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.PopulationViewModel.PopulationDetail");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Population", "Double");
                xamlMember.Getter = get_4_PopulationDetail_Population;
                xamlMember.Setter = set_4_PopulationDetail_Population;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.ItemsSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SfTreeMap_ItemsSource;
                xamlMember.Setter = set_5_SfTreeMap_ItemsSource;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.WeightValuePath":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "WeightValuePath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_SfTreeMap_WeightValuePath;
                xamlMember.Setter = set_6_SfTreeMap_WeightValuePath;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.ColorValuePath":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ColorValuePath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_SfTreeMap_ColorValuePath;
                xamlMember.Setter = set_7_SfTreeMap_ColorValuePath;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.ItemsLayoutMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ItemsLayoutMode", "Syncfusion.UI.Xaml.TreeMap.TreeMapLayoutMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_SfTreeMap_ItemsLayoutMode;
                xamlMember.Setter = set_8_SfTreeMap_ItemsLayoutMode;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.ShowToolTip":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ShowToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_SfTreeMap_ShowToolTip;
                xamlMember.Setter = set_9_SfTreeMap_ShowToolTip;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.LeafItemSettings":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LeafItemSettings", "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_SfTreeMap_LeafItemSettings;
                xamlMember.Setter = set_10_SfTreeMap_LeafItemSettings;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.ToolTipTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ToolTipTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_SfTreeMap_ToolTipTemplate;
                xamlMember.Setter = set_11_SfTreeMap_ToolTipTemplate;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.Legend":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Legend", "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_SfTreeMap_Legend;
                xamlMember.Setter = set_12_SfTreeMap_Legend;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.LeafColorMapping":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LeafColorMapping", "Syncfusion.UI.Xaml.TreeMap.ColorMapping");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_SfTreeMap_LeafColorMapping;
                xamlMember.Setter = set_13_SfTreeMap_LeafColorMapping;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.Levels":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Levels", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.TreeMap.TreeMapLevel>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_SfTreeMap_Levels;
                xamlMember.Setter = set_14_SfTreeMap_Levels;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLevel.ColorMapping":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ColorMapping", "Syncfusion.UI.Xaml.TreeMap.ColorMapping");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_TreeMapLevel_ColorMapping;
                xamlMember.Setter = set_15_TreeMapLevel_ColorMapping;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLevel.HeaderHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "HeaderHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_TreeMapLevel_HeaderHeight;
                xamlMember.Setter = set_16_TreeMapLevel_HeaderHeight;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLevel.HeaderTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_TreeMapLevel_HeaderTemplate;
                xamlMember.Setter = set_17_TreeMapLevel_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLevel.LabelTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_TreeMapLevel_LabelTemplate;
                xamlMember.Setter = set_18_TreeMapLevel_LabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLevel.ShowLabels":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ShowLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_TreeMapLevel_ShowLabels;
                xamlMember.Setter = set_19_TreeMapLevel_ShowLabels;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLevel.TreeMapItems":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "TreeMapItems", "System.Collections.Generic.List`1<Syncfusion.UI.Xaml.TreeMap.TreeMapItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_TreeMapLevel_TreeMapItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapItem.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Header", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_TreeMapItem_Header;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapItem.Label":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_TreeMapItem_Label;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapItem.ShowLabels":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ShowLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_TreeMapItem_ShowLabels;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapItem.ChildTreeMapItems":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ChildTreeMapItems", "System.Collections.Generic.List`1<Syncfusion.UI.Xaml.TreeMap.TreeMapItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_TreeMapItem_ChildTreeMapItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapItem.LeafNodes":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LeafNodes", "System.Collections.Generic.List`1<Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_TreeMapItem_LeafNodes;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode.Height":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Height", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_TreeMapLeafNode_Height;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode.Width":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_TreeMapLeafNode_Width;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode.IsSelected":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_TreeMapLeafNode_IsSelected;
                xamlMember.Setter = set_28_TreeMapLeafNode_IsSelected;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode.MappedColor":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "MappedColor", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_TreeMapLeafNode_MappedColor;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode.Label":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_TreeMapLeafNode_Label;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode.Data":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Data", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_TreeMapLeafNode_Data;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapItem.Data":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Data", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_TreeMapItem_Data;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapItem.IsGroupSelected":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "IsGroupSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_TreeMapItem_IsGroupSelected;
                xamlMember.Setter = set_33_TreeMapItem_IsGroupSelected;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapItem.TreeMapLevel":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "TreeMapLevel", "Syncfusion.UI.Xaml.TreeMap.TreeMapLevel");
                xamlMember.Getter = get_34_TreeMapItem_TreeMapLevel;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.TooltipSettings":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "TooltipSettings", "Syncfusion.UI.Xaml.TreeMap.TooltipSetting");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_SfTreeMap_TooltipSettings;
                xamlMember.Setter = set_35_SfTreeMap_TooltipSettings;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.SelectionModes":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "SelectionModes", "Syncfusion.UI.Xaml.TreeMap.TreeMapSelectionModes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_SfTreeMap_SelectionModes;
                xamlMember.Setter = set_36_SfTreeMap_SelectionModes;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.GroupColorMappings":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GroupColorMappings", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.TreeMap.GroupColorMapping>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_SfTreeMap_GroupColorMappings;
                xamlMember.Setter = set_37_SfTreeMap_GroupColorMappings;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.GroupColorMapping.GroupID":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.GroupColorMapping");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GroupID", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_GroupColorMapping_GroupID;
                xamlMember.Setter = set_38_GroupColorMapping_GroupID;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.GroupColorMapping.TreeMapColorMapping":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.GroupColorMapping");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "TreeMapColorMapping", "Syncfusion.UI.Xaml.TreeMap.ColorMapping");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_GroupColorMapping_TreeMapColorMapping;
                xamlMember.Setter = set_39_GroupColorMapping_TreeMapColorMapping;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.LeafLabelPath":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LeafLabelPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_SfTreeMap_LeafLabelPath;
                xamlMember.Setter = set_40_SfTreeMap_LeafLabelPath;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.LeafTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LeafTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_SfTreeMap_LeafTemplate;
                xamlMember.Setter = set_41_SfTreeMap_LeafTemplate;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.LeafNodes":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LeafNodes", "System.Collections.Generic.List`1<Syncfusion.UI.Xaml.TreeMap.TreeMapLeafNode>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_SfTreeMap_LeafNodes;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.ToolTipShowDuration":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ToolTipShowDuration", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_SfTreeMap_ToolTipShowDuration;
                xamlMember.Setter = set_43_SfTreeMap_ToolTipShowDuration;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.HighlightBorderBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "HighlightBorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_SfTreeMap_HighlightBorderBrush;
                xamlMember.Setter = set_44_SfTreeMap_HighlightBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.HighlightHoverBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "HighlightHoverBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_SfTreeMap_HighlightHoverBrush;
                xamlMember.Setter = set_45_SfTreeMap_HighlightHoverBrush;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.HighlightBorderThickness":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "HighlightBorderThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_SfTreeMap_HighlightBorderThickness;
                xamlMember.Setter = set_46_SfTreeMap_HighlightBorderThickness;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.HighlightOnSelection":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "HighlightOnSelection", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_SfTreeMap_HighlightOnSelection;
                xamlMember.Setter = set_47_SfTreeMap_HighlightOnSelection;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.HighlightGroupOnSelection":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "HighlightGroupOnSelection", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_SfTreeMap_HighlightGroupOnSelection;
                xamlMember.Setter = set_48_SfTreeMap_HighlightGroupOnSelection;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.SelectedItems":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "SelectedItems", "System.Collections.ObjectModel.ObservableCollection`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_SfTreeMap_SelectedItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.SelectedItem":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_SfTreeMap_SelectedItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.EnableDrillDown":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "EnableDrillDown", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_SfTreeMap_EnableDrillDown;
                xamlMember.Setter = set_51_SfTreeMap_EnableDrillDown;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.DrillDownHeaderHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "DrillDownHeaderHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_SfTreeMap_DrillDownHeaderHeight;
                xamlMember.Setter = set_52_SfTreeMap_DrillDownHeaderHeight;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.DrillDownHeaderTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "DrillDownHeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_SfTreeMap_DrillDownHeaderTemplate;
                xamlMember.Setter = set_53_SfTreeMap_DrillDownHeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.SfTreeMap.DrillDownSelectionStroke":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "DrillDownSelectionStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_SfTreeMap_DrillDownSelectionStroke;
                xamlMember.Setter = set_54_SfTreeMap_DrillDownSelectionStroke;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.LabelTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_LeafItemSettings_LabelTemplate;
                xamlMember.Setter = set_55_LeafItemSettings_LabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.Gap":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Gap", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_LeafItemSettings_Gap;
                xamlMember.Setter = set_56_LeafItemSettings_Gap;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.BorderBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "BorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_LeafItemSettings_BorderBrush;
                xamlMember.Setter = set_57_LeafItemSettings_BorderBrush;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.BorderThickness":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "BorderThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_LeafItemSettings_BorderThickness;
                xamlMember.Setter = set_58_LeafItemSettings_BorderThickness;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.LabelOffset":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LabelOffset", "Windows.Foundation.Point");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_LeafItemSettings_LabelOffset;
                xamlMember.Setter = set_59_LeafItemSettings_LabelOffset;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.OverflowMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "OverflowMode", "Syncfusion.UI.Xaml.TreeMap.LabelOverflowMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_LeafItemSettings_OverflowMode;
                xamlMember.Setter = set_60_LeafItemSettings_OverflowMode;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.FontFamily":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_LeafItemSettings_FontFamily;
                xamlMember.Setter = set_61_LeafItemSettings_FontFamily;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.FontSize":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_LeafItemSettings_FontSize;
                xamlMember.Setter = set_62_LeafItemSettings_FontSize;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.FontStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_LeafItemSettings_FontStyle;
                xamlMember.Setter = set_63_LeafItemSettings_FontStyle;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.FontWeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_LeafItemSettings_FontWeight;
                xamlMember.Setter = set_64_LeafItemSettings_FontWeight;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.Foreground":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_LeafItemSettings_Foreground;
                xamlMember.Setter = set_65_LeafItemSettings_Foreground;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.ShowLabels":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ShowLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_LeafItemSettings_ShowLabels;
                xamlMember.Setter = set_66_LeafItemSettings_ShowLabels;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.LeafItemSettings.LabelPath":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.LeafItemSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LabelPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_LeafItemSettings_LabelPath;
                xamlMember.Setter = set_67_LeafItemSettings_LabelPath;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend.LegendItemMargin":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LegendItemMargin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_TreeMapLegend_LegendItemMargin;
                xamlMember.Setter = set_68_TreeMapLegend_LegendItemMargin;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend.LegendItemElementMargin":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LegendItemElementMargin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_TreeMapLegend_LegendItemElementMargin;
                xamlMember.Setter = set_69_TreeMapLegend_LegendItemElementMargin;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend.LegendIconHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LegendIconHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_TreeMapLegend_LegendIconHeight;
                xamlMember.Setter = set_70_TreeMapLegend_LegendIconHeight;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend.LegendIconWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LegendIconWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_TreeMapLegend_LegendIconWidth;
                xamlMember.Setter = set_71_TreeMapLegend_LegendIconWidth;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_TreeMapLegend_Header;
                xamlMember.Setter = set_72_TreeMapLegend_Header;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend.LegendPosition":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LegendPosition", "Syncfusion.UI.Xaml.TreeMap.TreeMapLegendPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_TreeMapLegend_LegendPosition;
                xamlMember.Setter = set_73_TreeMapLegend_LegendPosition;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend.LegendItemWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LegendItemWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_TreeMapLegend_LegendItemWidth;
                xamlMember.Setter = set_74_TreeMapLegend_LegendItemWidth;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend.LegendItemHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LegendItemHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_TreeMapLegend_LegendItemHeight;
                xamlMember.Setter = set_75_TreeMapLegend_LegendItemHeight;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend.LegendIconStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LegendIconStyle", "Syncfusion.UI.Xaml.TreeMap.TreeMapLegendIcon");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_TreeMapLegend_LegendIconStyle;
                xamlMember.Setter = set_76_TreeMapLegend_LegendIconStyle;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend.LegendIconTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LegendIconTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_TreeMapLegend_LegendIconTemplate;
                xamlMember.Setter = set_77_TreeMapLegend_LegendIconTemplate;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapLegend.TreeMap":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "TreeMap", "Syncfusion.UI.Xaml.TreeMap.SfTreeMap");
                xamlMember.Getter = get_78_TreeMapLegend_TreeMap;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.RangeBrushColorMapping.Brushes":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.RangeBrushColorMapping");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Brushes", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.TreeMap.RangeBrush>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_RangeBrushColorMapping_Brushes;
                xamlMember.Setter = set_79_RangeBrushColorMapping_Brushes;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.RangeBrush.Color":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.RangeBrush");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Color", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_RangeBrush_Color;
                xamlMember.Setter = set_80_RangeBrush_Color;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.RangeBrush.From":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.RangeBrush");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "From", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_RangeBrush_From;
                xamlMember.Setter = set_81_RangeBrush_From;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.RangeBrush.To":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.RangeBrush");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "To", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_RangeBrush_To;
                xamlMember.Setter = set_82_RangeBrush_To;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.RangeBrush.LegendLabel":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.RangeBrush");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LegendLabel", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_RangeBrush_LegendLabel;
                xamlMember.Setter = set_83_RangeBrush_LegendLabel;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.RangeBrush.GradientColors":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.RangeBrush");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GradientColors", "System.Collections.Generic.List`1<Windows.UI.Color>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_RangeBrush_GradientColors;
                xamlMember.Setter = set_84_RangeBrush_GradientColors;
                break;
            case "Windows.UI.Color.A":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_85_Color_A;
                xamlMember.Setter = set_85_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_86_Color_B;
                xamlMember.Setter = set_86_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_87_Color_G;
                xamlMember.Setter = set_87_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_88_Color_R;
                xamlMember.Setter = set_88_Color_R;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel.GroupPath":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GroupPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_TreeMapFlatLevel_GroupPath;
                xamlMember.Setter = set_89_TreeMapFlatLevel_GroupPath;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel.GroupGap":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GroupGap", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_TreeMapFlatLevel_GroupGap;
                xamlMember.Setter = set_90_TreeMapFlatLevel_GroupGap;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel.GroupBackground":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GroupBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_TreeMapFlatLevel_GroupBackground;
                xamlMember.Setter = set_91_TreeMapFlatLevel_GroupBackground;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel.GroupBorderBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GroupBorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_TreeMapFlatLevel_GroupBorderBrush;
                xamlMember.Setter = set_92_TreeMapFlatLevel_GroupBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel.GroupBorderThickness":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GroupBorderThickness", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_TreeMapFlatLevel_GroupBorderThickness;
                xamlMember.Setter = set_93_TreeMapFlatLevel_GroupBorderThickness;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel.GroupPadding":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapFlatLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GroupPadding", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_TreeMapFlatLevel_GroupPadding;
                xamlMember.Setter = set_94_TreeMapFlatLevel_GroupPadding;
                break;
            case "TreeMapWinRTSamples.CountrySale.Name":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.CountrySale");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_95_CountrySale_Name;
                xamlMember.Setter = set_95_CountrySale_Name;
                break;
            case "TreeMapWinRTSamples.CountrySale.Sales":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.CountrySale");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Sales", "Double");
                xamlMember.Getter = get_96_CountrySale_Sales;
                xamlMember.Setter = set_96_CountrySale_Sales;
                break;
            case "TreeMapWinRTSamples.CountrySale.Expense":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.CountrySale");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Expense", "Double");
                xamlMember.Getter = get_97_CountrySale_Expense;
                xamlMember.Setter = set_97_CountrySale_Expense;
                break;
            case "TreeMapWinRTSamples.CountrySale.RegionalSales":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.CountrySale");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "RegionalSales", "System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.RegionSale>");
                xamlMember.Getter = get_98_CountrySale_RegionalSales;
                xamlMember.Setter = set_98_CountrySale_RegionalSales;
                break;
            case "TreeMapWinRTSamples.RegionSale.Name":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.RegionSale");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_99_RegionSale_Name;
                xamlMember.Setter = set_99_RegionSale_Name;
                break;
            case "TreeMapWinRTSamples.RegionSale.Country":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.RegionSale");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Country", "String");
                xamlMember.Getter = get_100_RegionSale_Country;
                xamlMember.Setter = set_100_RegionSale_Country;
                break;
            case "TreeMapWinRTSamples.RegionSale.Sales":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.RegionSale");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Sales", "Double");
                xamlMember.Getter = get_101_RegionSale_Sales;
                xamlMember.Setter = set_101_RegionSale_Sales;
                break;
            case "TreeMapWinRTSamples.RegionSale.Expense":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.RegionSale");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Expense", "Double");
                xamlMember.Getter = get_102_RegionSale_Expense;
                xamlMember.Setter = set_102_RegionSale_Expense;
                break;
            case "System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.CountrySale>.Count":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.CountrySale>");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Count", "Int32");
                xamlMember.Getter = get_103_Collection_Count;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping.From":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "From", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_DesaturationColorMapping_From;
                xamlMember.Setter = set_104_DesaturationColorMapping_From;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping.To":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "To", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_DesaturationColorMapping_To;
                xamlMember.Setter = set_105_DesaturationColorMapping_To;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping.Color":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Color", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_DesaturationColorMapping_Color;
                xamlMember.Setter = set_106_DesaturationColorMapping_Color;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping.RangeMinimum":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "RangeMinimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_DesaturationColorMapping_RangeMinimum;
                xamlMember.Setter = set_107_DesaturationColorMapping_RangeMinimum;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping.RangeMaximum":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.DesaturationColorMapping");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "RangeMaximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_DesaturationColorMapping_RangeMaximum;
                xamlMember.Setter = set_108_DesaturationColorMapping_RangeMaximum;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel.ChildPath":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ChildPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_TreeMapHierarchicalLevel_ChildPath;
                xamlMember.Setter = set_109_TreeMapHierarchicalLevel_ChildPath;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel.ChildGap":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ChildGap", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_TreeMapHierarchicalLevel_ChildGap;
                xamlMember.Setter = set_110_TreeMapHierarchicalLevel_ChildGap;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel.LabelPath":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "LabelPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_TreeMapHierarchicalLevel_LabelPath;
                xamlMember.Setter = set_111_TreeMapHierarchicalLevel_LabelPath;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel.HeaderPath":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "HeaderPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_TreeMapHierarchicalLevel_HeaderPath;
                xamlMember.Setter = set_112_TreeMapHierarchicalLevel_HeaderPath;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel.ChildBackground":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ChildBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_TreeMapHierarchicalLevel_ChildBackground;
                xamlMember.Setter = set_113_TreeMapHierarchicalLevel_ChildBackground;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel.ChildBorderBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ChildBorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_TreeMapHierarchicalLevel_ChildBorderBrush;
                xamlMember.Setter = set_114_TreeMapHierarchicalLevel_ChildBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel.ChildBorderThickness":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ChildBorderThickness", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_TreeMapHierarchicalLevel_ChildBorderThickness;
                xamlMember.Setter = set_115_TreeMapHierarchicalLevel_ChildBorderThickness;
                break;
            case "Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel.ChildPadding":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.TreeMapHierarchicalLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "ChildPadding", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_TreeMapHierarchicalLevel_ChildPadding;
                xamlMember.Setter = set_116_TreeMapHierarchicalLevel_ChildPadding;
                break;
            case "TreeMapWinRTSamples.OlymicMedalsViewModel.OlympicMedalsDetails":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.OlymicMedalsViewModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "OlympicMedalsDetails", "System.Collections.ObjectModel.ObservableCollection`1<TreeMapWinRTSamples.OlympicMedals>");
                xamlMember.Getter = get_117_OlymicMedalsViewModel_OlympicMedalsDetails;
                xamlMember.Setter = set_117_OlymicMedalsViewModel_OlympicMedalsDetails;
                break;
            case "TreeMapWinRTSamples.OlympicMedals.Country":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.OlympicMedals");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Country", "String");
                xamlMember.Getter = get_118_OlympicMedals_Country;
                xamlMember.Setter = set_118_OlympicMedals_Country;
                break;
            case "TreeMapWinRTSamples.OlympicMedals.GameName":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.OlympicMedals");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GameName", "String");
                xamlMember.Getter = get_119_OlympicMedals_GameName;
                xamlMember.Setter = set_119_OlympicMedals_GameName;
                break;
            case "TreeMapWinRTSamples.OlympicMedals.GoldMedals":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.OlympicMedals");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GoldMedals", "Double");
                xamlMember.Getter = get_120_OlympicMedals_GoldMedals;
                xamlMember.Setter = set_120_OlympicMedals_GoldMedals;
                break;
            case "TreeMapWinRTSamples.OlympicMedals.SilverMedals":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.OlympicMedals");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "SilverMedals", "Double");
                xamlMember.Getter = get_121_OlympicMedals_SilverMedals;
                xamlMember.Setter = set_121_OlympicMedals_SilverMedals;
                break;
            case "TreeMapWinRTSamples.OlympicMedals.BronzeMedals":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.OlympicMedals");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "BronzeMedals", "Double");
                xamlMember.Getter = get_122_OlympicMedals_BronzeMedals;
                xamlMember.Setter = set_122_OlympicMedals_BronzeMedals;
                break;
            case "TreeMapWinRTSamples.OlympicMedals.TotalMedals":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.OlympicMedals");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "TotalMedals", "Double");
                xamlMember.Getter = get_123_OlympicMedals_TotalMedals;
                xamlMember.Setter = set_123_OlympicMedals_TotalMedals;
                break;
            case "TreeMapWinRTSamples.OlympicMedals.GameImgSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.OlympicMedals");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "GameImgSource", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_124_OlympicMedals_GameImgSource;
                xamlMember.Setter = set_124_OlympicMedals_GameImgSource;
                break;
            case "TreeMapWinRTSamples.SubDivision.Name":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.SubDivision");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_125_SubDivision_Name;
                xamlMember.Setter = set_125_SubDivision_Name;
                break;
            case "TreeMapWinRTSamples.SubDivision.Continent":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.SubDivision");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Continent", "String");
                xamlMember.Getter = get_126_SubDivision_Continent;
                xamlMember.Setter = set_126_SubDivision_Continent;
                break;
            case "TreeMapWinRTSamples.SubDivision.Country":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.SubDivision");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Country", "String");
                xamlMember.Getter = get_127_SubDivision_Country;
                xamlMember.Setter = set_127_SubDivision_Country;
                break;
            case "TreeMapWinRTSamples.SubDivision.State":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.SubDivision");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "State", "String");
                xamlMember.Getter = get_128_SubDivision_State;
                xamlMember.Setter = set_128_SubDivision_State;
                break;
            case "TreeMapWinRTSamples.SubDivision.Population":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.SubDivision");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Population", "Int32");
                xamlMember.Getter = get_129_SubDivision_Population;
                xamlMember.Setter = set_129_SubDivision_Population;
                break;
            case "TreeMapWinRTSamples.SubDivision.Area":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.SubDivision");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Area", "Int32");
                xamlMember.Getter = get_130_SubDivision_Area;
                xamlMember.Setter = set_130_SubDivision_Area;
                break;
            case "TreeMapWinRTSamples.SubDivision.Density":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TreeMapWinRTSamples.SubDivision");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Density", "Int32");
                xamlMember.Getter = get_131_SubDivision_Density;
                xamlMember.Setter = set_131_SubDivision_Density;
                break;
            case "System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.SubDivision>.Count":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<TreeMapWinRTSamples.SubDivision>");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Count", "Int32");
                xamlMember.Getter = get_132_Collection_Count;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.TreeMap.UniColorMapping.Color":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.TreeMap.UniColorMapping");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Color", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_UniColorMapping_Color;
                xamlMember.Setter = set_133_UniColorMapping_Color;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Type":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Type", "String");
                xamlMember.Getter = get_134_SetterValueBindingHelper_Type;
                xamlMember.Setter = set_134_SetterValueBindingHelper_Type;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Property":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Property", "String");
                xamlMember.Getter = get_135_SetterValueBindingHelper_Property;
                xamlMember.Setter = set_135_SetterValueBindingHelper_Property;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Binding":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Binding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_136_SetterValueBindingHelper_Binding;
                xamlMember.Setter = set_136_SetterValueBindingHelper_Binding;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Values":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "Values", "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>");
                xamlMember.Getter = get_137_SetterValueBindingHelper_Values;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.PropertyBinding":
                userType = (global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlMember(this, "PropertyBinding", "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_138_SetterValueBindingHelper_PropertyBinding;
                xamlMember.Setter = set_138_SetterValueBindingHelper_PropertyBinding;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlSystemBaseType
    {
        global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Syncfusion.SampleBrowser.UWP.TreeMap.Syncfusion_SampleBrowser_UWP_TreeMap_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

