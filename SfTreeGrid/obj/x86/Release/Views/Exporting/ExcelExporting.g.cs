#pragma checksum "D:\Samples_19.3.0.53\UWP\SfTreeGrid\Views\Exporting\ExcelExporting.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "E059E83F872AE460AE5DEBCED40CD1C4"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Syncfusion.SampleBrowser.UWP.SfTreeGrid
{
    partial class ExcelExporting : 
        global::Common.SampleLayout, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Views\Exporting\ExcelExporting.xaml line 44
                {
                    this.Screen = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 2: // Views\Exporting\ExcelExporting.xaml line 65
                {
                    this.treeGrid = (global::Syncfusion.UI.Xaml.TreeGrid.SfTreeGrid)(target);
                }
                break;
            case 3: // Views\Exporting\ExcelExporting.xaml line 79
                {
                    this.StkPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 4: // Views\Exporting\ExcelExporting.xaml line 85
                {
                    this.AllowOutlining = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                }
                break;
            case 5: // Views\Exporting\ExcelExporting.xaml line 89
                {
                    this.AllowIndentColumn = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                }
                break;
            case 6: // Views\Exporting\ExcelExporting.xaml line 93
                {
                    this.IsGridLinesVisible = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                }
                break;
            case 7: // Views\Exporting\ExcelExporting.xaml line 97
                {
                    this.CanExportHyperLink = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                }
                break;
            case 8: // Views\Exporting\ExcelExporting.xaml line 102
                {
                    this.nodeexpandMode = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 9: // Views\Exporting\ExcelExporting.xaml line 112
                {
                    this.customizeColumns = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                }
                break;
            case 10: // Views\Exporting\ExcelExporting.xaml line 116
                {
                    global::Windows.UI.Xaml.Controls.Button element10 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element10).Click += this.OnExportToExcel;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            return returnValue;
        }
    }
}

