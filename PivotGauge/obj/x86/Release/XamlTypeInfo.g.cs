//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Syncfusion.SampleBrowser.UWP.PivotGauge
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMetaDataProvider __appProvider;
        private global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[42];
            _typeNameTable[0] = "Windows.UI.Color";
            _typeNameTable[1] = "System.ValueType";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Byte";
            _typeNameTable[4] = "Common.SampleLayout";
            _typeNameTable[5] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[6] = "String";
            _typeNameTable[7] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[8] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[9] = "System.Windows.Input.ICommand";
            _typeNameTable[10] = "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge";
            _typeNameTable[11] = "Double";
            _typeNameTable[12] = "Int32";
            _typeNameTable[13] = "Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle";
            _typeNameTable[14] = "System.Enum";
            _typeNameTable[15] = "Syncfusion.Olap.UWP.Engine.KpiInfoCollection";
            _typeNameTable[16] = "System.Collections.ObjectModel.Collection`1<Syncfusion.Olap.UWP.Engine.KpiInfo>";
            _typeNameTable[17] = "Syncfusion.Olap.UWP.Engine.KpiInfo";
            _typeNameTable[18] = "Boolean";
            _typeNameTable[19] = "Syncfusion.Olap.UWP.Manager.OlapDataManager";
            _typeNameTable[20] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[21] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>";
            _typeNameTable[22] = "System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>";
            _typeNameTable[23] = "Syncfusion.PivotAnalysis.UWP.PivotItem";
            _typeNameTable[24] = "System.Collections.IComparer";
            _typeNameTable[25] = "Syncfusion.Data.ListSortDirection";
            _typeNameTable[26] = "Syncfusion.PivotAnalysis.UWP.SummaryBase";
            _typeNameTable[27] = "Syncfusion.PivotAnalysis.UWP.SummaryType";
            _typeNameTable[28] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>";
            _typeNameTable[29] = "System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>";
            _typeNameTable[30] = "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo";
            _typeNameTable[31] = "Syncfusion.PivotAnalysis.UWP.CalculationType";
            _typeNameTable[32] = "Syncfusion.PivotAnalysis.UWP.DisplayOption";
            _typeNameTable[33] = "Syncfusion.PivotAnalysis.UWP.FilterExpression";
            _typeNameTable[34] = "Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel";
            _typeNameTable[35] = "BI.PivotGauge.Localization";
            _typeNameTable[36] = "BI.PivotGauge.Relational";
            _typeNameTable[37] = "BI.PivotGauge.GettingStarted";
            _typeNameTable[38] = "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper";
            _typeNameTable[39] = "Windows.UI.Xaml.Data.Binding";
            _typeNameTable[40] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>";
            _typeNameTable[41] = "Windows.UI.Xaml.FrameworkElement";

            _typeTable = new global::System.Type[42];
            _typeTable[0] = typeof(global::Windows.UI.Color);
            _typeTable[1] = typeof(global::System.ValueType);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Byte);
            _typeTable[4] = typeof(global::Common.SampleLayout);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[6] = typeof(global::System.String);
            _typeTable[7] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[8] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[9] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[10] = typeof(global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge);
            _typeTable[11] = typeof(global::System.Double);
            _typeTable[12] = typeof(global::System.Int32);
            _typeTable[13] = typeof(global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle);
            _typeTable[14] = typeof(global::System.Enum);
            _typeTable[15] = typeof(global::Syncfusion.Olap.UWP.Engine.KpiInfoCollection);
            _typeTable[16] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.Olap.UWP.Engine.KpiInfo>);
            _typeTable[17] = typeof(global::Syncfusion.Olap.UWP.Engine.KpiInfo);
            _typeTable[18] = typeof(global::System.Boolean);
            _typeTable[19] = typeof(global::Syncfusion.Olap.UWP.Manager.OlapDataManager);
            _typeTable[20] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[21] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>);
            _typeTable[22] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>);
            _typeTable[23] = typeof(global::Syncfusion.PivotAnalysis.UWP.PivotItem);
            _typeTable[24] = typeof(global::System.Collections.IComparer);
            _typeTable[25] = typeof(global::Syncfusion.Data.ListSortDirection);
            _typeTable[26] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryBase);
            _typeTable[27] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryType);
            _typeTable[28] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>);
            _typeTable[29] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>);
            _typeTable[30] = typeof(global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo);
            _typeTable[31] = typeof(global::Syncfusion.PivotAnalysis.UWP.CalculationType);
            _typeTable[32] = typeof(global::Syncfusion.PivotAnalysis.UWP.DisplayOption);
            _typeTable[33] = typeof(global::Syncfusion.PivotAnalysis.UWP.FilterExpression);
            _typeTable[34] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel);
            _typeTable[35] = typeof(global::BI.PivotGauge.Localization);
            _typeTable[36] = typeof(global::BI.PivotGauge.Relational);
            _typeTable[37] = typeof(global::BI.PivotGauge.GettingStarted);
            _typeTable[38] = typeof(global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper);
            _typeTable[39] = typeof(global::Windows.UI.Xaml.Data.Binding);
            _typeTable[40] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>);
            _typeTable[41] = typeof(global::Windows.UI.Xaml.FrameworkElement);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_4_SampleLayout() { return new global::Common.SampleLayout(); }
        private object Activate_10_SfPivotGauge() { return new global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge(); }
        private object Activate_15_KpiInfoCollection() { return new global::Syncfusion.Olap.UWP.Engine.KpiInfoCollection(); }
        private object Activate_16_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.Olap.UWP.Engine.KpiInfo>(); }
        private object Activate_17_KpiInfo() { return new global::Syncfusion.Olap.UWP.Engine.KpiInfo(); }
        private object Activate_19_OlapDataManager() { return new global::Syncfusion.Olap.UWP.Manager.OlapDataManager(); }
        private object Activate_21_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>(); }
        private object Activate_22_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>(); }
        private object Activate_23_PivotItem() { return new global::Syncfusion.PivotAnalysis.UWP.PivotItem(); }
        private object Activate_28_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>(); }
        private object Activate_29_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>(); }
        private object Activate_30_PivotComputationInfo() { return new global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo(); }
        private object Activate_33_FilterExpression() { return new global::Syncfusion.PivotAnalysis.UWP.FilterExpression(); }
        private object Activate_35_Localization() { return new global::BI.PivotGauge.Localization(); }
        private object Activate_36_Relational() { return new global::BI.PivotGauge.Relational(); }
        private object Activate_37_GettingStarted() { return new global::BI.PivotGauge.GettingStarted(); }
        private object Activate_38_SetterValueBindingHelper() { return new global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper(); }
        private object Activate_40_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>(); }
        private void VectorAdd_15_KpiInfoCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.Olap.UWP.Engine.KpiInfo>)instance;
            var newItem = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_16_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.Olap.UWP.Engine.KpiInfo>)instance;
            var newItem = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_21_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_22_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_28_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_29_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_40_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Windows.UI.Color
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 1:   //  System.ValueType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 2:   //  Object
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Byte
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 4:   //  Common.SampleLayout
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_4_SampleLayout;
                userType.AddMemberName("Header");
                userType.AddMemberName("Sample");
                userType.AddMemberName("Setting");
                userType.AddMemberName("OptionVisibility");
                userType.AddMemberName("FontIcons");
                userType.AddMemberName("Pathstring");
                userType.AddMemberName("ClickCommand");
                xamlType = userType;
                break;

            case 5:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  String
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  System.Windows.Input.ICommand
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_10_SfPivotGauge;
                userType.AddMemberName("Radius");
                userType.AddMemberName("RowsCount");
                userType.AddMemberName("ColumnsCount");
                userType.AddMemberName("GaugeVisualStyle");
                userType.AddMemberName("StatusIndicator");
                userType.AddMemberName("KpiInfoCollection");
                userType.AddMemberName("OlapDataManager");
                userType.AddMemberName("PivotEngine");
                userType.AddMemberName("ShowGaugeTooltip");
                userType.AddMemberName("ShowGaugeHeaders");
                userType.AddMemberName("ShowGaugeLabels");
                userType.AddMemberName("ShowGaugeFactors");
                userType.AddMemberName("ShowProcessingBar");
                userType.AddMemberName("PivotRows");
                userType.AddMemberName("PivotColumns");
                userType.AddMemberName("PivotCalculations");
                userType.AddMemberName("ItemSource");
                xamlType = userType;
                break;

            case 11:   //  Double
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Int32
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Blend", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Blend);
                userType.AddEnumValue("Lime", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Lime);
                userType.AddEnumValue("Metro", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Metro);
                userType.AddEnumValue("Office2010Black", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Office2010Black);
                userType.AddEnumValue("Office2010Blue", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Office2010Blue);
                userType.AddEnumValue("Office2010Silver", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Office2010Silver);
                userType.AddEnumValue("Office2013DarkGray", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Office2013DarkGray);
                userType.AddEnumValue("Office2013LightGray", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Office2013LightGray);
                userType.AddEnumValue("Office2013White", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Office2013White);
                userType.AddEnumValue("Office2016Colorful", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Office2016Colorful);
                userType.AddEnumValue("Office2016DarkGray", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Office2016DarkGray);
                userType.AddEnumValue("Office2016White", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Office2016White);
                userType.AddEnumValue("Office365", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Office365);
                userType.AddEnumValue("Saffron", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.Saffron);
                userType.AddEnumValue("VisualStudio2013", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.VisualStudio2013);
                userType.AddEnumValue("VisualStudio2015", global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle.VisualStudio2015);
                xamlType = userType;
                break;

            case 14:   //  System.Enum
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 15:   //  Syncfusion.Olap.UWP.Engine.KpiInfoCollection
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.Olap.UWP.Engine.KpiInfo>"));
                userType.CollectionAdd = VectorAdd_15_KpiInfoCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 16:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.Olap.UWP.Engine.KpiInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_16_Collection;
                userType.CollectionAdd = VectorAdd_16_Collection;
                xamlType = userType;
                break;

            case 17:   //  Syncfusion.Olap.UWP.Engine.KpiInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_17_KpiInfo;
                userType.AddMemberName("GoalValue");
                userType.AddMemberName("StatusValue");
                userType.AddMemberName("TrendValue");
                userType.AddMemberName("MeasureValue");
                userType.AddMemberName("ActualMeasureValue");
                userType.AddMemberName("ActualGoalValue");
                userType.AddMemberName("MeasureCaption");
                userType.AddMemberName("GoalCaption");
                userType.AddMemberName("MemberName");
                userType.AddMemberName("Kpi_Name");
                userType.AddMemberName("IsValidKpi");
                userType.AddMemberName("ValueIndex");
                userType.AddMemberName("GoalIndex");
                userType.AddMemberName("StatusIndex");
                userType.AddMemberName("TrendIndex");
                userType.AddMemberName("MemberRowIndex");
                userType.AddMemberName("StatusGraphic");
                userType.AddMemberName("TrendGraphic");
                userType.AddMemberName("MemberColumnIndex");
                xamlType = userType;
                break;

            case 18:   //  Boolean
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  Syncfusion.Olap.UWP.Manager.OlapDataManager
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 20:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>"));
                userType.CollectionAdd = VectorAdd_21_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 22:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_22_Collection;
                userType.CollectionAdd = VectorAdd_22_Collection;
                xamlType = userType;
                break;

            case 23:   //  Syncfusion.PivotAnalysis.UWP.PivotItem
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_23_PivotItem;
                userType.AddMemberName("AllowFilter");
                userType.AddMemberName("AllowRunTimeGroupByField");
                userType.AddMemberName("AllowSort");
                userType.AddMemberName("Comparer");
                userType.AddMemberName("EnableHyperlinks");
                userType.AddMemberName("FieldCaption");
                userType.AddMemberName("FieldHeader");
                userType.AddMemberName("FieldMappingName");
                userType.AddMemberName("Format");
                userType.AddMemberName("ShowSubTotal");
                userType.AddMemberName("SortDirection");
                userType.AddMemberName("Summary");
                userType.AddMemberName("SummaryType");
                userType.AddMemberName("TotalHeader");
                userType.AddMemberName("Width");
                xamlType = userType;
                break;

            case 24:   //  System.Collections.IComparer
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  Syncfusion.Data.ListSortDirection
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ascending", global::Syncfusion.Data.ListSortDirection.Ascending);
                userType.AddEnumValue("Descending", global::Syncfusion.Data.ListSortDirection.Descending);
                xamlType = userType;
                break;

            case 26:   //  Syncfusion.PivotAnalysis.UWP.SummaryBase
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  Syncfusion.PivotAnalysis.UWP.SummaryType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("DoubleTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleTotalSum);
                userType.AddEnumValue("DoubleAverage", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleAverage);
                userType.AddEnumValue("DoubleMaximum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleMaximum);
                userType.AddEnumValue("DoubleMinimum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleMinimum);
                userType.AddEnumValue("DoubleStandardDeviation", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleStandardDeviation);
                userType.AddEnumValue("DoubleVariance", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleVariance);
                userType.AddEnumValue("Count", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Count);
                userType.AddEnumValue("DecimalTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DecimalTotalSum);
                userType.AddEnumValue("IntTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.IntTotalSum);
                userType.AddEnumValue("Custom", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Custom);
                userType.AddEnumValue("DisplayIfDiscreteValuesEqual", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DisplayIfDiscreteValuesEqual);
                userType.AddEnumValue("Sum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Sum);
                userType.AddEnumValue("Average", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Average);
                userType.AddEnumValue("Max", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Max);
                userType.AddEnumValue("Min", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Min);
                userType.AddEnumValue("CountNumbers", global::Syncfusion.PivotAnalysis.UWP.SummaryType.CountNumbers);
                userType.AddEnumValue("StdDev", global::Syncfusion.PivotAnalysis.UWP.SummaryType.StdDev);
                userType.AddEnumValue("StdDevP", global::Syncfusion.PivotAnalysis.UWP.SummaryType.StdDevP);
                userType.AddEnumValue("Var", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Var);
                userType.AddEnumValue("VarP", global::Syncfusion.PivotAnalysis.UWP.SummaryType.VarP);
                xamlType = userType;
                break;

            case 28:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>"));
                userType.CollectionAdd = VectorAdd_28_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_29_Collection;
                userType.CollectionAdd = VectorAdd_29_Collection;
                xamlType = userType;
                break;

            case 30:   //  Syncfusion.PivotAnalysis.UWP.PivotComputationInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_30_PivotComputationInfo;
                userType.AddMemberName("AllowFilter");
                userType.AddMemberName("AllowRunTimeGroupByField");
                userType.AddMemberName("AllowSort");
                userType.AddMemberName("BaseField");
                userType.AddMemberName("BaseItem");
                userType.AddMemberName("FieldType");
                userType.AddMemberName("CalculationName");
                userType.AddMemberName("CalculationType");
                userType.AddMemberName("DefaultValue");
                userType.AddMemberName("Description");
                userType.AddMemberName("DisplayOption");
                userType.AddMemberName("EnableHyperlinks");
                userType.AddMemberName("Expression");
                userType.AddMemberName("FieldCaption");
                userType.AddMemberName("FieldHeader");
                userType.AddMemberName("FieldName");
                userType.AddMemberName("Format");
                userType.AddMemberName("Formula");
                userType.AddMemberName("InnerMostComputationsOnly");
                userType.AddMemberName("IsTopColumnSummary");
                userType.AddMemberName("PadString");
                userType.AddMemberName("Summary");
                userType.AddMemberName("SummaryType");
                xamlType = userType;
                break;

            case 31:   //  Syncfusion.PivotAnalysis.UWP.CalculationType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("NoCalculation", global::Syncfusion.PivotAnalysis.UWP.CalculationType.NoCalculation);
                userType.AddEnumValue("PercentageOfGrandTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfGrandTotal);
                userType.AddEnumValue("PercentageOfColumnTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfColumnTotal);
                userType.AddEnumValue("PercentageOfRowTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfRowTotal);
                userType.AddEnumValue("PercentageOfParentColumnTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentColumnTotal);
                userType.AddEnumValue("PercentageOfParentRowTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentRowTotal);
                userType.AddEnumValue("PercentageOfParentTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentTotal);
                userType.AddEnumValue("Index", global::Syncfusion.PivotAnalysis.UWP.CalculationType.Index);
                userType.AddEnumValue("Formula", global::Syncfusion.PivotAnalysis.UWP.CalculationType.Formula);
                userType.AddEnumValue("PercentageOf", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOf);
                userType.AddEnumValue("DifferenceFrom", global::Syncfusion.PivotAnalysis.UWP.CalculationType.DifferenceFrom);
                userType.AddEnumValue("PercentageOfDifferenceFrom", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfDifferenceFrom);
                userType.AddEnumValue("RunningTotalIn", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RunningTotalIn);
                userType.AddEnumValue("PercentageOfRunningTotalIn", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfRunningTotalIn);
                userType.AddEnumValue("RankSmallestToLargest", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RankSmallestToLargest);
                userType.AddEnumValue("RankLargestToSmallest", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RankLargestToSmallest);
                xamlType = userType;
                break;

            case 32:   //  Syncfusion.PivotAnalysis.UWP.DisplayOption
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.None);
                userType.AddEnumValue("Calculations", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.Calculations);
                userType.AddEnumValue("Summary", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.Summary);
                userType.AddEnumValue("GrandTotals", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.GrandTotals);
                userType.AddEnumValue("All", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.All);
                xamlType = userType;
                break;

            case 33:   //  Syncfusion.PivotAnalysis.UWP.FilterExpression
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("All", global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel.All);
                userType.AddEnumValue("InnerMostOnly", global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel.InnerMostOnly);
                xamlType = userType;
                break;

            case 35:   //  BI.PivotGauge.Localization
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_35_Localization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  BI.PivotGauge.Relational
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_36_Relational;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  BI.PivotGauge.GettingStarted
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_37_GettingStarted;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_SetterValueBindingHelper;
                userType.AddMemberName("Type");
                userType.AddMemberName("Property");
                userType.AddMemberName("Binding");
                userType.AddMemberName("Values");
                userType.AddMemberName("PropertyBinding");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 39:   //  Windows.UI.Xaml.Data.Binding
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_40_Collection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 41:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Common_2015.Syncfusion_SampleBrowser_UWP_Common_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfGantt.UWP.Syncfusion_SfGantt_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfImageEditor.UWP.Syncfusion_SfImageEditor_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfSmithChart.UWP.Syncfusion_SfSmithChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_0_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_1_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_1_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_2_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_2_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_3_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_3_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_4_SampleLayout_Header(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Header;
        }
        private void set_4_SampleLayout_Header(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Header = (global::System.String)Value;
        }
        private object get_5_SampleLayout_Sample(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Sample;
        }
        private void set_5_SampleLayout_Sample(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Sample = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_6_SampleLayout_Setting(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Setting;
        }
        private void set_6_SampleLayout_Setting(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Setting = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_7_SampleLayout_OptionVisibility(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.OptionVisibility;
        }
        private void set_7_SampleLayout_OptionVisibility(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.OptionVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_8_SampleLayout_FontIcons(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.FontIcons;
        }
        private void set_8_SampleLayout_FontIcons(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.FontIcons = (global::System.String)Value;
        }
        private object get_9_SampleLayout_Pathstring(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Pathstring;
        }
        private void set_9_SampleLayout_Pathstring(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Pathstring = (global::System.String)Value;
        }
        private object get_10_SampleLayout_ClickCommand(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.ClickCommand;
        }
        private object get_11_SfPivotGauge_Radius(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.Radius;
        }
        private void set_11_SfPivotGauge_Radius(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.Radius = (global::System.Double)Value;
        }
        private object get_12_SfPivotGauge_RowsCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.RowsCount;
        }
        private void set_12_SfPivotGauge_RowsCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.RowsCount = (global::System.Int32)Value;
        }
        private object get_13_SfPivotGauge_ColumnsCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.ColumnsCount;
        }
        private void set_13_SfPivotGauge_ColumnsCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.ColumnsCount = (global::System.Int32)Value;
        }
        private object get_14_SfPivotGauge_GaugeVisualStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.GaugeVisualStyle;
        }
        private void set_14_SfPivotGauge_GaugeVisualStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.GaugeVisualStyle = (global::Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle)Value;
        }
        private object get_15_SfPivotGauge_StatusIndicator(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.StatusIndicator;
        }
        private void set_15_SfPivotGauge_StatusIndicator(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.StatusIndicator = (global::System.String)Value;
        }
        private object get_16_SfPivotGauge_KpiInfoCollection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.KpiInfoCollection;
        }
        private object get_17_KpiInfo_GoalValue(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.GoalValue;
        }
        private void set_17_KpiInfo_GoalValue(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.GoalValue = (global::System.String)Value;
        }
        private object get_18_KpiInfo_StatusValue(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.StatusValue;
        }
        private void set_18_KpiInfo_StatusValue(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.StatusValue = (global::System.Int32)Value;
        }
        private object get_19_KpiInfo_TrendValue(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.TrendValue;
        }
        private void set_19_KpiInfo_TrendValue(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.TrendValue = (global::System.Int32)Value;
        }
        private object get_20_KpiInfo_MeasureValue(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.MeasureValue;
        }
        private void set_20_KpiInfo_MeasureValue(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.MeasureValue = (global::System.String)Value;
        }
        private object get_21_KpiInfo_ActualMeasureValue(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.ActualMeasureValue;
        }
        private void set_21_KpiInfo_ActualMeasureValue(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.ActualMeasureValue = (global::System.String)Value;
        }
        private object get_22_KpiInfo_ActualGoalValue(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.ActualGoalValue;
        }
        private void set_22_KpiInfo_ActualGoalValue(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.ActualGoalValue = (global::System.String)Value;
        }
        private object get_23_KpiInfo_MeasureCaption(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.MeasureCaption;
        }
        private void set_23_KpiInfo_MeasureCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.MeasureCaption = (global::System.String)Value;
        }
        private object get_24_KpiInfo_GoalCaption(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.GoalCaption;
        }
        private void set_24_KpiInfo_GoalCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.GoalCaption = (global::System.String)Value;
        }
        private object get_25_KpiInfo_MemberName(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.MemberName;
        }
        private void set_25_KpiInfo_MemberName(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.MemberName = (global::System.String)Value;
        }
        private object get_26_KpiInfo_Kpi_Name(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.Kpi_Name;
        }
        private void set_26_KpiInfo_Kpi_Name(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.Kpi_Name = (global::System.String)Value;
        }
        private object get_27_KpiInfo_IsValidKpi(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.IsValidKpi;
        }
        private object get_28_KpiInfo_ValueIndex(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.ValueIndex;
        }
        private void set_28_KpiInfo_ValueIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.ValueIndex = (global::System.Int32)Value;
        }
        private object get_29_KpiInfo_GoalIndex(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.GoalIndex;
        }
        private void set_29_KpiInfo_GoalIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.GoalIndex = (global::System.Int32)Value;
        }
        private object get_30_KpiInfo_StatusIndex(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.StatusIndex;
        }
        private void set_30_KpiInfo_StatusIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.StatusIndex = (global::System.Int32)Value;
        }
        private object get_31_KpiInfo_TrendIndex(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.TrendIndex;
        }
        private void set_31_KpiInfo_TrendIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.TrendIndex = (global::System.Int32)Value;
        }
        private object get_32_KpiInfo_MemberRowIndex(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.MemberRowIndex;
        }
        private void set_32_KpiInfo_MemberRowIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.MemberRowIndex = (global::System.Int32)Value;
        }
        private object get_33_KpiInfo_StatusGraphic(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.StatusGraphic;
        }
        private void set_33_KpiInfo_StatusGraphic(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.StatusGraphic = (global::System.String)Value;
        }
        private object get_34_KpiInfo_TrendGraphic(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.TrendGraphic;
        }
        private void set_34_KpiInfo_TrendGraphic(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.TrendGraphic = (global::System.String)Value;
        }
        private object get_35_KpiInfo_MemberColumnIndex(object instance)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            return that.MemberColumnIndex;
        }
        private void set_35_KpiInfo_MemberColumnIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.Olap.UWP.Engine.KpiInfo)instance;
            that.MemberColumnIndex = (global::System.Int32)Value;
        }
        private object get_36_SfPivotGauge_OlapDataManager(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.OlapDataManager;
        }
        private void set_36_SfPivotGauge_OlapDataManager(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.OlapDataManager = (global::Syncfusion.Olap.UWP.Manager.OlapDataManager)Value;
        }
        private object get_37_SfPivotGauge_PivotEngine(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.PivotEngine;
        }
        private void set_37_SfPivotGauge_PivotEngine(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.PivotEngine = (global::System.Object)Value;
        }
        private object get_38_SfPivotGauge_ShowGaugeTooltip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.ShowGaugeTooltip;
        }
        private void set_38_SfPivotGauge_ShowGaugeTooltip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.ShowGaugeTooltip = (global::System.Boolean)Value;
        }
        private object get_39_SfPivotGauge_ShowGaugeHeaders(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.ShowGaugeHeaders;
        }
        private void set_39_SfPivotGauge_ShowGaugeHeaders(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.ShowGaugeHeaders = (global::System.Boolean)Value;
        }
        private object get_40_SfPivotGauge_ShowGaugeLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.ShowGaugeLabels;
        }
        private void set_40_SfPivotGauge_ShowGaugeLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.ShowGaugeLabels = (global::System.Boolean)Value;
        }
        private object get_41_SfPivotGauge_ShowGaugeFactors(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.ShowGaugeFactors;
        }
        private void set_41_SfPivotGauge_ShowGaugeFactors(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.ShowGaugeFactors = (global::System.Boolean)Value;
        }
        private object get_42_SfPivotGauge_ShowProcessingBar(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.ShowProcessingBar;
        }
        private void set_42_SfPivotGauge_ShowProcessingBar(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.ShowProcessingBar = (global::System.Boolean)Value;
        }
        private object get_43_SfPivotGauge_PivotRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.PivotRows;
        }
        private void set_43_SfPivotGauge_PivotRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.PivotRows = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)Value;
        }
        private object get_44_PivotItem_AllowFilter(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowFilter;
        }
        private void set_44_PivotItem_AllowFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowFilter = (global::System.Boolean)Value;
        }
        private object get_45_PivotItem_AllowRunTimeGroupByField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowRunTimeGroupByField;
        }
        private void set_45_PivotItem_AllowRunTimeGroupByField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowRunTimeGroupByField = (global::System.Boolean)Value;
        }
        private object get_46_PivotItem_AllowSort(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowSort;
        }
        private void set_46_PivotItem_AllowSort(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowSort = (global::System.Boolean)Value;
        }
        private object get_47_PivotItem_Comparer(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Comparer;
        }
        private void set_47_PivotItem_Comparer(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Comparer = (global::System.Collections.IComparer)Value;
        }
        private object get_48_PivotItem_EnableHyperlinks(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.EnableHyperlinks;
        }
        private void set_48_PivotItem_EnableHyperlinks(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.EnableHyperlinks = (global::System.Boolean)Value;
        }
        private object get_49_PivotItem_FieldCaption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldCaption;
        }
        private void set_49_PivotItem_FieldCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldCaption = (global::System.String)Value;
        }
        private object get_50_PivotItem_FieldHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldHeader;
        }
        private void set_50_PivotItem_FieldHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldHeader = (global::System.String)Value;
        }
        private object get_51_PivotItem_FieldMappingName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldMappingName;
        }
        private void set_51_PivotItem_FieldMappingName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldMappingName = (global::System.String)Value;
        }
        private object get_52_PivotItem_Format(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Format;
        }
        private void set_52_PivotItem_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_53_PivotItem_ShowSubTotal(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.ShowSubTotal;
        }
        private void set_53_PivotItem_ShowSubTotal(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.ShowSubTotal = (global::System.Boolean)Value;
        }
        private object get_54_PivotItem_SortDirection(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.SortDirection;
        }
        private void set_54_PivotItem_SortDirection(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.SortDirection = (global::Syncfusion.Data.ListSortDirection)Value;
        }
        private object get_55_PivotItem_Summary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Summary;
        }
        private void set_55_PivotItem_Summary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Summary = (global::Syncfusion.PivotAnalysis.UWP.SummaryBase)Value;
        }
        private object get_56_PivotItem_SummaryType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.SummaryType;
        }
        private void set_56_PivotItem_SummaryType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.SummaryType = (global::Syncfusion.PivotAnalysis.UWP.SummaryType)Value;
        }
        private object get_57_PivotItem_TotalHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.TotalHeader;
        }
        private void set_57_PivotItem_TotalHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.TotalHeader = (global::System.String)Value;
        }
        private object get_58_PivotItem_Width(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Width;
        }
        private void set_58_PivotItem_Width(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_59_SfPivotGauge_PivotColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.PivotColumns;
        }
        private void set_59_SfPivotGauge_PivotColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.PivotColumns = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)Value;
        }
        private object get_60_SfPivotGauge_PivotCalculations(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.PivotCalculations;
        }
        private void set_60_SfPivotGauge_PivotCalculations(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.PivotCalculations = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)Value;
        }
        private object get_61_PivotComputationInfo_AllowFilter(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowFilter;
        }
        private void set_61_PivotComputationInfo_AllowFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowFilter = (global::System.Boolean)Value;
        }
        private object get_62_PivotComputationInfo_AllowRunTimeGroupByField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowRunTimeGroupByField;
        }
        private void set_62_PivotComputationInfo_AllowRunTimeGroupByField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowRunTimeGroupByField = (global::System.Boolean)Value;
        }
        private object get_63_PivotComputationInfo_AllowSort(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowSort;
        }
        private void set_63_PivotComputationInfo_AllowSort(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowSort = (global::System.Boolean)Value;
        }
        private object get_64_PivotComputationInfo_BaseField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.BaseField;
        }
        private void set_64_PivotComputationInfo_BaseField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.BaseField = (global::System.String)Value;
        }
        private object get_65_PivotComputationInfo_BaseItem(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.BaseItem;
        }
        private void set_65_PivotComputationInfo_BaseItem(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.BaseItem = (global::System.String)Value;
        }
        private object get_66_PivotComputationInfo_FieldType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldType;
        }
        private void set_66_PivotComputationInfo_FieldType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldType = (global::System.String)Value;
        }
        private object get_67_PivotComputationInfo_CalculationName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.CalculationName;
        }
        private void set_67_PivotComputationInfo_CalculationName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.CalculationName = (global::System.String)Value;
        }
        private object get_68_PivotComputationInfo_CalculationType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.CalculationType;
        }
        private void set_68_PivotComputationInfo_CalculationType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.CalculationType = (global::Syncfusion.PivotAnalysis.UWP.CalculationType)Value;
        }
        private object get_69_PivotComputationInfo_DefaultValue(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.DefaultValue;
        }
        private void set_69_PivotComputationInfo_DefaultValue(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.DefaultValue = (global::System.Object)Value;
        }
        private object get_70_PivotComputationInfo_Description(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Description;
        }
        private void set_70_PivotComputationInfo_Description(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_71_PivotComputationInfo_DisplayOption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.DisplayOption;
        }
        private void set_71_PivotComputationInfo_DisplayOption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.DisplayOption = (global::Syncfusion.PivotAnalysis.UWP.DisplayOption)Value;
        }
        private object get_72_PivotComputationInfo_EnableHyperlinks(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.EnableHyperlinks;
        }
        private void set_72_PivotComputationInfo_EnableHyperlinks(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.EnableHyperlinks = (global::System.Boolean)Value;
        }
        private object get_73_PivotComputationInfo_Expression(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Expression;
        }
        private void set_73_PivotComputationInfo_Expression(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Expression = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)Value;
        }
        private object get_74_PivotComputationInfo_FieldCaption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldCaption;
        }
        private void set_74_PivotComputationInfo_FieldCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldCaption = (global::System.String)Value;
        }
        private object get_75_PivotComputationInfo_FieldHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldHeader;
        }
        private void set_75_PivotComputationInfo_FieldHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldHeader = (global::System.String)Value;
        }
        private object get_76_PivotComputationInfo_FieldName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldName;
        }
        private void set_76_PivotComputationInfo_FieldName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldName = (global::System.String)Value;
        }
        private object get_77_PivotComputationInfo_Format(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Format;
        }
        private void set_77_PivotComputationInfo_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_78_PivotComputationInfo_Formula(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Formula;
        }
        private void set_78_PivotComputationInfo_Formula(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Formula = (global::System.String)Value;
        }
        private object get_79_PivotComputationInfo_InnerMostComputationsOnly(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.InnerMostComputationsOnly;
        }
        private void set_79_PivotComputationInfo_InnerMostComputationsOnly(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.InnerMostComputationsOnly = (global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel)Value;
        }
        private object get_80_PivotComputationInfo_IsTopColumnSummary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.IsTopColumnSummary;
        }
        private void set_80_PivotComputationInfo_IsTopColumnSummary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.IsTopColumnSummary = (global::System.Boolean)Value;
        }
        private object get_81_PivotComputationInfo_PadString(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.PadString;
        }
        private void set_81_PivotComputationInfo_PadString(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.PadString = (global::System.String)Value;
        }
        private object get_82_PivotComputationInfo_Summary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Summary;
        }
        private void set_82_PivotComputationInfo_Summary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Summary = (global::Syncfusion.PivotAnalysis.UWP.SummaryBase)Value;
        }
        private object get_83_PivotComputationInfo_SummaryType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.SummaryType;
        }
        private void set_83_PivotComputationInfo_SummaryType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.SummaryType = (global::Syncfusion.PivotAnalysis.UWP.SummaryType)Value;
        }
        private object get_84_SfPivotGauge_ItemSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            return that.ItemSource;
        }
        private void set_84_SfPivotGauge_ItemSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge)instance;
            that.ItemSource = (global::System.Object)Value;
        }
        private object get_85_SetterValueBindingHelper_Type(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Type;
        }
        private void set_85_SetterValueBindingHelper_Type(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Type = (global::System.String)Value;
        }
        private object get_86_SetterValueBindingHelper_Property(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Property;
        }
        private void set_86_SetterValueBindingHelper_Property(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Property = (global::System.String)Value;
        }
        private object get_87_SetterValueBindingHelper_Binding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Binding;
        }
        private void set_87_SetterValueBindingHelper_Binding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Binding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_88_SetterValueBindingHelper_Values(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Values;
        }
        private object get_89_SetterValueBindingHelper_PropertyBinding(object instance)
        {
            return global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.GetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance);
        }
        private void set_89_SetterValueBindingHelper_PropertyBinding(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.SetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance, (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)Value);
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember xamlMember = null;
            global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Windows.UI.Color.A":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_0_Color_A;
                xamlMember.Setter = set_0_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_1_Color_B;
                xamlMember.Setter = set_1_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_2_Color_G;
                xamlMember.Setter = set_2_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_3_Color_R;
                xamlMember.Setter = set_3_Color_R;
                break;
            case "Common.SampleLayout.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Header", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_SampleLayout_Header;
                xamlMember.Setter = set_4_SampleLayout_Header;
                break;
            case "Common.SampleLayout.Sample":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Sample", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SampleLayout_Sample;
                xamlMember.Setter = set_5_SampleLayout_Sample;
                break;
            case "Common.SampleLayout.Setting":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Setting", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_SampleLayout_Setting;
                xamlMember.Setter = set_6_SampleLayout_Setting;
                break;
            case "Common.SampleLayout.OptionVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "OptionVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_SampleLayout_OptionVisibility;
                xamlMember.Setter = set_7_SampleLayout_OptionVisibility;
                break;
            case "Common.SampleLayout.FontIcons":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "FontIcons", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_SampleLayout_FontIcons;
                xamlMember.Setter = set_8_SampleLayout_FontIcons;
                break;
            case "Common.SampleLayout.Pathstring":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Pathstring", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_SampleLayout_Pathstring;
                xamlMember.Setter = set_9_SampleLayout_Pathstring;
                break;
            case "Common.SampleLayout.ClickCommand":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ClickCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_10_SampleLayout_ClickCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.Radius":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Radius", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_SfPivotGauge_Radius;
                xamlMember.Setter = set_11_SfPivotGauge_Radius;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.RowsCount":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "RowsCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_SfPivotGauge_RowsCount;
                xamlMember.Setter = set_12_SfPivotGauge_RowsCount;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.ColumnsCount":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ColumnsCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_SfPivotGauge_ColumnsCount;
                xamlMember.Setter = set_13_SfPivotGauge_ColumnsCount;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.GaugeVisualStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "GaugeVisualStyle", "Syncfusion.UI.Xaml.PivotGauge.PivotGaugeVisualStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_SfPivotGauge_GaugeVisualStyle;
                xamlMember.Setter = set_14_SfPivotGauge_GaugeVisualStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.StatusIndicator":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "StatusIndicator", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_SfPivotGauge_StatusIndicator;
                xamlMember.Setter = set_15_SfPivotGauge_StatusIndicator;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.KpiInfoCollection":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "KpiInfoCollection", "Syncfusion.Olap.UWP.Engine.KpiInfoCollection");
                xamlMember.Getter = get_16_SfPivotGauge_KpiInfoCollection;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.GoalValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "GoalValue", "String");
                xamlMember.Getter = get_17_KpiInfo_GoalValue;
                xamlMember.Setter = set_17_KpiInfo_GoalValue;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.StatusValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "StatusValue", "Int32");
                xamlMember.Getter = get_18_KpiInfo_StatusValue;
                xamlMember.Setter = set_18_KpiInfo_StatusValue;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.TrendValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "TrendValue", "Int32");
                xamlMember.Getter = get_19_KpiInfo_TrendValue;
                xamlMember.Setter = set_19_KpiInfo_TrendValue;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.MeasureValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "MeasureValue", "String");
                xamlMember.Getter = get_20_KpiInfo_MeasureValue;
                xamlMember.Setter = set_20_KpiInfo_MeasureValue;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.ActualMeasureValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ActualMeasureValue", "String");
                xamlMember.Getter = get_21_KpiInfo_ActualMeasureValue;
                xamlMember.Setter = set_21_KpiInfo_ActualMeasureValue;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.ActualGoalValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ActualGoalValue", "String");
                xamlMember.Getter = get_22_KpiInfo_ActualGoalValue;
                xamlMember.Setter = set_22_KpiInfo_ActualGoalValue;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.MeasureCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "MeasureCaption", "String");
                xamlMember.Getter = get_23_KpiInfo_MeasureCaption;
                xamlMember.Setter = set_23_KpiInfo_MeasureCaption;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.GoalCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "GoalCaption", "String");
                xamlMember.Getter = get_24_KpiInfo_GoalCaption;
                xamlMember.Setter = set_24_KpiInfo_GoalCaption;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.MemberName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "MemberName", "String");
                xamlMember.Getter = get_25_KpiInfo_MemberName;
                xamlMember.Setter = set_25_KpiInfo_MemberName;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.Kpi_Name":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Kpi_Name", "String");
                xamlMember.Getter = get_26_KpiInfo_Kpi_Name;
                xamlMember.Setter = set_26_KpiInfo_Kpi_Name;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.IsValidKpi":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "IsValidKpi", "Boolean");
                xamlMember.Getter = get_27_KpiInfo_IsValidKpi;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.ValueIndex":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ValueIndex", "Int32");
                xamlMember.Getter = get_28_KpiInfo_ValueIndex;
                xamlMember.Setter = set_28_KpiInfo_ValueIndex;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.GoalIndex":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "GoalIndex", "Int32");
                xamlMember.Getter = get_29_KpiInfo_GoalIndex;
                xamlMember.Setter = set_29_KpiInfo_GoalIndex;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.StatusIndex":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "StatusIndex", "Int32");
                xamlMember.Getter = get_30_KpiInfo_StatusIndex;
                xamlMember.Setter = set_30_KpiInfo_StatusIndex;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.TrendIndex":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "TrendIndex", "Int32");
                xamlMember.Getter = get_31_KpiInfo_TrendIndex;
                xamlMember.Setter = set_31_KpiInfo_TrendIndex;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.MemberRowIndex":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "MemberRowIndex", "Int32");
                xamlMember.Getter = get_32_KpiInfo_MemberRowIndex;
                xamlMember.Setter = set_32_KpiInfo_MemberRowIndex;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.StatusGraphic":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "StatusGraphic", "String");
                xamlMember.Getter = get_33_KpiInfo_StatusGraphic;
                xamlMember.Setter = set_33_KpiInfo_StatusGraphic;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.TrendGraphic":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "TrendGraphic", "String");
                xamlMember.Getter = get_34_KpiInfo_TrendGraphic;
                xamlMember.Setter = set_34_KpiInfo_TrendGraphic;
                break;
            case "Syncfusion.Olap.UWP.Engine.KpiInfo.MemberColumnIndex":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Olap.UWP.Engine.KpiInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "MemberColumnIndex", "Int32");
                xamlMember.Getter = get_35_KpiInfo_MemberColumnIndex;
                xamlMember.Setter = set_35_KpiInfo_MemberColumnIndex;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.OlapDataManager":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "OlapDataManager", "Syncfusion.Olap.UWP.Manager.OlapDataManager");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_SfPivotGauge_OlapDataManager;
                xamlMember.Setter = set_36_SfPivotGauge_OlapDataManager;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.PivotEngine":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "PivotEngine", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_SfPivotGauge_PivotEngine;
                xamlMember.Setter = set_37_SfPivotGauge_PivotEngine;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.ShowGaugeTooltip":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ShowGaugeTooltip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_SfPivotGauge_ShowGaugeTooltip;
                xamlMember.Setter = set_38_SfPivotGauge_ShowGaugeTooltip;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.ShowGaugeHeaders":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ShowGaugeHeaders", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_SfPivotGauge_ShowGaugeHeaders;
                xamlMember.Setter = set_39_SfPivotGauge_ShowGaugeHeaders;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.ShowGaugeLabels":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ShowGaugeLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_SfPivotGauge_ShowGaugeLabels;
                xamlMember.Setter = set_40_SfPivotGauge_ShowGaugeLabels;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.ShowGaugeFactors":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ShowGaugeFactors", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_SfPivotGauge_ShowGaugeFactors;
                xamlMember.Setter = set_41_SfPivotGauge_ShowGaugeFactors;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.ShowProcessingBar":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ShowProcessingBar", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_SfPivotGauge_ShowProcessingBar;
                xamlMember.Setter = set_42_SfPivotGauge_ShowProcessingBar;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.PivotRows":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "PivotRows", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_SfPivotGauge_PivotRows;
                xamlMember.Setter = set_43_SfPivotGauge_PivotRows;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowFilter":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "AllowFilter", "Boolean");
                xamlMember.Getter = get_44_PivotItem_AllowFilter;
                xamlMember.Setter = set_44_PivotItem_AllowFilter;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowRunTimeGroupByField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "AllowRunTimeGroupByField", "Boolean");
                xamlMember.Getter = get_45_PivotItem_AllowRunTimeGroupByField;
                xamlMember.Setter = set_45_PivotItem_AllowRunTimeGroupByField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowSort":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "AllowSort", "Boolean");
                xamlMember.Getter = get_46_PivotItem_AllowSort;
                xamlMember.Setter = set_46_PivotItem_AllowSort;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Comparer":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Comparer", "System.Collections.IComparer");
                xamlMember.Getter = get_47_PivotItem_Comparer;
                xamlMember.Setter = set_47_PivotItem_Comparer;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.EnableHyperlinks":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "EnableHyperlinks", "Boolean");
                xamlMember.Getter = get_48_PivotItem_EnableHyperlinks;
                xamlMember.Setter = set_48_PivotItem_EnableHyperlinks;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "FieldCaption", "String");
                xamlMember.Getter = get_49_PivotItem_FieldCaption;
                xamlMember.Setter = set_49_PivotItem_FieldCaption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "FieldHeader", "String");
                xamlMember.Getter = get_50_PivotItem_FieldHeader;
                xamlMember.Setter = set_50_PivotItem_FieldHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldMappingName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "FieldMappingName", "String");
                xamlMember.Getter = get_51_PivotItem_FieldMappingName;
                xamlMember.Setter = set_51_PivotItem_FieldMappingName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Format":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_52_PivotItem_Format;
                xamlMember.Setter = set_52_PivotItem_Format;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.ShowSubTotal":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ShowSubTotal", "Boolean");
                xamlMember.Getter = get_53_PivotItem_ShowSubTotal;
                xamlMember.Setter = set_53_PivotItem_ShowSubTotal;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.SortDirection":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "SortDirection", "Syncfusion.Data.ListSortDirection");
                xamlMember.Getter = get_54_PivotItem_SortDirection;
                xamlMember.Setter = set_54_PivotItem_SortDirection;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Summary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Summary", "Syncfusion.PivotAnalysis.UWP.SummaryBase");
                xamlMember.Getter = get_55_PivotItem_Summary;
                xamlMember.Setter = set_55_PivotItem_Summary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.SummaryType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "SummaryType", "Syncfusion.PivotAnalysis.UWP.SummaryType");
                xamlMember.Getter = get_56_PivotItem_SummaryType;
                xamlMember.Setter = set_56_PivotItem_SummaryType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.TotalHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "TotalHeader", "String");
                xamlMember.Getter = get_57_PivotItem_TotalHeader;
                xamlMember.Setter = set_57_PivotItem_TotalHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Width":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.Getter = get_58_PivotItem_Width;
                xamlMember.Setter = set_58_PivotItem_Width;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.PivotColumns":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "PivotColumns", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_SfPivotGauge_PivotColumns;
                xamlMember.Setter = set_59_SfPivotGauge_PivotColumns;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.PivotCalculations":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "PivotCalculations", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_SfPivotGauge_PivotCalculations;
                xamlMember.Setter = set_60_SfPivotGauge_PivotCalculations;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowFilter":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "AllowFilter", "Boolean");
                xamlMember.Getter = get_61_PivotComputationInfo_AllowFilter;
                xamlMember.Setter = set_61_PivotComputationInfo_AllowFilter;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowRunTimeGroupByField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "AllowRunTimeGroupByField", "Boolean");
                xamlMember.Getter = get_62_PivotComputationInfo_AllowRunTimeGroupByField;
                xamlMember.Setter = set_62_PivotComputationInfo_AllowRunTimeGroupByField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowSort":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "AllowSort", "Boolean");
                xamlMember.Getter = get_63_PivotComputationInfo_AllowSort;
                xamlMember.Setter = set_63_PivotComputationInfo_AllowSort;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.BaseField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "BaseField", "String");
                xamlMember.Getter = get_64_PivotComputationInfo_BaseField;
                xamlMember.Setter = set_64_PivotComputationInfo_BaseField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.BaseItem":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "BaseItem", "String");
                xamlMember.Getter = get_65_PivotComputationInfo_BaseItem;
                xamlMember.Setter = set_65_PivotComputationInfo_BaseItem;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "FieldType", "String");
                xamlMember.Getter = get_66_PivotComputationInfo_FieldType;
                xamlMember.Setter = set_66_PivotComputationInfo_FieldType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.CalculationName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "CalculationName", "String");
                xamlMember.Getter = get_67_PivotComputationInfo_CalculationName;
                xamlMember.Setter = set_67_PivotComputationInfo_CalculationName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.CalculationType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "CalculationType", "Syncfusion.PivotAnalysis.UWP.CalculationType");
                xamlMember.Getter = get_68_PivotComputationInfo_CalculationType;
                xamlMember.Setter = set_68_PivotComputationInfo_CalculationType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.DefaultValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "DefaultValue", "Object");
                xamlMember.Getter = get_69_PivotComputationInfo_DefaultValue;
                xamlMember.Setter = set_69_PivotComputationInfo_DefaultValue;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Description":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_70_PivotComputationInfo_Description;
                xamlMember.Setter = set_70_PivotComputationInfo_Description;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.DisplayOption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "DisplayOption", "Syncfusion.PivotAnalysis.UWP.DisplayOption");
                xamlMember.Getter = get_71_PivotComputationInfo_DisplayOption;
                xamlMember.Setter = set_71_PivotComputationInfo_DisplayOption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.EnableHyperlinks":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "EnableHyperlinks", "Boolean");
                xamlMember.Getter = get_72_PivotComputationInfo_EnableHyperlinks;
                xamlMember.Setter = set_72_PivotComputationInfo_EnableHyperlinks;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Expression":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Expression", "Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember.Getter = get_73_PivotComputationInfo_Expression;
                xamlMember.Setter = set_73_PivotComputationInfo_Expression;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "FieldCaption", "String");
                xamlMember.Getter = get_74_PivotComputationInfo_FieldCaption;
                xamlMember.Setter = set_74_PivotComputationInfo_FieldCaption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "FieldHeader", "String");
                xamlMember.Getter = get_75_PivotComputationInfo_FieldHeader;
                xamlMember.Setter = set_75_PivotComputationInfo_FieldHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "FieldName", "String");
                xamlMember.Getter = get_76_PivotComputationInfo_FieldName;
                xamlMember.Setter = set_76_PivotComputationInfo_FieldName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Format":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_77_PivotComputationInfo_Format;
                xamlMember.Setter = set_77_PivotComputationInfo_Format;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Formula":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Formula", "String");
                xamlMember.Getter = get_78_PivotComputationInfo_Formula;
                xamlMember.Setter = set_78_PivotComputationInfo_Formula;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.InnerMostComputationsOnly":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "InnerMostComputationsOnly", "Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel");
                xamlMember.Getter = get_79_PivotComputationInfo_InnerMostComputationsOnly;
                xamlMember.Setter = set_79_PivotComputationInfo_InnerMostComputationsOnly;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.IsTopColumnSummary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "IsTopColumnSummary", "Boolean");
                xamlMember.Getter = get_80_PivotComputationInfo_IsTopColumnSummary;
                xamlMember.Setter = set_80_PivotComputationInfo_IsTopColumnSummary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.PadString":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "PadString", "String");
                xamlMember.Getter = get_81_PivotComputationInfo_PadString;
                xamlMember.Setter = set_81_PivotComputationInfo_PadString;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Summary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Summary", "Syncfusion.PivotAnalysis.UWP.SummaryBase");
                xamlMember.Getter = get_82_PivotComputationInfo_Summary;
                xamlMember.Setter = set_82_PivotComputationInfo_Summary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.SummaryType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "SummaryType", "Syncfusion.PivotAnalysis.UWP.SummaryType");
                xamlMember.Getter = get_83_PivotComputationInfo_SummaryType;
                xamlMember.Setter = set_83_PivotComputationInfo_SummaryType;
                break;
            case "Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge.ItemSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGauge.SfPivotGauge");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "ItemSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_SfPivotGauge_ItemSource;
                xamlMember.Setter = set_84_SfPivotGauge_ItemSource;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Type":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Type", "String");
                xamlMember.Getter = get_85_SetterValueBindingHelper_Type;
                xamlMember.Setter = set_85_SetterValueBindingHelper_Type;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Property":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Property", "String");
                xamlMember.Getter = get_86_SetterValueBindingHelper_Property;
                xamlMember.Setter = set_86_SetterValueBindingHelper_Property;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Binding":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Binding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_87_SetterValueBindingHelper_Binding;
                xamlMember.Setter = set_87_SetterValueBindingHelper_Binding;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Values":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "Values", "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>");
                xamlMember.Getter = get_88_SetterValueBindingHelper_Values;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.PropertyBinding":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlMember(this, "PropertyBinding", "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_89_SetterValueBindingHelper_PropertyBinding;
                xamlMember.Setter = set_89_SetterValueBindingHelper_PropertyBinding;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlSystemBaseType
    {
        global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Syncfusion.SampleBrowser.UWP.PivotGauge.Syncfusion_SampleBrowser_UWP_PivotGauge_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

