<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://schemas.datacontract.org/2004/07/Syncfusion.Olap.UWP.Reports" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/Syncfusion.Olap.UWP.Reports" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:complexType name="Element">
    <xs:sequence />
  </xs:complexType>
  <xs:element name="Element" nillable="true" type="tns:Element" />
  <xs:complexType name="ElementCollection">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="Element" nillable="true" type="tns:Element" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ElementCollection" nillable="true" type="tns:ElementCollection" />
  <xs:complexType name="DimensionElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="DrillState" type="tns:DrillState" />
          <xs:element minOccurs="0" name="DrillUpDownLevel" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="DrillUpDownMember" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="Hierarchy" nillable="true" type="tns:HierarchyElement" />
          <xs:element minOccurs="0" name="HierarchyName" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="MemberProperties" nillable="true" type="tns:MemberPropertyCollection" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="DimensionElement" nillable="true" type="tns:DimensionElement" />
  <xs:simpleType name="DrillState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Default" />
      <xs:enumeration value="ExpandAll" />
      <xs:enumeration value="CollapseAll" />
      <xs:enumeration value="ExpandToLevel" />
      <xs:enumeration value="CollapseToLevel" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="DrillState" nillable="true" type="tns:DrillState" />
  <xs:complexType name="HierarchyElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="IsAttributeHierarchy" type="xs:boolean" />
          <xs:element minOccurs="0" name="LevelElements" nillable="true" type="tns:LevelElementCollection" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="HierarchyElement" nillable="true" type="tns:HierarchyElement" />
  <xs:complexType name="LevelElementCollection">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="LevelElement" nillable="true" type="tns:LevelElement" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LevelElementCollection" nillable="true" type="tns:LevelElementCollection" />
  <xs:complexType name="LevelElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="DimensionName" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="IncludeAvailableMembers" type="xs:boolean" />
          <xs:element minOccurs="0" name="MemberElements" nillable="true" type="tns:MemberElementCollection" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="LevelElement" nillable="true" type="tns:LevelElement" />
  <xs:complexType name="MemberElementCollection">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="MemberElement" nillable="true" type="tns:MemberElement" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MemberElementCollection" nillable="true" type="tns:MemberElementCollection" />
  <xs:complexType name="MemberElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="ChildMemberElements" nillable="true" type="tns:MemberElementCollection" />
          <xs:element minOccurs="0" name="Level" type="xs:int" />
          <xs:element minOccurs="0" name="ShowChildMembers" type="xs:boolean" />
          <xs:element minOccurs="0" name="UniqueName" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="MemberElement" nillable="true" type="tns:MemberElement" />
  <xs:complexType name="MemberPropertyCollection">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="MemberProperty" nillable="true" type="tns:MemberProperty" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MemberPropertyCollection" nillable="true" type="tns:MemberPropertyCollection" />
  <xs:complexType name="MemberProperty">
    <xs:sequence>
      <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="UniqueName" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MemberProperty" nillable="true" type="tns:MemberProperty" />
  <xs:complexType name="HierarchyElementCollection">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="HierarchyElement" nillable="true" type="tns:HierarchyElement" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="HierarchyElementCollection" nillable="true" type="tns:HierarchyElementCollection" />
  <xs:complexType name="MeasureElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="UniqueName" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="MeasureElement" nillable="true" type="tns:MeasureElement" />
  <xs:complexType name="MeasureElements">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="Elements" nillable="true" type="tns:MeasureElementCollection" />
          <xs:element minOccurs="0" name="ExcludedMeasures" nillable="true" type="tns:MeasureElementCollection" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="MeasureElements" nillable="true" type="tns:MeasureElements" />
  <xs:complexType name="MeasureElementCollection">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="MeasureElement" nillable="true" type="tns:MeasureElement" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MeasureElementCollection" nillable="true" type="tns:MeasureElementCollection" />
  <xs:complexType name="KpiElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="ShowKPIGoal" type="xs:boolean" />
          <xs:element minOccurs="0" name="ShowKPIStatus" type="xs:boolean" />
          <xs:element minOccurs="0" name="ShowKPITrend" type="xs:boolean" />
          <xs:element minOccurs="0" name="ShowKPIValue" type="xs:boolean" />
          <xs:element minOccurs="0" name="UniqueName" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="KpiElement" nillable="true" type="tns:KpiElement" />
  <xs:complexType name="KpiElementCollection">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="KpiElement" nillable="true" type="tns:KpiElement" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="KpiElementCollection" nillable="true" type="tns:KpiElementCollection" />
  <xs:complexType name="KpiElements">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="Elements" nillable="true" type="tns:KpiElementCollection" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="KpiElements" nillable="true" type="tns:KpiElements" />
  <xs:complexType name="NamedSetElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="IsQueryScoped" type="xs:boolean" />
          <xs:element minOccurs="0" name="SetQuery" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="NamedSetElement" nillable="true" type="tns:NamedSetElement" />
  <xs:complexType name="SortElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="Axis" type="tns:AxisPosition" />
          <xs:element minOccurs="0" name="Element" nillable="true" type="tns:MeasureElement" />
          <xs:element minOccurs="0" name="IsSortOn" type="xs:boolean" />
          <xs:element minOccurs="0" name="SortOrder" type="tns:SortOrder" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="SortElement" nillable="true" type="tns:SortElement" />
  <xs:simpleType name="AxisPosition">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Categorical" />
      <xs:enumeration value="Series" />
      <xs:enumeration value="Slicer" />
      <xs:enumeration value="Values" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="AxisPosition" nillable="true" type="tns:AxisPosition" />
  <xs:simpleType name="SortOrder">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BDESC" />
      <xs:enumeration value="BASC" />
      <xs:enumeration value="DESC" />
      <xs:enumeration value="ASC" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="SortOrder" nillable="true" type="tns:SortOrder" />
  <xs:complexType name="FilterElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="Axis" type="tns:AxisPosition" />
          <xs:element minOccurs="0" name="Elements" nillable="true" type="tns:ElementCollection" />
          <xs:element minOccurs="0" name="FilterCase" type="tns:FilterCase" />
          <xs:element minOccurs="0" name="FilterValue" nillable="true" type="tns:ElementCollection" />
          <xs:element minOccurs="0" name="IsFilterCondition" type="xs:boolean" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="FilterElement" nillable="true" type="tns:FilterElement" />
  <xs:simpleType name="FilterCase">
    <xs:restriction base="xs:string">
      <xs:enumeration value="GreaterThan" />
      <xs:enumeration value="LessThan" />
      <xs:enumeration value="EqualTo" />
      <xs:enumeration value="GreaterThanOrEqualTo" />
      <xs:enumeration value="LessThanOrEqualTo" />
      <xs:enumeration value="NotEquals" />
      <xs:enumeration value="Between" />
      <xs:enumeration value="NotBetween" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="FilterCase" nillable="true" type="tns:FilterCase" />
  <xs:complexType name="FilterValue">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="FilterValue" nillable="true" type="tns:FilterValue" />
  <xs:complexType name="CalculatedMember">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="CustomExpression" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="Expression" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="FormatString" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="Type" type="tns:TypeOfMember" />
          <xs:element minOccurs="0" name="UniqueName" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="CalculatedMember" nillable="true" type="tns:CalculatedMember" />
  <xs:simpleType name="TypeOfMember">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Measure" />
      <xs:enumeration value="Dimension" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="TypeOfMember" nillable="true" type="tns:TypeOfMember" />
  <xs:complexType name="CalculatedMembers">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="CalculatedMembers" nillable="true" type="tns:CalculatedMembers" />
  <xs:complexType name="CalculatedMemberCollection">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="CalculatedMember" nillable="true" type="tns:CalculatedMember" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="CalculatedMemberCollection" nillable="true" type="tns:CalculatedMemberCollection" />
  <xs:complexType name="TopCountElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="Axis" type="tns:AxisPosition" />
          <xs:element minOccurs="0" name="FieldCount" type="xs:int" />
          <xs:element minOccurs="0" name="MeasureName" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="TopCountElement" nillable="true" type="tns:TopCountElement" />
  <xs:complexType name="SubsetElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="SubsetElement" nillable="true" type="tns:SubsetElement" />
  <xs:complexType name="VirtualKpiElement">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="Expression" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="KpiGoalExpression" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="KpiStatusExpression" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="KpiTrendExpression" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="KpiValueExpression" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="ShowVirtualKPIGoal" type="xs:boolean" />
          <xs:element minOccurs="0" name="ShowVirtualKPIStatus" type="xs:boolean" />
          <xs:element minOccurs="0" name="ShowVirtualKPITrend" type="xs:boolean" />
          <xs:element minOccurs="0" name="ShowVirtualKPIValue" type="xs:boolean" />
          <xs:element minOccurs="0" name="StatusGraphic" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="TrendGraphic" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="VirtualKpiElement" nillable="true" type="tns:VirtualKpiElement" />
</xs:schema>