//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[43];
            _typeNameTable[0] = "Syncfusion.SampleBrowser.UWP.SfSparkline.MainPage";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "Common.SampleLayout";
            _typeNameTable[4] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[5] = "String";
            _typeNameTable[6] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[7] = "System.Windows.Input.ICommand";
            _typeNameTable[8] = "Syncfusion.UI.Xaml.Charts.SfLineSparkline";
            _typeNameTable[9] = "Syncfusion.UI.Xaml.Charts.MarkerBase";
            _typeNameTable[10] = "Syncfusion.UI.Xaml.Charts.SparklineBase";
            _typeNameTable[11] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[12] = "System.Collections.IEnumerable";
            _typeNameTable[13] = "Windows.UI.Xaml.Style";
            _typeNameTable[14] = "Boolean";
            _typeNameTable[15] = "Double";
            _typeNameTable[16] = "Syncfusion.UI.Xaml.Charts.TemplateSelector";
            _typeNameTable[17] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[18] = "Syncfusion.UI.Xaml.Charts.EmptyPointValues";
            _typeNameTable[19] = "System.Enum";
            _typeNameTable[20] = "System.ValueType";
            _typeNameTable[21] = "Object";
            _typeNameTable[22] = "Syncfusion.UI.Xaml.Charts.SfAreaSparkline";
            _typeNameTable[23] = "Syncfusion.UI.Xaml.Charts.SfColumnSparkline";
            _typeNameTable[24] = "Syncfusion.UI.Xaml.Charts.ColumnBase";
            _typeNameTable[25] = "Syncfusion.UI.Xaml.Charts.SfWinLossSparkline";
            _typeNameTable[26] = "Syncfusion.SampleBrowser.UWP.SfSparkline.SparklineDemo";
            _typeNameTable[27] = "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkViewModel";
            _typeNameTable[28] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>";
            _typeNameTable[29] = "System.Collections.ObjectModel.Collection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>";
            _typeNameTable[30] = "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel";
            _typeNameTable[31] = "System.DateTime";
            _typeNameTable[32] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>";
            _typeNameTable[33] = "System.Collections.ObjectModel.Collection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>";
            _typeNameTable[34] = "Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel";
            _typeNameTable[35] = "Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector";
            _typeNameTable[36] = "Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector";
            _typeNameTable[37] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[38] = "Int32";
            _typeNameTable[39] = "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper";
            _typeNameTable[40] = "Windows.UI.Xaml.Data.Binding";
            _typeNameTable[41] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>";
            _typeNameTable[42] = "Windows.UI.Xaml.FrameworkElement";

            _typeTable = new global::System.Type[43];
            _typeTable[0] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSparkline.MainPage);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::Common.SampleLayout);
            _typeTable[4] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[5] = typeof(global::System.String);
            _typeTable[6] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[7] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[8] = typeof(global::Syncfusion.UI.Xaml.Charts.SfLineSparkline);
            _typeTable[9] = typeof(global::Syncfusion.UI.Xaml.Charts.MarkerBase);
            _typeTable[10] = typeof(global::Syncfusion.UI.Xaml.Charts.SparklineBase);
            _typeTable[11] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[12] = typeof(global::System.Collections.IEnumerable);
            _typeTable[13] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[14] = typeof(global::System.Boolean);
            _typeTable[15] = typeof(global::System.Double);
            _typeTable[16] = typeof(global::Syncfusion.UI.Xaml.Charts.TemplateSelector);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[18] = typeof(global::Syncfusion.UI.Xaml.Charts.EmptyPointValues);
            _typeTable[19] = typeof(global::System.Enum);
            _typeTable[20] = typeof(global::System.ValueType);
            _typeTable[21] = typeof(global::System.Object);
            _typeTable[22] = typeof(global::Syncfusion.UI.Xaml.Charts.SfAreaSparkline);
            _typeTable[23] = typeof(global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline);
            _typeTable[24] = typeof(global::Syncfusion.UI.Xaml.Charts.ColumnBase);
            _typeTable[25] = typeof(global::Syncfusion.UI.Xaml.Charts.SfWinLossSparkline);
            _typeTable[26] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparklineDemo);
            _typeTable[27] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkViewModel);
            _typeTable[28] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>);
            _typeTable[29] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>);
            _typeTable[30] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel);
            _typeTable[31] = typeof(global::System.DateTime);
            _typeTable[32] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>);
            _typeTable[33] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>);
            _typeTable[34] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel);
            _typeTable[35] = typeof(global::Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector);
            _typeTable[36] = typeof(global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector);
            _typeTable[37] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[38] = typeof(global::System.Int32);
            _typeTable[39] = typeof(global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper);
            _typeTable[40] = typeof(global::Windows.UI.Xaml.Data.Binding);
            _typeTable[41] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>);
            _typeTable[42] = typeof(global::Windows.UI.Xaml.FrameworkElement);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_MainPage() { return new global::Syncfusion.SampleBrowser.UWP.SfSparkline.MainPage(); }
        private object Activate_3_SampleLayout() { return new global::Common.SampleLayout(); }
        private object Activate_8_SfLineSparkline() { return new global::Syncfusion.UI.Xaml.Charts.SfLineSparkline(); }
        private object Activate_16_TemplateSelector() { return new global::Syncfusion.UI.Xaml.Charts.TemplateSelector(); }
        private object Activate_22_SfAreaSparkline() { return new global::Syncfusion.UI.Xaml.Charts.SfAreaSparkline(); }
        private object Activate_23_SfColumnSparkline() { return new global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline(); }
        private object Activate_25_SfWinLossSparkline() { return new global::Syncfusion.UI.Xaml.Charts.SfWinLossSparkline(); }
        private object Activate_26_SparklineDemo() { return new global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparklineDemo(); }
        private object Activate_27_SparkViewModel() { return new global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkViewModel(); }
        private object Activate_28_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>(); }
        private object Activate_29_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>(); }
        private object Activate_30_SparkModel() { return new global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel(); }
        private object Activate_32_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>(); }
        private object Activate_33_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>(); }
        private object Activate_34_DataModel() { return new global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel(); }
        private object Activate_35_MarkerTemplateSelector() { return new global::Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector(); }
        private object Activate_36_SegmentTemplateSelector() { return new global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector(); }
        private object Activate_39_SetterValueBindingHelper() { return new global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper(); }
        private object Activate_41_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>(); }
        private void VectorAdd_28_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>)instance;
            var newItem = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_29_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>)instance;
            var newItem = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_32_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>)instance;
            var newItem = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_33_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>)instance;
            var newItem = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_41_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Syncfusion.SampleBrowser.UWP.SfSparkline.MainPage
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Common.SampleLayout
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_3_SampleLayout;
                userType.AddMemberName("Sample");
                userType.AddMemberName("Header");
                userType.AddMemberName("Setting");
                userType.AddMemberName("OptionVisibility");
                userType.AddMemberName("FontIcons");
                userType.AddMemberName("Pathstring");
                userType.AddMemberName("ClickCommand");
                xamlType = userType;
                break;

            case 4:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  String
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  System.Windows.Input.ICommand
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  Syncfusion.UI.Xaml.Charts.SfLineSparkline
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerBase"));
                userType.Activator = Activate_8_SfLineSparkline;
                xamlType = userType;
                break;

            case 9:   //  Syncfusion.UI.Xaml.Charts.MarkerBase
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase"));
                userType.AddMemberName("XBindingPath");
                userType.AddMemberName("AxisStyle");
                userType.AddMemberName("ShowAxis");
                userType.AddMemberName("AxisOrigin");
                userType.AddMemberName("TrackBallStyle");
                userType.AddMemberName("LineStyle");
                userType.AddMemberName("ShowTrackBall");
                userType.AddMemberName("MarkerVisibility");
                userType.AddMemberName("MarkerTemplateSelector");
                xamlType = userType;
                break;

            case 10:   //  Syncfusion.UI.Xaml.Charts.SparklineBase
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("Stroke");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("YBindingPath");
                userType.AddMemberName("EnableAnimation");
                userType.AddMemberName("Interior");
                userType.AddMemberName("RangeBandBrush");
                userType.AddMemberName("BandRangeEnd");
                userType.AddMemberName("BandRangeStart");
                userType.AddMemberName("MinimumYValue");
                userType.AddMemberName("MaximumYValue");
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("EmptyPointValue");
                xamlType = userType;
                break;

            case 11:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  System.Collections.IEnumerable
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  Windows.UI.Xaml.Style
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  Boolean
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Double
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Syncfusion.UI.Xaml.Charts.TemplateSelector
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_16_TemplateSelector;
                userType.AddMemberName("MaximumY");
                userType.AddMemberName("MinimumY");
                userType.AddMemberName("Sparkline");
                userType.AddMemberName("DataCount");
                userType.AddMemberName("MinimumX");
                xamlType = userType;
                break;

            case 17:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Syncfusion.UI.Xaml.Charts.EmptyPointValues
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Zero", global::Syncfusion.UI.Xaml.Charts.EmptyPointValues.Zero);
                userType.AddEnumValue("Average", global::Syncfusion.UI.Xaml.Charts.EmptyPointValues.Average);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.EmptyPointValues.None);
                xamlType = userType;
                break;

            case 19:   //  System.Enum
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 20:   //  System.ValueType
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 21:   //  Object
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Syncfusion.UI.Xaml.Charts.SfAreaSparkline
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerBase"));
                userType.Activator = Activate_22_SfAreaSparkline;
                xamlType = userType;
                break;

            case 23:   //  Syncfusion.UI.Xaml.Charts.SfColumnSparkline
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ColumnBase"));
                userType.Activator = Activate_23_SfColumnSparkline;
                userType.AddMemberName("XBindingPath");
                userType.AddMemberName("AxisStyle");
                userType.AddMemberName("ShowAxis");
                userType.AddMemberName("AxisOrigin");
                userType.AddMemberName("SegmentTemplateSelector");
                xamlType = userType;
                break;

            case 24:   //  Syncfusion.UI.Xaml.Charts.ColumnBase
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase"));
                userType.AddMemberName("HighlightSegment");
                xamlType = userType;
                break;

            case 25:   //  Syncfusion.UI.Xaml.Charts.SfWinLossSparkline
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ColumnBase"));
                userType.Activator = Activate_25_SfWinLossSparkline;
                userType.AddMemberName("NegativePointBrush");
                userType.AddMemberName("NeutralBrush");
                xamlType = userType;
                break;

            case 26:   //  Syncfusion.SampleBrowser.UWP.SfSparkline.SparklineDemo
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_26_SparklineDemo;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  Syncfusion.SampleBrowser.UWP.SfSparkline.SparkViewModel
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_27_SparkViewModel;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>"));
                userType.CollectionAdd = VectorAdd_28_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_29_Collection;
                userType.CollectionAdd = VectorAdd_29_Collection;
                xamlType = userType;
                break;

            case 30:   //  Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_30_SparkModel;
                userType.AddMemberName("CompanyName");
                userType.AddMemberName("High");
                userType.AddMemberName("Date");
                userType.AddMemberName("Low");
                userType.AddMemberName("MarketCap");
                userType.AddMemberName("Performance");
                userType.AddMemberName("DayActivity");
                userType.AddMemberName("Transaction");
                userType.AddMemberName("OneYearPerformance");
                userType.AddMemberName("Start");
                userType.AddMemberName("End");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  System.DateTime
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 32:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>"));
                userType.CollectionAdd = VectorAdd_32_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_33_Collection;
                userType.CollectionAdd = VectorAdd_33_Collection;
                xamlType = userType;
                break;

            case 34:   //  Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_34_DataModel;
                userType.AddMemberName("Day");
                userType.AddMemberName("ShareHolders");
                userType.AddMemberName("YearPerformance");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector"));
                userType.Activator = Activate_35_MarkerTemplateSelector;
                userType.AddMemberName("MarkerBrush");
                userType.AddMemberName("MarkerTemplate");
                userType.AddMemberName("MarkerHeight");
                userType.AddMemberName("MarkerWidth");
                xamlType = userType;
                break;

            case 36:   //  Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.TemplateSelector"));
                userType.Activator = Activate_36_SegmentTemplateSelector;
                userType.AddMemberName("FirstPointBrush");
                userType.AddMemberName("LastPointBrush");
                userType.AddMemberName("LowPointBrush");
                userType.AddMemberName("HighPointBrush");
                userType.AddMemberName("NegativePointBrush");
                xamlType = userType;
                break;

            case 37:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 38:   //  Int32
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 39:   //  Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_39_SetterValueBindingHelper;
                userType.AddMemberName("Type");
                userType.AddMemberName("Property");
                userType.AddMemberName("Binding");
                userType.AddMemberName("Values");
                userType.AddMemberName("PropertyBinding");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 40:   //  Windows.UI.Xaml.Data.Binding
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 41:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_41_Collection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Common_2015.Syncfusion_SampleBrowser_UWP_Common_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfGantt.UWP.Syncfusion_SfGantt_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfImageEditor.UWP.Syncfusion_SfImageEditor_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfSmithChart.UWP.Syncfusion_SfSmithChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_SampleLayout_Sample(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Sample;
        }
        private void set_0_SampleLayout_Sample(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Sample = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_1_SampleLayout_Header(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Header;
        }
        private void set_1_SampleLayout_Header(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Header = (global::System.String)Value;
        }
        private object get_2_SampleLayout_Setting(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Setting;
        }
        private void set_2_SampleLayout_Setting(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Setting = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_3_SampleLayout_OptionVisibility(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.OptionVisibility;
        }
        private void set_3_SampleLayout_OptionVisibility(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.OptionVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_4_SampleLayout_FontIcons(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.FontIcons;
        }
        private void set_4_SampleLayout_FontIcons(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.FontIcons = (global::System.String)Value;
        }
        private object get_5_SampleLayout_Pathstring(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Pathstring;
        }
        private void set_5_SampleLayout_Pathstring(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Pathstring = (global::System.String)Value;
        }
        private object get_6_SampleLayout_ClickCommand(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.ClickCommand;
        }
        private object get_7_SparklineBase_Stroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.Stroke;
        }
        private void set_7_SparklineBase_Stroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_8_SparklineBase_ItemsSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.ItemsSource;
        }
        private void set_8_SparklineBase_ItemsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.ItemsSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_9_SparklineBase_YBindingPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.YBindingPath;
        }
        private void set_9_SparklineBase_YBindingPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.YBindingPath = (global::System.String)Value;
        }
        private object get_10_MarkerBase_XBindingPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            return that.XBindingPath;
        }
        private void set_10_MarkerBase_XBindingPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            that.XBindingPath = (global::System.String)Value;
        }
        private object get_11_MarkerBase_AxisStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            return that.AxisStyle;
        }
        private void set_11_MarkerBase_AxisStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            that.AxisStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_12_MarkerBase_ShowAxis(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            return that.ShowAxis;
        }
        private void set_12_MarkerBase_ShowAxis(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            that.ShowAxis = (global::System.Boolean)Value;
        }
        private object get_13_MarkerBase_AxisOrigin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            return that.AxisOrigin;
        }
        private void set_13_MarkerBase_AxisOrigin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            that.AxisOrigin = (global::System.Double)Value;
        }
        private object get_14_MarkerBase_TrackBallStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            return that.TrackBallStyle;
        }
        private void set_14_MarkerBase_TrackBallStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            that.TrackBallStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_15_MarkerBase_LineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            return that.LineStyle;
        }
        private void set_15_MarkerBase_LineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            that.LineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_16_MarkerBase_ShowTrackBall(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            return that.ShowTrackBall;
        }
        private void set_16_MarkerBase_ShowTrackBall(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            that.ShowTrackBall = (global::System.Boolean)Value;
        }
        private object get_17_MarkerBase_MarkerVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            return that.MarkerVisibility;
        }
        private void set_17_MarkerBase_MarkerVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            that.MarkerVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_18_MarkerBase_MarkerTemplateSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            return that.MarkerTemplateSelector;
        }
        private void set_18_MarkerBase_MarkerTemplateSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerBase)instance;
            that.MarkerTemplateSelector = (global::Syncfusion.UI.Xaml.Charts.TemplateSelector)Value;
        }
        private object get_19_SparklineBase_EnableAnimation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.EnableAnimation;
        }
        private void set_19_SparklineBase_EnableAnimation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.EnableAnimation = (global::System.Boolean)Value;
        }
        private object get_20_SparklineBase_Interior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.Interior;
        }
        private void set_20_SparklineBase_Interior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.Interior = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_21_SparklineBase_RangeBandBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.RangeBandBrush;
        }
        private void set_21_SparklineBase_RangeBandBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.RangeBandBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_22_SparklineBase_BandRangeEnd(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.BandRangeEnd;
        }
        private void set_22_SparklineBase_BandRangeEnd(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.BandRangeEnd = (global::System.Double)Value;
        }
        private object get_23_SparklineBase_BandRangeStart(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.BandRangeStart;
        }
        private void set_23_SparklineBase_BandRangeStart(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.BandRangeStart = (global::System.Double)Value;
        }
        private object get_24_SparklineBase_MinimumYValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.MinimumYValue;
        }
        private void set_24_SparklineBase_MinimumYValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.MinimumYValue = (global::System.Double)Value;
        }
        private object get_25_SparklineBase_MaximumYValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.MaximumYValue;
        }
        private void set_25_SparklineBase_MaximumYValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.MaximumYValue = (global::System.Double)Value;
        }
        private object get_26_SparklineBase_StrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.StrokeThickness;
        }
        private void set_26_SparklineBase_StrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_27_SparklineBase_EmptyPointValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            return that.EmptyPointValue;
        }
        private void set_27_SparklineBase_EmptyPointValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SparklineBase)instance;
            that.EmptyPointValue = (global::Syncfusion.UI.Xaml.Charts.EmptyPointValues)Value;
        }
        private object get_28_SfColumnSparkline_XBindingPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline)instance;
            return that.XBindingPath;
        }
        private void set_28_SfColumnSparkline_XBindingPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline)instance;
            that.XBindingPath = (global::System.String)Value;
        }
        private object get_29_SfColumnSparkline_AxisStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline)instance;
            return that.AxisStyle;
        }
        private void set_29_SfColumnSparkline_AxisStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline)instance;
            that.AxisStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_30_SfColumnSparkline_ShowAxis(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline)instance;
            return that.ShowAxis;
        }
        private void set_30_SfColumnSparkline_ShowAxis(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline)instance;
            that.ShowAxis = (global::System.Boolean)Value;
        }
        private object get_31_SfColumnSparkline_AxisOrigin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline)instance;
            return that.AxisOrigin;
        }
        private void set_31_SfColumnSparkline_AxisOrigin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline)instance;
            that.AxisOrigin = (global::System.Double)Value;
        }
        private object get_32_SfColumnSparkline_SegmentTemplateSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline)instance;
            return that.SegmentTemplateSelector;
        }
        private void set_32_SfColumnSparkline_SegmentTemplateSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfColumnSparkline)instance;
            that.SegmentTemplateSelector = (global::Syncfusion.UI.Xaml.Charts.TemplateSelector)Value;
        }
        private object get_33_ColumnBase_HighlightSegment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ColumnBase)instance;
            return that.HighlightSegment;
        }
        private void set_33_ColumnBase_HighlightSegment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ColumnBase)instance;
            that.HighlightSegment = (global::System.Boolean)Value;
        }
        private object get_34_SfWinLossSparkline_NegativePointBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfWinLossSparkline)instance;
            return that.NegativePointBrush;
        }
        private void set_34_SfWinLossSparkline_NegativePointBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfWinLossSparkline)instance;
            that.NegativePointBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_35_SfWinLossSparkline_NeutralBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfWinLossSparkline)instance;
            return that.NeutralBrush;
        }
        private void set_35_SfWinLossSparkline_NeutralBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfWinLossSparkline)instance;
            that.NeutralBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_36_SparkViewModel_ViewModel(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkViewModel)instance;
            return that.ViewModel;
        }
        private void set_36_SparkViewModel_ViewModel(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkViewModel)instance;
            that.ViewModel = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>)Value;
        }
        private object get_37_SparkModel_CompanyName(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            return that.CompanyName;
        }
        private void set_37_SparkModel_CompanyName(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            that.CompanyName = (global::System.String)Value;
        }
        private object get_38_SparkModel_High(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            return that.High;
        }
        private void set_38_SparkModel_High(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            that.High = (global::System.Double)Value;
        }
        private object get_39_SparkModel_Date(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            return that.Date;
        }
        private void set_39_SparkModel_Date(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            that.Date = (global::System.DateTime)Value;
        }
        private object get_40_SparkModel_Low(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            return that.Low;
        }
        private void set_40_SparkModel_Low(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            that.Low = (global::System.Double)Value;
        }
        private object get_41_SparkModel_MarketCap(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            return that.MarketCap;
        }
        private void set_41_SparkModel_MarketCap(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            that.MarketCap = (global::System.Double)Value;
        }
        private object get_42_SparkModel_Performance(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            return that.Performance;
        }
        private void set_42_SparkModel_Performance(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            that.Performance = (global::System.Double)Value;
        }
        private object get_43_SparkModel_DayActivity(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            return that.DayActivity;
        }
        private void set_43_SparkModel_DayActivity(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            that.DayActivity = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>)Value;
        }
        private object get_44_DataModel_Day(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel)instance;
            return that.Day;
        }
        private void set_44_DataModel_Day(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel)instance;
            that.Day = (global::System.Double)Value;
        }
        private object get_45_DataModel_ShareHolders(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel)instance;
            return that.ShareHolders;
        }
        private void set_45_DataModel_ShareHolders(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel)instance;
            that.ShareHolders = (global::System.Double)Value;
        }
        private object get_46_DataModel_YearPerformance(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel)instance;
            return that.YearPerformance;
        }
        private void set_46_DataModel_YearPerformance(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel)instance;
            that.YearPerformance = (global::System.Double)Value;
        }
        private object get_47_SparkModel_Transaction(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            return that.Transaction;
        }
        private void set_47_SparkModel_Transaction(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            that.Transaction = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>)Value;
        }
        private object get_48_SparkModel_OneYearPerformance(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            return that.OneYearPerformance;
        }
        private void set_48_SparkModel_OneYearPerformance(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            that.OneYearPerformance = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>)Value;
        }
        private object get_49_SparkModel_Start(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            return that.Start;
        }
        private void set_49_SparkModel_Start(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            that.Start = (global::System.Double)Value;
        }
        private object get_50_SparkModel_End(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            return that.End;
        }
        private void set_50_SparkModel_End(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel)instance;
            that.End = (global::System.Double)Value;
        }
        private object get_51_SegmentTemplateSelector_FirstPointBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector)instance;
            return that.FirstPointBrush;
        }
        private void set_51_SegmentTemplateSelector_FirstPointBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector)instance;
            that.FirstPointBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_52_SegmentTemplateSelector_LastPointBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector)instance;
            return that.LastPointBrush;
        }
        private void set_52_SegmentTemplateSelector_LastPointBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector)instance;
            that.LastPointBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_53_SegmentTemplateSelector_LowPointBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector)instance;
            return that.LowPointBrush;
        }
        private void set_53_SegmentTemplateSelector_LowPointBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector)instance;
            that.LowPointBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_54_SegmentTemplateSelector_HighPointBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector)instance;
            return that.HighPointBrush;
        }
        private void set_54_SegmentTemplateSelector_HighPointBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector)instance;
            that.HighPointBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_55_MarkerTemplateSelector_MarkerBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector)instance;
            return that.MarkerBrush;
        }
        private void set_55_MarkerTemplateSelector_MarkerBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector)instance;
            that.MarkerBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_56_MarkerTemplateSelector_MarkerTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector)instance;
            return that.MarkerTemplate;
        }
        private void set_56_MarkerTemplateSelector_MarkerTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector)instance;
            that.MarkerTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_57_MarkerTemplateSelector_MarkerHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector)instance;
            return that.MarkerHeight;
        }
        private void set_57_MarkerTemplateSelector_MarkerHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector)instance;
            that.MarkerHeight = (global::System.Double)Value;
        }
        private object get_58_MarkerTemplateSelector_MarkerWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector)instance;
            return that.MarkerWidth;
        }
        private void set_58_MarkerTemplateSelector_MarkerWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector)instance;
            that.MarkerWidth = (global::System.Double)Value;
        }
        private object get_59_SegmentTemplateSelector_NegativePointBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector)instance;
            return that.NegativePointBrush;
        }
        private void set_59_SegmentTemplateSelector_NegativePointBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector)instance;
            that.NegativePointBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_60_TemplateSelector_MaximumY(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.TemplateSelector)instance;
            return that.MaximumY;
        }
        private object get_61_TemplateSelector_MinimumY(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.TemplateSelector)instance;
            return that.MinimumY;
        }
        private object get_62_TemplateSelector_Sparkline(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.TemplateSelector)instance;
            return that.Sparkline;
        }
        private object get_63_TemplateSelector_DataCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.TemplateSelector)instance;
            return that.DataCount;
        }
        private object get_64_TemplateSelector_MinimumX(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.TemplateSelector)instance;
            return that.MinimumX;
        }
        private object get_65_SetterValueBindingHelper_Type(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Type;
        }
        private void set_65_SetterValueBindingHelper_Type(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Type = (global::System.String)Value;
        }
        private object get_66_SetterValueBindingHelper_Property(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Property;
        }
        private void set_66_SetterValueBindingHelper_Property(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Property = (global::System.String)Value;
        }
        private object get_67_SetterValueBindingHelper_Binding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Binding;
        }
        private void set_67_SetterValueBindingHelper_Binding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Binding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_68_SetterValueBindingHelper_Values(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Values;
        }
        private object get_69_SetterValueBindingHelper_PropertyBinding(object instance)
        {
            return global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.GetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance);
        }
        private void set_69_SetterValueBindingHelper_PropertyBinding(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.SetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance, (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)Value);
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember xamlMember = null;
            global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Common.SampleLayout.Sample":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Sample", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_SampleLayout_Sample;
                xamlMember.Setter = set_0_SampleLayout_Sample;
                break;
            case "Common.SampleLayout.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Header", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_SampleLayout_Header;
                xamlMember.Setter = set_1_SampleLayout_Header;
                break;
            case "Common.SampleLayout.Setting":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Setting", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_SampleLayout_Setting;
                xamlMember.Setter = set_2_SampleLayout_Setting;
                break;
            case "Common.SampleLayout.OptionVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "OptionVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_SampleLayout_OptionVisibility;
                xamlMember.Setter = set_3_SampleLayout_OptionVisibility;
                break;
            case "Common.SampleLayout.FontIcons":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "FontIcons", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_SampleLayout_FontIcons;
                xamlMember.Setter = set_4_SampleLayout_FontIcons;
                break;
            case "Common.SampleLayout.Pathstring":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Pathstring", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SampleLayout_Pathstring;
                xamlMember.Setter = set_5_SampleLayout_Pathstring;
                break;
            case "Common.SampleLayout.ClickCommand":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "ClickCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_6_SampleLayout_ClickCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.Stroke":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_SparklineBase_Stroke;
                xamlMember.Setter = set_7_SparklineBase_Stroke;
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.ItemsSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_SparklineBase_ItemsSource;
                xamlMember.Setter = set_8_SparklineBase_ItemsSource;
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.YBindingPath":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "YBindingPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_SparklineBase_YBindingPath;
                xamlMember.Setter = set_9_SparklineBase_YBindingPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerBase.XBindingPath":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "XBindingPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_MarkerBase_XBindingPath;
                xamlMember.Setter = set_10_MarkerBase_XBindingPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerBase.AxisStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "AxisStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_MarkerBase_AxisStyle;
                xamlMember.Setter = set_11_MarkerBase_AxisStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerBase.ShowAxis":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "ShowAxis", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_MarkerBase_ShowAxis;
                xamlMember.Setter = set_12_MarkerBase_ShowAxis;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerBase.AxisOrigin":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "AxisOrigin", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_MarkerBase_AxisOrigin;
                xamlMember.Setter = set_13_MarkerBase_AxisOrigin;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerBase.TrackBallStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "TrackBallStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_MarkerBase_TrackBallStyle;
                xamlMember.Setter = set_14_MarkerBase_TrackBallStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerBase.LineStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "LineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_MarkerBase_LineStyle;
                xamlMember.Setter = set_15_MarkerBase_LineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerBase.ShowTrackBall":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "ShowTrackBall", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_MarkerBase_ShowTrackBall;
                xamlMember.Setter = set_16_MarkerBase_ShowTrackBall;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MarkerVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_MarkerBase_MarkerVisibility;
                xamlMember.Setter = set_17_MarkerBase_MarkerVisibility;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerTemplateSelector":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MarkerTemplateSelector", "Syncfusion.UI.Xaml.Charts.TemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_MarkerBase_MarkerTemplateSelector;
                xamlMember.Setter = set_18_MarkerBase_MarkerTemplateSelector;
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.EnableAnimation":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "EnableAnimation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_SparklineBase_EnableAnimation;
                xamlMember.Setter = set_19_SparklineBase_EnableAnimation;
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.Interior":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Interior", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_SparklineBase_Interior;
                xamlMember.Setter = set_20_SparklineBase_Interior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.RangeBandBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "RangeBandBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_SparklineBase_RangeBandBrush;
                xamlMember.Setter = set_21_SparklineBase_RangeBandBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.BandRangeEnd":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "BandRangeEnd", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_SparklineBase_BandRangeEnd;
                xamlMember.Setter = set_22_SparklineBase_BandRangeEnd;
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.BandRangeStart":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "BandRangeStart", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_SparklineBase_BandRangeStart;
                xamlMember.Setter = set_23_SparklineBase_BandRangeStart;
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.MinimumYValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MinimumYValue", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_SparklineBase_MinimumYValue;
                xamlMember.Setter = set_24_SparklineBase_MinimumYValue;
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.MaximumYValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MaximumYValue", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_SparklineBase_MaximumYValue;
                xamlMember.Setter = set_25_SparklineBase_MaximumYValue;
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.StrokeThickness":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_SparklineBase_StrokeThickness;
                xamlMember.Setter = set_26_SparklineBase_StrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.SparklineBase.EmptyPointValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "EmptyPointValue", "Syncfusion.UI.Xaml.Charts.EmptyPointValues");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_SparklineBase_EmptyPointValue;
                xamlMember.Setter = set_27_SparklineBase_EmptyPointValue;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfColumnSparkline.XBindingPath":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfColumnSparkline");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "XBindingPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_SfColumnSparkline_XBindingPath;
                xamlMember.Setter = set_28_SfColumnSparkline_XBindingPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfColumnSparkline.AxisStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfColumnSparkline");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "AxisStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_SfColumnSparkline_AxisStyle;
                xamlMember.Setter = set_29_SfColumnSparkline_AxisStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfColumnSparkline.ShowAxis":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfColumnSparkline");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "ShowAxis", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_SfColumnSparkline_ShowAxis;
                xamlMember.Setter = set_30_SfColumnSparkline_ShowAxis;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfColumnSparkline.AxisOrigin":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfColumnSparkline");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "AxisOrigin", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_SfColumnSparkline_AxisOrigin;
                xamlMember.Setter = set_31_SfColumnSparkline_AxisOrigin;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfColumnSparkline.SegmentTemplateSelector":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfColumnSparkline");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "SegmentTemplateSelector", "Syncfusion.UI.Xaml.Charts.TemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_SfColumnSparkline_SegmentTemplateSelector;
                xamlMember.Setter = set_32_SfColumnSparkline_SegmentTemplateSelector;
                break;
            case "Syncfusion.UI.Xaml.Charts.ColumnBase.HighlightSegment":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ColumnBase");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "HighlightSegment", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_ColumnBase_HighlightSegment;
                xamlMember.Setter = set_33_ColumnBase_HighlightSegment;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.NegativePointBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfWinLossSparkline");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "NegativePointBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_SfWinLossSparkline_NegativePointBrush;
                xamlMember.Setter = set_34_SfWinLossSparkline_NegativePointBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.NeutralBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfWinLossSparkline");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "NeutralBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_SfWinLossSparkline_NeutralBrush;
                xamlMember.Setter = set_35_SfWinLossSparkline_NeutralBrush;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkViewModel.ViewModel":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkViewModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "ViewModel", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel>");
                xamlMember.Getter = get_36_SparkViewModel_ViewModel;
                xamlMember.Setter = set_36_SparkViewModel_ViewModel;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel.CompanyName":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "CompanyName", "String");
                xamlMember.Getter = get_37_SparkModel_CompanyName;
                xamlMember.Setter = set_37_SparkModel_CompanyName;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel.High":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "High", "Double");
                xamlMember.Getter = get_38_SparkModel_High;
                xamlMember.Setter = set_38_SparkModel_High;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel.Date":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Date", "System.DateTime");
                xamlMember.Getter = get_39_SparkModel_Date;
                xamlMember.Setter = set_39_SparkModel_Date;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel.Low":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Low", "Double");
                xamlMember.Getter = get_40_SparkModel_Low;
                xamlMember.Setter = set_40_SparkModel_Low;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel.MarketCap":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MarketCap", "Double");
                xamlMember.Getter = get_41_SparkModel_MarketCap;
                xamlMember.Setter = set_41_SparkModel_MarketCap;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel.Performance":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Performance", "Double");
                xamlMember.Getter = get_42_SparkModel_Performance;
                xamlMember.Setter = set_42_SparkModel_Performance;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel.DayActivity":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "DayActivity", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>");
                xamlMember.Getter = get_43_SparkModel_DayActivity;
                xamlMember.Setter = set_43_SparkModel_DayActivity;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel.Day":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Day", "Double");
                xamlMember.Getter = get_44_DataModel_Day;
                xamlMember.Setter = set_44_DataModel_Day;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel.ShareHolders":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "ShareHolders", "Double");
                xamlMember.Getter = get_45_DataModel_ShareHolders;
                xamlMember.Setter = set_45_DataModel_ShareHolders;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel.YearPerformance":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "YearPerformance", "Double");
                xamlMember.Getter = get_46_DataModel_YearPerformance;
                xamlMember.Setter = set_46_DataModel_YearPerformance;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel.Transaction":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Transaction", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>");
                xamlMember.Getter = get_47_SparkModel_Transaction;
                xamlMember.Setter = set_47_SparkModel_Transaction;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel.OneYearPerformance":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "OneYearPerformance", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSparkline.DataModel>");
                xamlMember.Getter = get_48_SparkModel_OneYearPerformance;
                xamlMember.Setter = set_48_SparkModel_OneYearPerformance;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel.Start":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Start", "Double");
                xamlMember.Getter = get_49_SparkModel_Start;
                xamlMember.Setter = set_49_SparkModel_Start;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel.End":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSparkline.SparkModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "End", "Double");
                xamlMember.Getter = get_50_SparkModel_End;
                xamlMember.Setter = set_50_SparkModel_End;
                break;
            case "Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.FirstPointBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "FirstPointBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_SegmentTemplateSelector_FirstPointBrush;
                xamlMember.Setter = set_51_SegmentTemplateSelector_FirstPointBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.LastPointBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "LastPointBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_SegmentTemplateSelector_LastPointBrush;
                xamlMember.Setter = set_52_SegmentTemplateSelector_LastPointBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.LowPointBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "LowPointBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_SegmentTemplateSelector_LowPointBrush;
                xamlMember.Setter = set_53_SegmentTemplateSelector_LowPointBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.HighPointBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "HighPointBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_SegmentTemplateSelector_HighPointBrush;
                xamlMember.Setter = set_54_SegmentTemplateSelector_HighPointBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MarkerBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_MarkerTemplateSelector_MarkerBrush;
                xamlMember.Setter = set_55_MarkerTemplateSelector_MarkerBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MarkerTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_MarkerTemplateSelector_MarkerTemplate;
                xamlMember.Setter = set_56_MarkerTemplateSelector_MarkerTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MarkerHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_MarkerTemplateSelector_MarkerHeight;
                xamlMember.Setter = set_57_MarkerTemplateSelector_MarkerHeight;
                break;
            case "Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MarkerWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_MarkerTemplateSelector_MarkerWidth;
                xamlMember.Setter = set_58_MarkerTemplateSelector_MarkerWidth;
                break;
            case "Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.NegativePointBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "NegativePointBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_SegmentTemplateSelector_NegativePointBrush;
                xamlMember.Setter = set_59_SegmentTemplateSelector_NegativePointBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.TemplateSelector.MaximumY":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.TemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MaximumY", "Double");
                xamlMember.Getter = get_60_TemplateSelector_MaximumY;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.TemplateSelector.MinimumY":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.TemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MinimumY", "Double");
                xamlMember.Getter = get_61_TemplateSelector_MinimumY;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.TemplateSelector.Sparkline":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.TemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Sparkline", "Syncfusion.UI.Xaml.Charts.SparklineBase");
                xamlMember.Getter = get_62_TemplateSelector_Sparkline;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.TemplateSelector.DataCount":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.TemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "DataCount", "Int32");
                xamlMember.Getter = get_63_TemplateSelector_DataCount;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.TemplateSelector.MinimumX":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.TemplateSelector");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "MinimumX", "Double");
                xamlMember.Getter = get_64_TemplateSelector_MinimumX;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Type":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Type", "String");
                xamlMember.Getter = get_65_SetterValueBindingHelper_Type;
                xamlMember.Setter = set_65_SetterValueBindingHelper_Type;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Property":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Property", "String");
                xamlMember.Getter = get_66_SetterValueBindingHelper_Property;
                xamlMember.Setter = set_66_SetterValueBindingHelper_Property;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Binding":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Binding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_67_SetterValueBindingHelper_Binding;
                xamlMember.Setter = set_67_SetterValueBindingHelper_Binding;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Values":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "Values", "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>");
                xamlMember.Getter = get_68_SetterValueBindingHelper_Values;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.PropertyBinding":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlMember(this, "PropertyBinding", "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_69_SetterValueBindingHelper_PropertyBinding;
                xamlMember.Setter = set_69_SetterValueBindingHelper_PropertyBinding;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlSystemBaseType
    {
        global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Syncfusion.SampleBrowser.UWP.SfSparkline.Syncfusion_SampleBrowser_UWP_SfSparkline_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

