//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Syncfusion.SampleBrowser.UWP.PivotClient
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMetaDataProvider __appProvider;
        private global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[60];
            _typeNameTable[0] = "Windows.UI.Color";
            _typeNameTable[1] = "System.ValueType";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Byte";
            _typeNameTable[4] = "Common.SampleLayout";
            _typeNameTable[5] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[6] = "String";
            _typeNameTable[7] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[8] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[9] = "System.Windows.Input.ICommand";
            _typeNameTable[10] = "Syncfusion.UI.Xaml.PivotClient.SfPivotClient";
            _typeNameTable[11] = "Boolean";
            _typeNameTable[12] = "Syncfusion.UI.Xaml.PivotChart.SfPivotChart";
            _typeNameTable[13] = "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid";
            _typeNameTable[14] = "Syncfusion.UI.Xaml.PivotClient.PivotClientDisplayMode";
            _typeNameTable[15] = "System.Enum";
            _typeNameTable[16] = "Syncfusion.Olap.UWP.Manager.OlapDataManager";
            _typeNameTable[17] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[18] = "Int32";
            _typeNameTable[19] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>";
            _typeNameTable[20] = "System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>";
            _typeNameTable[21] = "Syncfusion.PivotAnalysis.UWP.PivotItem";
            _typeNameTable[22] = "System.Collections.IComparer";
            _typeNameTable[23] = "Syncfusion.Data.ListSortDirection";
            _typeNameTable[24] = "Syncfusion.PivotAnalysis.UWP.SummaryBase";
            _typeNameTable[25] = "Syncfusion.PivotAnalysis.UWP.SummaryType";
            _typeNameTable[26] = "Double";
            _typeNameTable[27] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>";
            _typeNameTable[28] = "System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>";
            _typeNameTable[29] = "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo";
            _typeNameTable[30] = "Syncfusion.PivotAnalysis.UWP.CalculationType";
            _typeNameTable[31] = "Syncfusion.PivotAnalysis.UWP.DisplayOption";
            _typeNameTable[32] = "Syncfusion.PivotAnalysis.UWP.FilterExpression";
            _typeNameTable[33] = "Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel";
            _typeNameTable[34] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>";
            _typeNameTable[35] = "System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>";
            _typeNameTable[36] = "Syncfusion.PivotAnalysis.UWP.ExpressionError";
            _typeNameTable[37] = "System.Delegate";
            _typeNameTable[38] = "BI.PivotClient.AdvancedFiltering";
            _typeNameTable[39] = "BI.PivotClient.DeferUpdate";
            _typeNameTable[40] = "BI.PivotClient.CalculatedMembers";
            _typeNameTable[41] = "Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel";
            _typeNameTable[42] = "BI.PivotClient.GettingStarted";
            _typeNameTable[43] = "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator";
            _typeNameTable[44] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[45] = "Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes";
            _typeNameTable[46] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[47] = "Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode";
            _typeNameTable[48] = "BI.PivotClient.Localization";
            _typeNameTable[49] = "BI.PivotClient.MDXQuery";
            _typeNameTable[50] = "BI.PivotClient.Paging";
            _typeNameTable[51] = "BI.PivotClient.PivotClientSamples.Converters.BooleanVisibilityConverter";
            _typeNameTable[52] = "BI.PivotClient.PivotClientConfiguration";
            _typeNameTable[53] = "BI.PivotClient.PivotClientCustomization";
            _typeNameTable[54] = "BI.PivotClient.Relational";
            _typeNameTable[55] = "BI.PivotClient.VirtualKPI";
            _typeNameTable[56] = "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper";
            _typeNameTable[57] = "Windows.UI.Xaml.Data.Binding";
            _typeNameTable[58] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>";
            _typeNameTable[59] = "Windows.UI.Xaml.FrameworkElement";

            _typeTable = new global::System.Type[60];
            _typeTable[0] = typeof(global::Windows.UI.Color);
            _typeTable[1] = typeof(global::System.ValueType);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Byte);
            _typeTable[4] = typeof(global::Common.SampleLayout);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[6] = typeof(global::System.String);
            _typeTable[7] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[8] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[9] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[10] = typeof(global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient);
            _typeTable[11] = typeof(global::System.Boolean);
            _typeTable[12] = typeof(global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart);
            _typeTable[13] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid);
            _typeTable[14] = typeof(global::Syncfusion.UI.Xaml.PivotClient.PivotClientDisplayMode);
            _typeTable[15] = typeof(global::System.Enum);
            _typeTable[16] = typeof(global::Syncfusion.Olap.UWP.Manager.OlapDataManager);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[18] = typeof(global::System.Int32);
            _typeTable[19] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>);
            _typeTable[20] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>);
            _typeTable[21] = typeof(global::Syncfusion.PivotAnalysis.UWP.PivotItem);
            _typeTable[22] = typeof(global::System.Collections.IComparer);
            _typeTable[23] = typeof(global::Syncfusion.Data.ListSortDirection);
            _typeTable[24] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryBase);
            _typeTable[25] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryType);
            _typeTable[26] = typeof(global::System.Double);
            _typeTable[27] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>);
            _typeTable[28] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>);
            _typeTable[29] = typeof(global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo);
            _typeTable[30] = typeof(global::Syncfusion.PivotAnalysis.UWP.CalculationType);
            _typeTable[31] = typeof(global::Syncfusion.PivotAnalysis.UWP.DisplayOption);
            _typeTable[32] = typeof(global::Syncfusion.PivotAnalysis.UWP.FilterExpression);
            _typeTable[33] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel);
            _typeTable[34] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>);
            _typeTable[35] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>);
            _typeTable[36] = typeof(global::Syncfusion.PivotAnalysis.UWP.ExpressionError);
            _typeTable[37] = typeof(global::System.Delegate);
            _typeTable[38] = typeof(global::BI.PivotClient.AdvancedFiltering);
            _typeTable[39] = typeof(global::BI.PivotClient.DeferUpdate);
            _typeTable[40] = typeof(global::BI.PivotClient.CalculatedMembers);
            _typeTable[41] = typeof(global::Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel);
            _typeTable[42] = typeof(global::BI.PivotClient.GettingStarted);
            _typeTable[43] = typeof(global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator);
            _typeTable[44] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[45] = typeof(global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes);
            _typeTable[46] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[47] = typeof(global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode);
            _typeTable[48] = typeof(global::BI.PivotClient.Localization);
            _typeTable[49] = typeof(global::BI.PivotClient.MDXQuery);
            _typeTable[50] = typeof(global::BI.PivotClient.Paging);
            _typeTable[51] = typeof(global::BI.PivotClient.PivotClientSamples.Converters.BooleanVisibilityConverter);
            _typeTable[52] = typeof(global::BI.PivotClient.PivotClientConfiguration);
            _typeTable[53] = typeof(global::BI.PivotClient.PivotClientCustomization);
            _typeTable[54] = typeof(global::BI.PivotClient.Relational);
            _typeTable[55] = typeof(global::BI.PivotClient.VirtualKPI);
            _typeTable[56] = typeof(global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper);
            _typeTable[57] = typeof(global::Windows.UI.Xaml.Data.Binding);
            _typeTable[58] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>);
            _typeTable[59] = typeof(global::Windows.UI.Xaml.FrameworkElement);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_4_SampleLayout() { return new global::Common.SampleLayout(); }
        private object Activate_10_SfPivotClient() { return new global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient(); }
        private object Activate_12_SfPivotChart() { return new global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart(); }
        private object Activate_13_SfPivotGrid() { return new global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid(); }
        private object Activate_16_OlapDataManager() { return new global::Syncfusion.Olap.UWP.Manager.OlapDataManager(); }
        private object Activate_19_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>(); }
        private object Activate_20_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>(); }
        private object Activate_21_PivotItem() { return new global::Syncfusion.PivotAnalysis.UWP.PivotItem(); }
        private object Activate_27_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>(); }
        private object Activate_28_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>(); }
        private object Activate_29_PivotComputationInfo() { return new global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo(); }
        private object Activate_32_FilterExpression() { return new global::Syncfusion.PivotAnalysis.UWP.FilterExpression(); }
        private object Activate_34_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>(); }
        private object Activate_35_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>(); }
        private object Activate_38_AdvancedFiltering() { return new global::BI.PivotClient.AdvancedFiltering(); }
        private object Activate_39_DeferUpdate() { return new global::BI.PivotClient.DeferUpdate(); }
        private object Activate_40_CalculatedMembers() { return new global::BI.PivotClient.CalculatedMembers(); }
        private object Activate_41_ViewModel() { return new global::Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel(); }
        private object Activate_42_GettingStarted() { return new global::BI.PivotClient.GettingStarted(); }
        private object Activate_43_SfBusyIndicator() { return new global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator(); }
        private object Activate_48_Localization() { return new global::BI.PivotClient.Localization(); }
        private object Activate_49_MDXQuery() { return new global::BI.PivotClient.MDXQuery(); }
        private object Activate_50_Paging() { return new global::BI.PivotClient.Paging(); }
        private object Activate_51_BooleanVisibilityConverter() { return new global::BI.PivotClient.PivotClientSamples.Converters.BooleanVisibilityConverter(); }
        private object Activate_52_PivotClientConfiguration() { return new global::BI.PivotClient.PivotClientConfiguration(); }
        private object Activate_53_PivotClientCustomization() { return new global::BI.PivotClient.PivotClientCustomization(); }
        private object Activate_54_Relational() { return new global::BI.PivotClient.Relational(); }
        private object Activate_55_VirtualKPI() { return new global::BI.PivotClient.VirtualKPI(); }
        private object Activate_56_SetterValueBindingHelper() { return new global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper(); }
        private object Activate_58_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>(); }
        private void VectorAdd_19_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_20_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_27_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_28_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_34_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)item;
            collection.Add(newItem);
        }
        private void VectorAdd_35_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)item;
            collection.Add(newItem);
        }
        private void VectorAdd_58_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Windows.UI.Color
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 1:   //  System.ValueType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 2:   //  Object
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Byte
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 4:   //  Common.SampleLayout
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_4_SampleLayout;
                userType.AddMemberName("Header");
                userType.AddMemberName("Sample");
                userType.AddMemberName("Setting");
                userType.AddMemberName("OptionVisibility");
                userType.AddMemberName("FontIcons");
                userType.AddMemberName("Pathstring");
                userType.AddMemberName("ClickCommand");
                xamlType = userType;
                break;

            case 5:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  String
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  System.Windows.Input.ICommand
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  Syncfusion.UI.Xaml.PivotClient.SfPivotClient
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_10_SfPivotClient;
                userType.AddMemberName("EnableAdvancedFilter");
                userType.AddMemberName("PagerButtonVisibility");
                userType.AddMemberName("PivotChart");
                userType.AddMemberName("PivotGrid");
                userType.AddMemberName("ShowCalculationsAsColumns");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("OlapDataManager");
                userType.AddMemberName("EnableMeasureGroups");
                userType.AddMemberName("ShowProcessingBar");
                userType.AddMemberName("EnableCalculatedMembers");
                userType.AddMemberName("EnablePaging");
                userType.AddMemberName("EnableMemberEditorPaging");
                userType.AddMemberName("MemberEditorPageSize");
                userType.AddMemberName("EnableVirtualKpi");
                userType.AddMemberName("AllowExcelLikeSummary");
                userType.AddMemberName("AllowMultiFunctionalSortFilter");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("PivotRows");
                userType.AddMemberName("PivotColumns");
                userType.AddMemberName("PivotCalculations");
                userType.AddMemberName("Filters");
                userType.AddMemberName("FullScreenButtonVisibility");
                userType.AddMemberName("PivotSchemaDesignerButtonVisibility");
                userType.AddMemberName("PivotSchemaDesignerVisibility");
                userType.AddMemberName("ToolBarVisibility");
                userType.AddMemberName("CubeSelectorButtonVisibility");
                userType.AddMemberName("NewReportButtonVisibility");
                userType.AddMemberName("AddReportButtonVisibility");
                userType.AddMemberName("LoadReportButtonVisibility");
                userType.AddMemberName("SaveReportButtonVisibility");
                userType.AddMemberName("SaveAsReportButtonVisibility");
                userType.AddMemberName("RenameReportButtonVisibility");
                userType.AddMemberName("RemoveReportButtonVisibility");
                userType.AddMemberName("TogglePivotButtonVisibility");
                userType.AddMemberName("MDXQueryButtonVisibility");
                userType.AddMemberName("ExpressionFieldButtonVisibility");
                userType.AddMemberName("CustomSummaryButtonVisibility");
                userType.AddMemberName("CalculatedFieldButtonVisibility");
                userType.AddMemberName("ReportListVisibility");
                userType.AddMemberName("ExpanderButtonVisibility");
                userType.AddMemberName("CubeDimensionBrowserVisibility");
                userType.AddMemberName("SearchBoxVisibility");
                userType.AddMemberName("RowAxisElementBuilderVisibility");
                userType.AddMemberName("ColumnAxisElementBuilderVisibility");
                userType.AddMemberName("SlicerAxisElementBuilderVisibility");
                userType.AddMemberName("ValueAxisElementBuilderVisibility");
                userType.AddMemberName("GridToolBarVisibility");
                userType.AddMemberName("ShowSubTotalsButtonVisibility");
                userType.AddMemberName("FreezeHeaderButtonVisibility");
                userType.AddMemberName("ValueCellToolTipButtonVisibility");
                userType.AddMemberName("HyperlinkButtonVisibility");
                userType.AddMemberName("ExportPivotGridToExcelButtonVisibility");
                userType.AddMemberName("ExportPivotGridToWordButtonVisibility");
                userType.AddMemberName("ExportPivotGridToPdfButtonVisibility");
                userType.AddMemberName("ExportPivotGridToCsvButtonVisibility");
                userType.AddMemberName("EnableConditionalFormat");
                userType.AddMemberName("ChartToolBarVisibility");
                userType.AddMemberName("LegendButtonVisibility");
                userType.AddMemberName("ChartToolTipButtonVisibility");
                userType.AddMemberName("ExportChartToImageButtonVisibility");
                userType.AddMemberName("ExportPivotChartToWordButtonVisibility");
                userType.AddMemberName("ExportPivotChartToPdfButtonVisibility");
                userType.AddMemberName("ReportMenuButtonVisibility");
                userType.AddMemberName("EnableAutoExecute");
                xamlType = userType;
                break;

            case 11:   //  Boolean
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Syncfusion.UI.Xaml.PivotChart.SfPivotChart
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  Syncfusion.UI.Xaml.PivotClient.PivotClientDisplayMode
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Both", global::Syncfusion.UI.Xaml.PivotClient.PivotClientDisplayMode.Both);
                userType.AddEnumValue("GridOnly", global::Syncfusion.UI.Xaml.PivotClient.PivotClientDisplayMode.GridOnly);
                userType.AddEnumValue("ChartOnly", global::Syncfusion.UI.Xaml.PivotClient.PivotClientDisplayMode.ChartOnly);
                xamlType = userType;
                break;

            case 15:   //  System.Enum
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 16:   //  Syncfusion.Olap.UWP.Manager.OlapDataManager
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 17:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Int32
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>"));
                userType.CollectionAdd = VectorAdd_19_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 20:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_20_Collection;
                userType.CollectionAdd = VectorAdd_20_Collection;
                xamlType = userType;
                break;

            case 21:   //  Syncfusion.PivotAnalysis.UWP.PivotItem
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_21_PivotItem;
                userType.AddMemberName("AllowFilter");
                userType.AddMemberName("AllowRunTimeGroupByField");
                userType.AddMemberName("AllowSort");
                userType.AddMemberName("Comparer");
                userType.AddMemberName("EnableHyperlinks");
                userType.AddMemberName("FieldCaption");
                userType.AddMemberName("FieldHeader");
                userType.AddMemberName("FieldMappingName");
                userType.AddMemberName("Format");
                userType.AddMemberName("ShowSubTotal");
                userType.AddMemberName("SortDirection");
                userType.AddMemberName("Summary");
                userType.AddMemberName("SummaryType");
                userType.AddMemberName("TotalHeader");
                userType.AddMemberName("Width");
                xamlType = userType;
                break;

            case 22:   //  System.Collections.IComparer
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  Syncfusion.Data.ListSortDirection
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ascending", global::Syncfusion.Data.ListSortDirection.Ascending);
                userType.AddEnumValue("Descending", global::Syncfusion.Data.ListSortDirection.Descending);
                xamlType = userType;
                break;

            case 24:   //  Syncfusion.PivotAnalysis.UWP.SummaryBase
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  Syncfusion.PivotAnalysis.UWP.SummaryType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("DoubleTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleTotalSum);
                userType.AddEnumValue("DoubleAverage", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleAverage);
                userType.AddEnumValue("DoubleMaximum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleMaximum);
                userType.AddEnumValue("DoubleMinimum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleMinimum);
                userType.AddEnumValue("DoubleStandardDeviation", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleStandardDeviation);
                userType.AddEnumValue("DoubleVariance", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleVariance);
                userType.AddEnumValue("Count", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Count);
                userType.AddEnumValue("DecimalTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DecimalTotalSum);
                userType.AddEnumValue("IntTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.IntTotalSum);
                userType.AddEnumValue("Custom", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Custom);
                userType.AddEnumValue("DisplayIfDiscreteValuesEqual", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DisplayIfDiscreteValuesEqual);
                userType.AddEnumValue("Sum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Sum);
                userType.AddEnumValue("Average", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Average);
                userType.AddEnumValue("Max", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Max);
                userType.AddEnumValue("Min", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Min);
                userType.AddEnumValue("CountNumbers", global::Syncfusion.PivotAnalysis.UWP.SummaryType.CountNumbers);
                userType.AddEnumValue("StdDev", global::Syncfusion.PivotAnalysis.UWP.SummaryType.StdDev);
                userType.AddEnumValue("StdDevP", global::Syncfusion.PivotAnalysis.UWP.SummaryType.StdDevP);
                userType.AddEnumValue("Var", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Var);
                userType.AddEnumValue("VarP", global::Syncfusion.PivotAnalysis.UWP.SummaryType.VarP);
                xamlType = userType;
                break;

            case 26:   //  Double
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>"));
                userType.CollectionAdd = VectorAdd_27_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_28_Collection;
                userType.CollectionAdd = VectorAdd_28_Collection;
                xamlType = userType;
                break;

            case 29:   //  Syncfusion.PivotAnalysis.UWP.PivotComputationInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_29_PivotComputationInfo;
                userType.AddMemberName("AllowFilter");
                userType.AddMemberName("AllowRunTimeGroupByField");
                userType.AddMemberName("AllowSort");
                userType.AddMemberName("BaseField");
                userType.AddMemberName("BaseItem");
                userType.AddMemberName("FieldType");
                userType.AddMemberName("CalculationName");
                userType.AddMemberName("CalculationType");
                userType.AddMemberName("DefaultValue");
                userType.AddMemberName("Description");
                userType.AddMemberName("DisplayOption");
                userType.AddMemberName("EnableHyperlinks");
                userType.AddMemberName("Expression");
                userType.AddMemberName("FieldCaption");
                userType.AddMemberName("FieldHeader");
                userType.AddMemberName("FieldName");
                userType.AddMemberName("Format");
                userType.AddMemberName("Formula");
                userType.AddMemberName("InnerMostComputationsOnly");
                userType.AddMemberName("IsTopColumnSummary");
                userType.AddMemberName("PadString");
                userType.AddMemberName("Summary");
                userType.AddMemberName("SummaryType");
                xamlType = userType;
                break;

            case 30:   //  Syncfusion.PivotAnalysis.UWP.CalculationType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("NoCalculation", global::Syncfusion.PivotAnalysis.UWP.CalculationType.NoCalculation);
                userType.AddEnumValue("PercentageOfGrandTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfGrandTotal);
                userType.AddEnumValue("PercentageOfColumnTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfColumnTotal);
                userType.AddEnumValue("PercentageOfRowTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfRowTotal);
                userType.AddEnumValue("PercentageOfParentColumnTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentColumnTotal);
                userType.AddEnumValue("PercentageOfParentRowTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentRowTotal);
                userType.AddEnumValue("PercentageOfParentTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentTotal);
                userType.AddEnumValue("Index", global::Syncfusion.PivotAnalysis.UWP.CalculationType.Index);
                userType.AddEnumValue("Formula", global::Syncfusion.PivotAnalysis.UWP.CalculationType.Formula);
                userType.AddEnumValue("PercentageOf", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOf);
                userType.AddEnumValue("DifferenceFrom", global::Syncfusion.PivotAnalysis.UWP.CalculationType.DifferenceFrom);
                userType.AddEnumValue("PercentageOfDifferenceFrom", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfDifferenceFrom);
                userType.AddEnumValue("RunningTotalIn", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RunningTotalIn);
                userType.AddEnumValue("PercentageOfRunningTotalIn", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfRunningTotalIn);
                userType.AddEnumValue("RankSmallestToLargest", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RankSmallestToLargest);
                userType.AddEnumValue("RankLargestToSmallest", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RankLargestToSmallest);
                xamlType = userType;
                break;

            case 31:   //  Syncfusion.PivotAnalysis.UWP.DisplayOption
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.None);
                userType.AddEnumValue("Calculations", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.Calculations);
                userType.AddEnumValue("Summary", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.Summary);
                userType.AddEnumValue("GrandTotals", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.GrandTotals);
                userType.AddEnumValue("All", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.All);
                xamlType = userType;
                break;

            case 32:   //  Syncfusion.PivotAnalysis.UWP.FilterExpression
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_32_FilterExpression;
                userType.AddMemberName("CaseSensitive");
                userType.AddMemberName("DimensionHeader");
                userType.AddMemberName("DimensionName");
                userType.AddMemberName("Error");
                userType.AddMemberName("ErrorString");
                userType.AddMemberName("Evaluator");
                userType.AddMemberName("Expression");
                userType.AddMemberName("FieldCaption");
                userType.AddMemberName("Format");
                userType.AddMemberName("Name");
                userType.AddMemberName("Tag");
                xamlType = userType;
                break;

            case 33:   //  Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("All", global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel.All);
                userType.AddEnumValue("InnerMostOnly", global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel.InnerMostOnly);
                xamlType = userType;
                break;

            case 34:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>"));
                userType.CollectionAdd = VectorAdd_34_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 35:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_35_Collection;
                userType.CollectionAdd = VectorAdd_35_Collection;
                xamlType = userType;
                break;

            case 36:   //  Syncfusion.PivotAnalysis.UWP.ExpressionError
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.None);
                userType.AddEnumValue("MissingRightQuote", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.MissingRightQuote);
                userType.AddEnumValue("MismatchedParentheses", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.MismatchedParentheses);
                userType.AddEnumValue("CannotCompareDifferentTypes", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.CannotCompareDifferentTypes);
                userType.AddEnumValue("UnknownOperator", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.UnknownOperator);
                userType.AddEnumValue("NotAValidFormula", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.NotAValidFormula);
                userType.AddEnumValue("ExceptionRaised", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.ExceptionRaised);
                xamlType = userType;
                break;

            case 37:   //  System.Delegate
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  BI.PivotClient.AdvancedFiltering
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_38_AdvancedFiltering;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  BI.PivotClient.DeferUpdate
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_39_DeferUpdate;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  BI.PivotClient.CalculatedMembers
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_40_CalculatedMembers;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_41_ViewModel;
                userType.AddMemberName("OlapDataManager");
                userType.AddMemberName("ProductSalesData");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  BI.PivotClient.GettingStarted
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_42_GettingStarted;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_43_SfBusyIndicator;
                userType.AddMemberName("AnimationType");
                userType.AddMemberName("IsBusy");
                userType.AddMemberName("ViewboxHeight");
                userType.AddMemberName("ViewboxWidth");
                userType.AddMemberName("AnimationSpeed");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("HeaderPlacementMode");
                xamlType = userType;
                break;

            case 44:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 45:   //  Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("BarChart", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.BarChart);
                userType.AddEnumValue("Message", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Message);
                userType.AddEnumValue("DoubleRing", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DoubleRing);
                userType.AddEnumValue("DualRing", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DualRing);
                userType.AddEnumValue("Ripple", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Ripple);
                userType.AddEnumValue("DotCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DotCircle);
                userType.AddEnumValue("Cupertino", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Cupertino);
                userType.AddEnumValue("Flower", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Flower);
                userType.AddEnumValue("Gear", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Gear);
                userType.AddEnumValue("Liquid", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Liquid);
                userType.AddEnumValue("Box", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Box);
                userType.AddEnumValue("HorizontalPulsingBox", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.HorizontalPulsingBox);
                userType.AddEnumValue("Rotation", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Rotation);
                userType.AddEnumValue("SliceBox", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.SliceBox);
                userType.AddEnumValue("DoubleCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DoubleCircle);
                userType.AddEnumValue("Drop", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Drop);
                userType.AddEnumValue("Ball", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Ball);
                userType.AddEnumValue("Delete", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Delete);
                userType.AddEnumValue("Sunny", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Sunny);
                userType.AddEnumValue("ECG", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.ECG);
                userType.AddEnumValue("GPS", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.GPS);
                userType.AddEnumValue("Pen", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Pen);
                userType.AddEnumValue("Globe", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Globe);
                userType.AddEnumValue("Print", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Print);
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Rectangle);
                userType.AddEnumValue("ArrowTrack", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.ArrowTrack);
                userType.AddEnumValue("Temperature", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Temperature);
                userType.AddEnumValue("Umbrella", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Umbrella);
                userType.AddEnumValue("Battery", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Battery);
                userType.AddEnumValue("Windmill", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Windmill);
                userType.AddEnumValue("Rainy", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Rainy);
                userType.AddEnumValue("Snow", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Snow);
                userType.AddEnumValue("Flight", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Flight);
                userType.AddEnumValue("Bulb", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Bulb);
                userType.AddEnumValue("Sunrise", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Sunrise);
                userType.AddEnumValue("Thunder", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Thunder);
                userType.AddEnumValue("SingleCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.SingleCircle);
                userType.AddEnumValue("SlicedCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.SlicedCircle);
                xamlType = userType;
                break;

            case 46:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 47:   //  Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode.Top);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode.Bottom);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode.None);
                xamlType = userType;
                break;

            case 48:   //  BI.PivotClient.Localization
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_48_Localization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  BI.PivotClient.MDXQuery
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_49_MDXQuery;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  BI.PivotClient.Paging
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_50_Paging;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 51:   //  BI.PivotClient.PivotClientSamples.Converters.BooleanVisibilityConverter
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_51_BooleanVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 52:   //  BI.PivotClient.PivotClientConfiguration
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_52_PivotClientConfiguration;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  BI.PivotClient.PivotClientCustomization
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_53_PivotClientCustomization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  BI.PivotClient.Relational
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_54_Relational;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  BI.PivotClient.VirtualKPI
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_55_VirtualKPI;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 56:   //  Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_56_SetterValueBindingHelper;
                userType.AddMemberName("Type");
                userType.AddMemberName("Property");
                userType.AddMemberName("Binding");
                userType.AddMemberName("Values");
                userType.AddMemberName("PropertyBinding");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 57:   //  Windows.UI.Xaml.Data.Binding
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 58:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_58_Collection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 59:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Common_2015.Syncfusion_SampleBrowser_UWP_Common_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfGantt.UWP.Syncfusion_SfGantt_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfImageEditor.UWP.Syncfusion_SfImageEditor_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfSmithChart.UWP.Syncfusion_SfSmithChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_0_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_1_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_1_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_2_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_2_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_3_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_3_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_4_SampleLayout_Header(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Header;
        }
        private void set_4_SampleLayout_Header(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Header = (global::System.String)Value;
        }
        private object get_5_SampleLayout_Sample(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Sample;
        }
        private void set_5_SampleLayout_Sample(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Sample = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_6_SampleLayout_Setting(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Setting;
        }
        private void set_6_SampleLayout_Setting(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Setting = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_7_SampleLayout_OptionVisibility(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.OptionVisibility;
        }
        private void set_7_SampleLayout_OptionVisibility(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.OptionVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_8_SampleLayout_FontIcons(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.FontIcons;
        }
        private void set_8_SampleLayout_FontIcons(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.FontIcons = (global::System.String)Value;
        }
        private object get_9_SampleLayout_Pathstring(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Pathstring;
        }
        private void set_9_SampleLayout_Pathstring(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Pathstring = (global::System.String)Value;
        }
        private object get_10_SampleLayout_ClickCommand(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.ClickCommand;
        }
        private object get_11_SfPivotClient_EnableAdvancedFilter(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.EnableAdvancedFilter;
        }
        private void set_11_SfPivotClient_EnableAdvancedFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.EnableAdvancedFilter = (global::System.Boolean)Value;
        }
        private object get_12_SfPivotClient_PagerButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.PagerButtonVisibility;
        }
        private void set_12_SfPivotClient_PagerButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.PagerButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_13_SfPivotClient_PivotChart(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.PivotChart;
        }
        private object get_14_SfPivotClient_PivotGrid(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.PivotGrid;
        }
        private object get_15_SfPivotClient_ShowCalculationsAsColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ShowCalculationsAsColumns;
        }
        private void set_15_SfPivotClient_ShowCalculationsAsColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ShowCalculationsAsColumns = (global::System.Boolean)Value;
        }
        private object get_16_SfPivotClient_DisplayMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.DisplayMode;
        }
        private void set_16_SfPivotClient_DisplayMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.DisplayMode = (global::Syncfusion.UI.Xaml.PivotClient.PivotClientDisplayMode)Value;
        }
        private object get_17_SfPivotClient_OlapDataManager(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.OlapDataManager;
        }
        private void set_17_SfPivotClient_OlapDataManager(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.OlapDataManager = (global::Syncfusion.Olap.UWP.Manager.OlapDataManager)Value;
        }
        private object get_18_SfPivotClient_EnableMeasureGroups(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.EnableMeasureGroups;
        }
        private void set_18_SfPivotClient_EnableMeasureGroups(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.EnableMeasureGroups = (global::System.Boolean)Value;
        }
        private object get_19_SfPivotClient_ShowProcessingBar(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ShowProcessingBar;
        }
        private void set_19_SfPivotClient_ShowProcessingBar(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ShowProcessingBar = (global::System.Boolean)Value;
        }
        private object get_20_SfPivotClient_EnableCalculatedMembers(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.EnableCalculatedMembers;
        }
        private void set_20_SfPivotClient_EnableCalculatedMembers(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.EnableCalculatedMembers = (global::System.Boolean)Value;
        }
        private object get_21_SfPivotClient_EnablePaging(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.EnablePaging;
        }
        private void set_21_SfPivotClient_EnablePaging(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.EnablePaging = (global::System.Boolean)Value;
        }
        private object get_22_SfPivotClient_EnableMemberEditorPaging(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.EnableMemberEditorPaging;
        }
        private void set_22_SfPivotClient_EnableMemberEditorPaging(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.EnableMemberEditorPaging = (global::System.Boolean)Value;
        }
        private object get_23_SfPivotClient_MemberEditorPageSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.MemberEditorPageSize;
        }
        private void set_23_SfPivotClient_MemberEditorPageSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.MemberEditorPageSize = (global::System.Int32)Value;
        }
        private object get_24_SfPivotClient_EnableVirtualKpi(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.EnableVirtualKpi;
        }
        private void set_24_SfPivotClient_EnableVirtualKpi(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.EnableVirtualKpi = (global::System.Boolean)Value;
        }
        private object get_25_SfPivotClient_AllowExcelLikeSummary(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.AllowExcelLikeSummary;
        }
        private void set_25_SfPivotClient_AllowExcelLikeSummary(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.AllowExcelLikeSummary = (global::System.Boolean)Value;
        }
        private object get_26_SfPivotClient_AllowMultiFunctionalSortFilter(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.AllowMultiFunctionalSortFilter;
        }
        private void set_26_SfPivotClient_AllowMultiFunctionalSortFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.AllowMultiFunctionalSortFilter = (global::System.Boolean)Value;
        }
        private object get_27_SfPivotClient_ItemsSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ItemsSource;
        }
        private void set_27_SfPivotClient_ItemsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_28_SfPivotClient_PivotRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.PivotRows;
        }
        private void set_28_SfPivotClient_PivotRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.PivotRows = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)Value;
        }
        private object get_29_PivotItem_AllowFilter(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowFilter;
        }
        private void set_29_PivotItem_AllowFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowFilter = (global::System.Boolean)Value;
        }
        private object get_30_PivotItem_AllowRunTimeGroupByField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowRunTimeGroupByField;
        }
        private void set_30_PivotItem_AllowRunTimeGroupByField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowRunTimeGroupByField = (global::System.Boolean)Value;
        }
        private object get_31_PivotItem_AllowSort(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowSort;
        }
        private void set_31_PivotItem_AllowSort(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowSort = (global::System.Boolean)Value;
        }
        private object get_32_PivotItem_Comparer(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Comparer;
        }
        private void set_32_PivotItem_Comparer(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Comparer = (global::System.Collections.IComparer)Value;
        }
        private object get_33_PivotItem_EnableHyperlinks(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.EnableHyperlinks;
        }
        private void set_33_PivotItem_EnableHyperlinks(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.EnableHyperlinks = (global::System.Boolean)Value;
        }
        private object get_34_PivotItem_FieldCaption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldCaption;
        }
        private void set_34_PivotItem_FieldCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldCaption = (global::System.String)Value;
        }
        private object get_35_PivotItem_FieldHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldHeader;
        }
        private void set_35_PivotItem_FieldHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldHeader = (global::System.String)Value;
        }
        private object get_36_PivotItem_FieldMappingName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldMappingName;
        }
        private void set_36_PivotItem_FieldMappingName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldMappingName = (global::System.String)Value;
        }
        private object get_37_PivotItem_Format(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Format;
        }
        private void set_37_PivotItem_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_38_PivotItem_ShowSubTotal(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.ShowSubTotal;
        }
        private void set_38_PivotItem_ShowSubTotal(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.ShowSubTotal = (global::System.Boolean)Value;
        }
        private object get_39_PivotItem_SortDirection(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.SortDirection;
        }
        private void set_39_PivotItem_SortDirection(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.SortDirection = (global::Syncfusion.Data.ListSortDirection)Value;
        }
        private object get_40_PivotItem_Summary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Summary;
        }
        private void set_40_PivotItem_Summary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Summary = (global::Syncfusion.PivotAnalysis.UWP.SummaryBase)Value;
        }
        private object get_41_PivotItem_SummaryType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.SummaryType;
        }
        private void set_41_PivotItem_SummaryType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.SummaryType = (global::Syncfusion.PivotAnalysis.UWP.SummaryType)Value;
        }
        private object get_42_PivotItem_TotalHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.TotalHeader;
        }
        private void set_42_PivotItem_TotalHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.TotalHeader = (global::System.String)Value;
        }
        private object get_43_PivotItem_Width(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Width;
        }
        private void set_43_PivotItem_Width(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_44_SfPivotClient_PivotColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.PivotColumns;
        }
        private void set_44_SfPivotClient_PivotColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.PivotColumns = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)Value;
        }
        private object get_45_SfPivotClient_PivotCalculations(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.PivotCalculations;
        }
        private void set_45_SfPivotClient_PivotCalculations(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.PivotCalculations = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)Value;
        }
        private object get_46_PivotComputationInfo_AllowFilter(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowFilter;
        }
        private void set_46_PivotComputationInfo_AllowFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowFilter = (global::System.Boolean)Value;
        }
        private object get_47_PivotComputationInfo_AllowRunTimeGroupByField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowRunTimeGroupByField;
        }
        private void set_47_PivotComputationInfo_AllowRunTimeGroupByField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowRunTimeGroupByField = (global::System.Boolean)Value;
        }
        private object get_48_PivotComputationInfo_AllowSort(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowSort;
        }
        private void set_48_PivotComputationInfo_AllowSort(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowSort = (global::System.Boolean)Value;
        }
        private object get_49_PivotComputationInfo_BaseField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.BaseField;
        }
        private void set_49_PivotComputationInfo_BaseField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.BaseField = (global::System.String)Value;
        }
        private object get_50_PivotComputationInfo_BaseItem(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.BaseItem;
        }
        private void set_50_PivotComputationInfo_BaseItem(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.BaseItem = (global::System.String)Value;
        }
        private object get_51_PivotComputationInfo_FieldType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldType;
        }
        private void set_51_PivotComputationInfo_FieldType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldType = (global::System.String)Value;
        }
        private object get_52_PivotComputationInfo_CalculationName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.CalculationName;
        }
        private void set_52_PivotComputationInfo_CalculationName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.CalculationName = (global::System.String)Value;
        }
        private object get_53_PivotComputationInfo_CalculationType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.CalculationType;
        }
        private void set_53_PivotComputationInfo_CalculationType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.CalculationType = (global::Syncfusion.PivotAnalysis.UWP.CalculationType)Value;
        }
        private object get_54_PivotComputationInfo_DefaultValue(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.DefaultValue;
        }
        private void set_54_PivotComputationInfo_DefaultValue(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.DefaultValue = (global::System.Object)Value;
        }
        private object get_55_PivotComputationInfo_Description(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Description;
        }
        private void set_55_PivotComputationInfo_Description(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_56_PivotComputationInfo_DisplayOption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.DisplayOption;
        }
        private void set_56_PivotComputationInfo_DisplayOption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.DisplayOption = (global::Syncfusion.PivotAnalysis.UWP.DisplayOption)Value;
        }
        private object get_57_PivotComputationInfo_EnableHyperlinks(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.EnableHyperlinks;
        }
        private void set_57_PivotComputationInfo_EnableHyperlinks(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.EnableHyperlinks = (global::System.Boolean)Value;
        }
        private object get_58_PivotComputationInfo_Expression(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Expression;
        }
        private void set_58_PivotComputationInfo_Expression(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Expression = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)Value;
        }
        private object get_59_PivotComputationInfo_FieldCaption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldCaption;
        }
        private void set_59_PivotComputationInfo_FieldCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldCaption = (global::System.String)Value;
        }
        private object get_60_PivotComputationInfo_FieldHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldHeader;
        }
        private void set_60_PivotComputationInfo_FieldHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldHeader = (global::System.String)Value;
        }
        private object get_61_PivotComputationInfo_FieldName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldName;
        }
        private void set_61_PivotComputationInfo_FieldName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldName = (global::System.String)Value;
        }
        private object get_62_PivotComputationInfo_Format(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Format;
        }
        private void set_62_PivotComputationInfo_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_63_PivotComputationInfo_Formula(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Formula;
        }
        private void set_63_PivotComputationInfo_Formula(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Formula = (global::System.String)Value;
        }
        private object get_64_PivotComputationInfo_InnerMostComputationsOnly(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.InnerMostComputationsOnly;
        }
        private void set_64_PivotComputationInfo_InnerMostComputationsOnly(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.InnerMostComputationsOnly = (global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel)Value;
        }
        private object get_65_PivotComputationInfo_IsTopColumnSummary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.IsTopColumnSummary;
        }
        private void set_65_PivotComputationInfo_IsTopColumnSummary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.IsTopColumnSummary = (global::System.Boolean)Value;
        }
        private object get_66_PivotComputationInfo_PadString(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.PadString;
        }
        private void set_66_PivotComputationInfo_PadString(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.PadString = (global::System.String)Value;
        }
        private object get_67_PivotComputationInfo_Summary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Summary;
        }
        private void set_67_PivotComputationInfo_Summary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Summary = (global::Syncfusion.PivotAnalysis.UWP.SummaryBase)Value;
        }
        private object get_68_PivotComputationInfo_SummaryType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.SummaryType;
        }
        private void set_68_PivotComputationInfo_SummaryType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.SummaryType = (global::Syncfusion.PivotAnalysis.UWP.SummaryType)Value;
        }
        private object get_69_SfPivotClient_Filters(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.Filters;
        }
        private void set_69_SfPivotClient_Filters(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.Filters = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>)Value;
        }
        private object get_70_FilterExpression_CaseSensitive(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.CaseSensitive;
        }
        private void set_70_FilterExpression_CaseSensitive(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.CaseSensitive = (global::System.Boolean)Value;
        }
        private object get_71_FilterExpression_DimensionHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.DimensionHeader;
        }
        private void set_71_FilterExpression_DimensionHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.DimensionHeader = (global::System.String)Value;
        }
        private object get_72_FilterExpression_DimensionName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.DimensionName;
        }
        private void set_72_FilterExpression_DimensionName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.DimensionName = (global::System.String)Value;
        }
        private object get_73_FilterExpression_Error(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Error;
        }
        private object get_74_FilterExpression_ErrorString(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.ErrorString;
        }
        private object get_75_FilterExpression_Evaluator(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Evaluator;
        }
        private void set_75_FilterExpression_Evaluator(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.Evaluator = (global::System.Delegate)Value;
        }
        private object get_76_FilterExpression_Expression(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Expression;
        }
        private void set_76_FilterExpression_Expression(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.Expression = (global::System.String)Value;
        }
        private object get_77_FilterExpression_FieldCaption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.FieldCaption;
        }
        private void set_77_FilterExpression_FieldCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.FieldCaption = (global::System.String)Value;
        }
        private object get_78_FilterExpression_Format(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Format;
        }
        private void set_78_FilterExpression_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_79_FilterExpression_Name(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Name;
        }
        private void set_79_FilterExpression_Name(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_80_FilterExpression_Tag(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Tag;
        }
        private void set_80_FilterExpression_Tag(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.Tag = (global::System.Object)Value;
        }
        private object get_81_SfPivotClient_FullScreenButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.FullScreenButtonVisibility;
        }
        private void set_81_SfPivotClient_FullScreenButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.FullScreenButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_82_SfPivotClient_PivotSchemaDesignerButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.PivotSchemaDesignerButtonVisibility;
        }
        private void set_82_SfPivotClient_PivotSchemaDesignerButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.PivotSchemaDesignerButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_83_SfPivotClient_PivotSchemaDesignerVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.PivotSchemaDesignerVisibility;
        }
        private void set_83_SfPivotClient_PivotSchemaDesignerVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.PivotSchemaDesignerVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_84_SfPivotClient_ToolBarVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ToolBarVisibility;
        }
        private void set_84_SfPivotClient_ToolBarVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ToolBarVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_85_SfPivotClient_CubeSelectorButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.CubeSelectorButtonVisibility;
        }
        private void set_85_SfPivotClient_CubeSelectorButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.CubeSelectorButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_86_SfPivotClient_NewReportButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.NewReportButtonVisibility;
        }
        private void set_86_SfPivotClient_NewReportButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.NewReportButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_87_SfPivotClient_AddReportButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.AddReportButtonVisibility;
        }
        private void set_87_SfPivotClient_AddReportButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.AddReportButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_88_SfPivotClient_LoadReportButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.LoadReportButtonVisibility;
        }
        private void set_88_SfPivotClient_LoadReportButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.LoadReportButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_89_SfPivotClient_SaveReportButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.SaveReportButtonVisibility;
        }
        private void set_89_SfPivotClient_SaveReportButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.SaveReportButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_90_SfPivotClient_SaveAsReportButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.SaveAsReportButtonVisibility;
        }
        private void set_90_SfPivotClient_SaveAsReportButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.SaveAsReportButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_91_SfPivotClient_RenameReportButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.RenameReportButtonVisibility;
        }
        private void set_91_SfPivotClient_RenameReportButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.RenameReportButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_92_SfPivotClient_RemoveReportButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.RemoveReportButtonVisibility;
        }
        private void set_92_SfPivotClient_RemoveReportButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.RemoveReportButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_93_SfPivotClient_TogglePivotButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.TogglePivotButtonVisibility;
        }
        private void set_93_SfPivotClient_TogglePivotButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.TogglePivotButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_94_SfPivotClient_MDXQueryButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.MDXQueryButtonVisibility;
        }
        private void set_94_SfPivotClient_MDXQueryButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.MDXQueryButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_95_SfPivotClient_ExpressionFieldButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ExpressionFieldButtonVisibility;
        }
        private void set_95_SfPivotClient_ExpressionFieldButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ExpressionFieldButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_96_SfPivotClient_CustomSummaryButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.CustomSummaryButtonVisibility;
        }
        private void set_96_SfPivotClient_CustomSummaryButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.CustomSummaryButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_97_SfPivotClient_CalculatedFieldButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.CalculatedFieldButtonVisibility;
        }
        private void set_97_SfPivotClient_CalculatedFieldButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.CalculatedFieldButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_98_SfPivotClient_ReportListVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ReportListVisibility;
        }
        private void set_98_SfPivotClient_ReportListVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ReportListVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_99_SfPivotClient_ExpanderButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ExpanderButtonVisibility;
        }
        private void set_99_SfPivotClient_ExpanderButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ExpanderButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_100_SfPivotClient_CubeDimensionBrowserVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.CubeDimensionBrowserVisibility;
        }
        private void set_100_SfPivotClient_CubeDimensionBrowserVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.CubeDimensionBrowserVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_101_SfPivotClient_SearchBoxVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.SearchBoxVisibility;
        }
        private void set_101_SfPivotClient_SearchBoxVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.SearchBoxVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_102_SfPivotClient_RowAxisElementBuilderVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.RowAxisElementBuilderVisibility;
        }
        private void set_102_SfPivotClient_RowAxisElementBuilderVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.RowAxisElementBuilderVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_103_SfPivotClient_ColumnAxisElementBuilderVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ColumnAxisElementBuilderVisibility;
        }
        private void set_103_SfPivotClient_ColumnAxisElementBuilderVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ColumnAxisElementBuilderVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_104_SfPivotClient_SlicerAxisElementBuilderVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.SlicerAxisElementBuilderVisibility;
        }
        private void set_104_SfPivotClient_SlicerAxisElementBuilderVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.SlicerAxisElementBuilderVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_105_SfPivotClient_ValueAxisElementBuilderVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ValueAxisElementBuilderVisibility;
        }
        private void set_105_SfPivotClient_ValueAxisElementBuilderVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ValueAxisElementBuilderVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_106_SfPivotClient_GridToolBarVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.GridToolBarVisibility;
        }
        private void set_106_SfPivotClient_GridToolBarVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.GridToolBarVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_107_SfPivotClient_ShowSubTotalsButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ShowSubTotalsButtonVisibility;
        }
        private void set_107_SfPivotClient_ShowSubTotalsButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ShowSubTotalsButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_108_SfPivotClient_FreezeHeaderButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.FreezeHeaderButtonVisibility;
        }
        private void set_108_SfPivotClient_FreezeHeaderButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.FreezeHeaderButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_109_SfPivotClient_ValueCellToolTipButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ValueCellToolTipButtonVisibility;
        }
        private void set_109_SfPivotClient_ValueCellToolTipButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ValueCellToolTipButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_110_SfPivotClient_HyperlinkButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.HyperlinkButtonVisibility;
        }
        private void set_110_SfPivotClient_HyperlinkButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.HyperlinkButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_111_SfPivotClient_ExportPivotGridToExcelButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ExportPivotGridToExcelButtonVisibility;
        }
        private void set_111_SfPivotClient_ExportPivotGridToExcelButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ExportPivotGridToExcelButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_112_SfPivotClient_ExportPivotGridToWordButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ExportPivotGridToWordButtonVisibility;
        }
        private void set_112_SfPivotClient_ExportPivotGridToWordButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ExportPivotGridToWordButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_113_SfPivotClient_ExportPivotGridToPdfButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ExportPivotGridToPdfButtonVisibility;
        }
        private void set_113_SfPivotClient_ExportPivotGridToPdfButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ExportPivotGridToPdfButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_114_SfPivotClient_ExportPivotGridToCsvButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ExportPivotGridToCsvButtonVisibility;
        }
        private void set_114_SfPivotClient_ExportPivotGridToCsvButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ExportPivotGridToCsvButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_115_SfPivotClient_EnableConditionalFormat(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.EnableConditionalFormat;
        }
        private void set_115_SfPivotClient_EnableConditionalFormat(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.EnableConditionalFormat = (global::System.Boolean)Value;
        }
        private object get_116_SfPivotClient_ChartToolBarVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ChartToolBarVisibility;
        }
        private void set_116_SfPivotClient_ChartToolBarVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ChartToolBarVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_117_SfPivotClient_LegendButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.LegendButtonVisibility;
        }
        private void set_117_SfPivotClient_LegendButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.LegendButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_118_SfPivotClient_ChartToolTipButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ChartToolTipButtonVisibility;
        }
        private void set_118_SfPivotClient_ChartToolTipButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ChartToolTipButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_119_SfPivotClient_ExportChartToImageButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ExportChartToImageButtonVisibility;
        }
        private void set_119_SfPivotClient_ExportChartToImageButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ExportChartToImageButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_120_SfPivotClient_ExportPivotChartToWordButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ExportPivotChartToWordButtonVisibility;
        }
        private void set_120_SfPivotClient_ExportPivotChartToWordButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ExportPivotChartToWordButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_121_SfPivotClient_ExportPivotChartToPdfButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ExportPivotChartToPdfButtonVisibility;
        }
        private void set_121_SfPivotClient_ExportPivotChartToPdfButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ExportPivotChartToPdfButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_122_SfPivotClient_ReportMenuButtonVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.ReportMenuButtonVisibility;
        }
        private void set_122_SfPivotClient_ReportMenuButtonVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.ReportMenuButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_123_SfPivotClient_EnableAutoExecute(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            return that.EnableAutoExecute;
        }
        private void set_123_SfPivotClient_EnableAutoExecute(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotClient.SfPivotClient)instance;
            that.EnableAutoExecute = (global::System.Boolean)Value;
        }
        private object get_124_ViewModel_OlapDataManager(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel)instance;
            return that.OlapDataManager;
        }
        private void set_124_ViewModel_OlapDataManager(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel)instance;
            that.OlapDataManager = (global::Syncfusion.Olap.UWP.Manager.OlapDataManager)Value;
        }
        private object get_125_ViewModel_ProductSalesData(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel)instance;
            return that.ProductSalesData;
        }
        private void set_125_ViewModel_ProductSalesData(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel)instance;
            that.ProductSalesData = (global::System.Object)Value;
        }
        private object get_126_SfBusyIndicator_AnimationType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.AnimationType;
        }
        private void set_126_SfBusyIndicator_AnimationType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.AnimationType = (global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes)Value;
        }
        private object get_127_SfBusyIndicator_IsBusy(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.IsBusy;
        }
        private void set_127_SfBusyIndicator_IsBusy(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.IsBusy = (global::System.Boolean)Value;
        }
        private object get_128_SfBusyIndicator_ViewboxHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.ViewboxHeight;
        }
        private void set_128_SfBusyIndicator_ViewboxHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.ViewboxHeight = (global::System.Double)Value;
        }
        private object get_129_SfBusyIndicator_ViewboxWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.ViewboxWidth;
        }
        private void set_129_SfBusyIndicator_ViewboxWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.ViewboxWidth = (global::System.Double)Value;
        }
        private object get_130_SfBusyIndicator_AnimationSpeed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.AnimationSpeed;
        }
        private void set_130_SfBusyIndicator_AnimationSpeed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.AnimationSpeed = (global::System.Double)Value;
        }
        private object get_131_SfBusyIndicator_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.Header;
        }
        private void set_131_SfBusyIndicator_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_132_SfBusyIndicator_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.HeaderTemplate;
        }
        private void set_132_SfBusyIndicator_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_133_SfBusyIndicator_HeaderPlacementMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.HeaderPlacementMode;
        }
        private void set_133_SfBusyIndicator_HeaderPlacementMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.HeaderPlacementMode = (global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode)Value;
        }
        private object get_134_SetterValueBindingHelper_Type(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Type;
        }
        private void set_134_SetterValueBindingHelper_Type(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Type = (global::System.String)Value;
        }
        private object get_135_SetterValueBindingHelper_Property(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Property;
        }
        private void set_135_SetterValueBindingHelper_Property(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Property = (global::System.String)Value;
        }
        private object get_136_SetterValueBindingHelper_Binding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Binding;
        }
        private void set_136_SetterValueBindingHelper_Binding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Binding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_137_SetterValueBindingHelper_Values(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Values;
        }
        private object get_138_SetterValueBindingHelper_PropertyBinding(object instance)
        {
            return global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.GetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance);
        }
        private void set_138_SetterValueBindingHelper_PropertyBinding(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.SetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance, (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)Value);
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember xamlMember = null;
            global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Windows.UI.Color.A":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_0_Color_A;
                xamlMember.Setter = set_0_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_1_Color_B;
                xamlMember.Setter = set_1_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_2_Color_G;
                xamlMember.Setter = set_2_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_3_Color_R;
                xamlMember.Setter = set_3_Color_R;
                break;
            case "Common.SampleLayout.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Header", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_SampleLayout_Header;
                xamlMember.Setter = set_4_SampleLayout_Header;
                break;
            case "Common.SampleLayout.Sample":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Sample", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SampleLayout_Sample;
                xamlMember.Setter = set_5_SampleLayout_Sample;
                break;
            case "Common.SampleLayout.Setting":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Setting", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_SampleLayout_Setting;
                xamlMember.Setter = set_6_SampleLayout_Setting;
                break;
            case "Common.SampleLayout.OptionVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "OptionVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_SampleLayout_OptionVisibility;
                xamlMember.Setter = set_7_SampleLayout_OptionVisibility;
                break;
            case "Common.SampleLayout.FontIcons":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "FontIcons", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_SampleLayout_FontIcons;
                xamlMember.Setter = set_8_SampleLayout_FontIcons;
                break;
            case "Common.SampleLayout.Pathstring":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Pathstring", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_SampleLayout_Pathstring;
                xamlMember.Setter = set_9_SampleLayout_Pathstring;
                break;
            case "Common.SampleLayout.ClickCommand":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ClickCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_10_SampleLayout_ClickCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.EnableAdvancedFilter":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "EnableAdvancedFilter", "Boolean");
                xamlMember.Getter = get_11_SfPivotClient_EnableAdvancedFilter;
                xamlMember.Setter = set_11_SfPivotClient_EnableAdvancedFilter;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.PagerButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "PagerButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_SfPivotClient_PagerButtonVisibility;
                xamlMember.Setter = set_12_SfPivotClient_PagerButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.PivotChart":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "PivotChart", "Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember.Getter = get_13_SfPivotClient_PivotChart;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.PivotGrid":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "PivotGrid", "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember.Getter = get_14_SfPivotClient_PivotGrid;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ShowCalculationsAsColumns":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ShowCalculationsAsColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_SfPivotClient_ShowCalculationsAsColumns;
                xamlMember.Setter = set_15_SfPivotClient_ShowCalculationsAsColumns;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.DisplayMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "DisplayMode", "Syncfusion.UI.Xaml.PivotClient.PivotClientDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_SfPivotClient_DisplayMode;
                xamlMember.Setter = set_16_SfPivotClient_DisplayMode;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.OlapDataManager":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "OlapDataManager", "Syncfusion.Olap.UWP.Manager.OlapDataManager");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_SfPivotClient_OlapDataManager;
                xamlMember.Setter = set_17_SfPivotClient_OlapDataManager;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.EnableMeasureGroups":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "EnableMeasureGroups", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_SfPivotClient_EnableMeasureGroups;
                xamlMember.Setter = set_18_SfPivotClient_EnableMeasureGroups;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ShowProcessingBar":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ShowProcessingBar", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_SfPivotClient_ShowProcessingBar;
                xamlMember.Setter = set_19_SfPivotClient_ShowProcessingBar;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.EnableCalculatedMembers":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "EnableCalculatedMembers", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_SfPivotClient_EnableCalculatedMembers;
                xamlMember.Setter = set_20_SfPivotClient_EnableCalculatedMembers;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.EnablePaging":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "EnablePaging", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_SfPivotClient_EnablePaging;
                xamlMember.Setter = set_21_SfPivotClient_EnablePaging;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.EnableMemberEditorPaging":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "EnableMemberEditorPaging", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_SfPivotClient_EnableMemberEditorPaging;
                xamlMember.Setter = set_22_SfPivotClient_EnableMemberEditorPaging;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.MemberEditorPageSize":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "MemberEditorPageSize", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_SfPivotClient_MemberEditorPageSize;
                xamlMember.Setter = set_23_SfPivotClient_MemberEditorPageSize;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.EnableVirtualKpi":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "EnableVirtualKpi", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_SfPivotClient_EnableVirtualKpi;
                xamlMember.Setter = set_24_SfPivotClient_EnableVirtualKpi;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.AllowExcelLikeSummary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "AllowExcelLikeSummary", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_SfPivotClient_AllowExcelLikeSummary;
                xamlMember.Setter = set_25_SfPivotClient_AllowExcelLikeSummary;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.AllowMultiFunctionalSortFilter":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "AllowMultiFunctionalSortFilter", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_SfPivotClient_AllowMultiFunctionalSortFilter;
                xamlMember.Setter = set_26_SfPivotClient_AllowMultiFunctionalSortFilter;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ItemsSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_SfPivotClient_ItemsSource;
                xamlMember.Setter = set_27_SfPivotClient_ItemsSource;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.PivotRows":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "PivotRows", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_SfPivotClient_PivotRows;
                xamlMember.Setter = set_28_SfPivotClient_PivotRows;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowFilter":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "AllowFilter", "Boolean");
                xamlMember.Getter = get_29_PivotItem_AllowFilter;
                xamlMember.Setter = set_29_PivotItem_AllowFilter;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowRunTimeGroupByField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "AllowRunTimeGroupByField", "Boolean");
                xamlMember.Getter = get_30_PivotItem_AllowRunTimeGroupByField;
                xamlMember.Setter = set_30_PivotItem_AllowRunTimeGroupByField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowSort":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "AllowSort", "Boolean");
                xamlMember.Getter = get_31_PivotItem_AllowSort;
                xamlMember.Setter = set_31_PivotItem_AllowSort;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Comparer":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Comparer", "System.Collections.IComparer");
                xamlMember.Getter = get_32_PivotItem_Comparer;
                xamlMember.Setter = set_32_PivotItem_Comparer;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.EnableHyperlinks":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "EnableHyperlinks", "Boolean");
                xamlMember.Getter = get_33_PivotItem_EnableHyperlinks;
                xamlMember.Setter = set_33_PivotItem_EnableHyperlinks;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "FieldCaption", "String");
                xamlMember.Getter = get_34_PivotItem_FieldCaption;
                xamlMember.Setter = set_34_PivotItem_FieldCaption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "FieldHeader", "String");
                xamlMember.Getter = get_35_PivotItem_FieldHeader;
                xamlMember.Setter = set_35_PivotItem_FieldHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldMappingName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "FieldMappingName", "String");
                xamlMember.Getter = get_36_PivotItem_FieldMappingName;
                xamlMember.Setter = set_36_PivotItem_FieldMappingName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Format":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_37_PivotItem_Format;
                xamlMember.Setter = set_37_PivotItem_Format;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.ShowSubTotal":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ShowSubTotal", "Boolean");
                xamlMember.Getter = get_38_PivotItem_ShowSubTotal;
                xamlMember.Setter = set_38_PivotItem_ShowSubTotal;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.SortDirection":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "SortDirection", "Syncfusion.Data.ListSortDirection");
                xamlMember.Getter = get_39_PivotItem_SortDirection;
                xamlMember.Setter = set_39_PivotItem_SortDirection;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Summary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Summary", "Syncfusion.PivotAnalysis.UWP.SummaryBase");
                xamlMember.Getter = get_40_PivotItem_Summary;
                xamlMember.Setter = set_40_PivotItem_Summary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.SummaryType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "SummaryType", "Syncfusion.PivotAnalysis.UWP.SummaryType");
                xamlMember.Getter = get_41_PivotItem_SummaryType;
                xamlMember.Setter = set_41_PivotItem_SummaryType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.TotalHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "TotalHeader", "String");
                xamlMember.Getter = get_42_PivotItem_TotalHeader;
                xamlMember.Setter = set_42_PivotItem_TotalHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Width":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.Getter = get_43_PivotItem_Width;
                xamlMember.Setter = set_43_PivotItem_Width;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.PivotColumns":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "PivotColumns", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_SfPivotClient_PivotColumns;
                xamlMember.Setter = set_44_SfPivotClient_PivotColumns;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.PivotCalculations":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "PivotCalculations", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_SfPivotClient_PivotCalculations;
                xamlMember.Setter = set_45_SfPivotClient_PivotCalculations;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowFilter":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "AllowFilter", "Boolean");
                xamlMember.Getter = get_46_PivotComputationInfo_AllowFilter;
                xamlMember.Setter = set_46_PivotComputationInfo_AllowFilter;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowRunTimeGroupByField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "AllowRunTimeGroupByField", "Boolean");
                xamlMember.Getter = get_47_PivotComputationInfo_AllowRunTimeGroupByField;
                xamlMember.Setter = set_47_PivotComputationInfo_AllowRunTimeGroupByField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowSort":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "AllowSort", "Boolean");
                xamlMember.Getter = get_48_PivotComputationInfo_AllowSort;
                xamlMember.Setter = set_48_PivotComputationInfo_AllowSort;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.BaseField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "BaseField", "String");
                xamlMember.Getter = get_49_PivotComputationInfo_BaseField;
                xamlMember.Setter = set_49_PivotComputationInfo_BaseField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.BaseItem":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "BaseItem", "String");
                xamlMember.Getter = get_50_PivotComputationInfo_BaseItem;
                xamlMember.Setter = set_50_PivotComputationInfo_BaseItem;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "FieldType", "String");
                xamlMember.Getter = get_51_PivotComputationInfo_FieldType;
                xamlMember.Setter = set_51_PivotComputationInfo_FieldType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.CalculationName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "CalculationName", "String");
                xamlMember.Getter = get_52_PivotComputationInfo_CalculationName;
                xamlMember.Setter = set_52_PivotComputationInfo_CalculationName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.CalculationType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "CalculationType", "Syncfusion.PivotAnalysis.UWP.CalculationType");
                xamlMember.Getter = get_53_PivotComputationInfo_CalculationType;
                xamlMember.Setter = set_53_PivotComputationInfo_CalculationType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.DefaultValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "DefaultValue", "Object");
                xamlMember.Getter = get_54_PivotComputationInfo_DefaultValue;
                xamlMember.Setter = set_54_PivotComputationInfo_DefaultValue;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Description":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_55_PivotComputationInfo_Description;
                xamlMember.Setter = set_55_PivotComputationInfo_Description;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.DisplayOption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "DisplayOption", "Syncfusion.PivotAnalysis.UWP.DisplayOption");
                xamlMember.Getter = get_56_PivotComputationInfo_DisplayOption;
                xamlMember.Setter = set_56_PivotComputationInfo_DisplayOption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.EnableHyperlinks":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "EnableHyperlinks", "Boolean");
                xamlMember.Getter = get_57_PivotComputationInfo_EnableHyperlinks;
                xamlMember.Setter = set_57_PivotComputationInfo_EnableHyperlinks;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Expression":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Expression", "Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember.Getter = get_58_PivotComputationInfo_Expression;
                xamlMember.Setter = set_58_PivotComputationInfo_Expression;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "FieldCaption", "String");
                xamlMember.Getter = get_59_PivotComputationInfo_FieldCaption;
                xamlMember.Setter = set_59_PivotComputationInfo_FieldCaption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "FieldHeader", "String");
                xamlMember.Getter = get_60_PivotComputationInfo_FieldHeader;
                xamlMember.Setter = set_60_PivotComputationInfo_FieldHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "FieldName", "String");
                xamlMember.Getter = get_61_PivotComputationInfo_FieldName;
                xamlMember.Setter = set_61_PivotComputationInfo_FieldName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Format":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_62_PivotComputationInfo_Format;
                xamlMember.Setter = set_62_PivotComputationInfo_Format;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Formula":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Formula", "String");
                xamlMember.Getter = get_63_PivotComputationInfo_Formula;
                xamlMember.Setter = set_63_PivotComputationInfo_Formula;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.InnerMostComputationsOnly":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "InnerMostComputationsOnly", "Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel");
                xamlMember.Getter = get_64_PivotComputationInfo_InnerMostComputationsOnly;
                xamlMember.Setter = set_64_PivotComputationInfo_InnerMostComputationsOnly;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.IsTopColumnSummary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "IsTopColumnSummary", "Boolean");
                xamlMember.Getter = get_65_PivotComputationInfo_IsTopColumnSummary;
                xamlMember.Setter = set_65_PivotComputationInfo_IsTopColumnSummary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.PadString":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "PadString", "String");
                xamlMember.Getter = get_66_PivotComputationInfo_PadString;
                xamlMember.Setter = set_66_PivotComputationInfo_PadString;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Summary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Summary", "Syncfusion.PivotAnalysis.UWP.SummaryBase");
                xamlMember.Getter = get_67_PivotComputationInfo_Summary;
                xamlMember.Setter = set_67_PivotComputationInfo_Summary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.SummaryType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "SummaryType", "Syncfusion.PivotAnalysis.UWP.SummaryType");
                xamlMember.Getter = get_68_PivotComputationInfo_SummaryType;
                xamlMember.Setter = set_68_PivotComputationInfo_SummaryType;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.Filters":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Filters", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_SfPivotClient_Filters;
                xamlMember.Setter = set_69_SfPivotClient_Filters;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.CaseSensitive":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "CaseSensitive", "Boolean");
                xamlMember.Getter = get_70_FilterExpression_CaseSensitive;
                xamlMember.Setter = set_70_FilterExpression_CaseSensitive;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.DimensionHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "DimensionHeader", "String");
                xamlMember.Getter = get_71_FilterExpression_DimensionHeader;
                xamlMember.Setter = set_71_FilterExpression_DimensionHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.DimensionName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "DimensionName", "String");
                xamlMember.Getter = get_72_FilterExpression_DimensionName;
                xamlMember.Setter = set_72_FilterExpression_DimensionName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Error":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Error", "Syncfusion.PivotAnalysis.UWP.ExpressionError");
                xamlMember.Getter = get_73_FilterExpression_Error;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.ErrorString":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ErrorString", "String");
                xamlMember.Getter = get_74_FilterExpression_ErrorString;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Evaluator":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Evaluator", "System.Delegate");
                xamlMember.Getter = get_75_FilterExpression_Evaluator;
                xamlMember.Setter = set_75_FilterExpression_Evaluator;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Expression":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Expression", "String");
                xamlMember.Getter = get_76_FilterExpression_Expression;
                xamlMember.Setter = set_76_FilterExpression_Expression;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.FieldCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "FieldCaption", "String");
                xamlMember.Getter = get_77_FilterExpression_FieldCaption;
                xamlMember.Setter = set_77_FilterExpression_FieldCaption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Format":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_78_FilterExpression_Format;
                xamlMember.Setter = set_78_FilterExpression_Format;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Name":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_79_FilterExpression_Name;
                xamlMember.Setter = set_79_FilterExpression_Name;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Tag":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Tag", "Object");
                xamlMember.Getter = get_80_FilterExpression_Tag;
                xamlMember.Setter = set_80_FilterExpression_Tag;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.FullScreenButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "FullScreenButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_SfPivotClient_FullScreenButtonVisibility;
                xamlMember.Setter = set_81_SfPivotClient_FullScreenButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.PivotSchemaDesignerButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "PivotSchemaDesignerButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_SfPivotClient_PivotSchemaDesignerButtonVisibility;
                xamlMember.Setter = set_82_SfPivotClient_PivotSchemaDesignerButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.PivotSchemaDesignerVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "PivotSchemaDesignerVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_SfPivotClient_PivotSchemaDesignerVisibility;
                xamlMember.Setter = set_83_SfPivotClient_PivotSchemaDesignerVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ToolBarVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ToolBarVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_SfPivotClient_ToolBarVisibility;
                xamlMember.Setter = set_84_SfPivotClient_ToolBarVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.CubeSelectorButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "CubeSelectorButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_SfPivotClient_CubeSelectorButtonVisibility;
                xamlMember.Setter = set_85_SfPivotClient_CubeSelectorButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.NewReportButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "NewReportButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_SfPivotClient_NewReportButtonVisibility;
                xamlMember.Setter = set_86_SfPivotClient_NewReportButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.AddReportButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "AddReportButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_SfPivotClient_AddReportButtonVisibility;
                xamlMember.Setter = set_87_SfPivotClient_AddReportButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.LoadReportButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "LoadReportButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_SfPivotClient_LoadReportButtonVisibility;
                xamlMember.Setter = set_88_SfPivotClient_LoadReportButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.SaveReportButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "SaveReportButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_SfPivotClient_SaveReportButtonVisibility;
                xamlMember.Setter = set_89_SfPivotClient_SaveReportButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.SaveAsReportButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "SaveAsReportButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_SfPivotClient_SaveAsReportButtonVisibility;
                xamlMember.Setter = set_90_SfPivotClient_SaveAsReportButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.RenameReportButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "RenameReportButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_SfPivotClient_RenameReportButtonVisibility;
                xamlMember.Setter = set_91_SfPivotClient_RenameReportButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.RemoveReportButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "RemoveReportButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_SfPivotClient_RemoveReportButtonVisibility;
                xamlMember.Setter = set_92_SfPivotClient_RemoveReportButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.TogglePivotButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "TogglePivotButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_SfPivotClient_TogglePivotButtonVisibility;
                xamlMember.Setter = set_93_SfPivotClient_TogglePivotButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.MDXQueryButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "MDXQueryButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_SfPivotClient_MDXQueryButtonVisibility;
                xamlMember.Setter = set_94_SfPivotClient_MDXQueryButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ExpressionFieldButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ExpressionFieldButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_SfPivotClient_ExpressionFieldButtonVisibility;
                xamlMember.Setter = set_95_SfPivotClient_ExpressionFieldButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.CustomSummaryButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "CustomSummaryButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_SfPivotClient_CustomSummaryButtonVisibility;
                xamlMember.Setter = set_96_SfPivotClient_CustomSummaryButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.CalculatedFieldButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "CalculatedFieldButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_SfPivotClient_CalculatedFieldButtonVisibility;
                xamlMember.Setter = set_97_SfPivotClient_CalculatedFieldButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ReportListVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ReportListVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_SfPivotClient_ReportListVisibility;
                xamlMember.Setter = set_98_SfPivotClient_ReportListVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ExpanderButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ExpanderButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_SfPivotClient_ExpanderButtonVisibility;
                xamlMember.Setter = set_99_SfPivotClient_ExpanderButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.CubeDimensionBrowserVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "CubeDimensionBrowserVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_SfPivotClient_CubeDimensionBrowserVisibility;
                xamlMember.Setter = set_100_SfPivotClient_CubeDimensionBrowserVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.SearchBoxVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "SearchBoxVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_SfPivotClient_SearchBoxVisibility;
                xamlMember.Setter = set_101_SfPivotClient_SearchBoxVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.RowAxisElementBuilderVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "RowAxisElementBuilderVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_SfPivotClient_RowAxisElementBuilderVisibility;
                xamlMember.Setter = set_102_SfPivotClient_RowAxisElementBuilderVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ColumnAxisElementBuilderVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ColumnAxisElementBuilderVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_SfPivotClient_ColumnAxisElementBuilderVisibility;
                xamlMember.Setter = set_103_SfPivotClient_ColumnAxisElementBuilderVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.SlicerAxisElementBuilderVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "SlicerAxisElementBuilderVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_SfPivotClient_SlicerAxisElementBuilderVisibility;
                xamlMember.Setter = set_104_SfPivotClient_SlicerAxisElementBuilderVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ValueAxisElementBuilderVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ValueAxisElementBuilderVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_SfPivotClient_ValueAxisElementBuilderVisibility;
                xamlMember.Setter = set_105_SfPivotClient_ValueAxisElementBuilderVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.GridToolBarVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "GridToolBarVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_SfPivotClient_GridToolBarVisibility;
                xamlMember.Setter = set_106_SfPivotClient_GridToolBarVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ShowSubTotalsButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ShowSubTotalsButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_SfPivotClient_ShowSubTotalsButtonVisibility;
                xamlMember.Setter = set_107_SfPivotClient_ShowSubTotalsButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.FreezeHeaderButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "FreezeHeaderButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_SfPivotClient_FreezeHeaderButtonVisibility;
                xamlMember.Setter = set_108_SfPivotClient_FreezeHeaderButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ValueCellToolTipButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ValueCellToolTipButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_SfPivotClient_ValueCellToolTipButtonVisibility;
                xamlMember.Setter = set_109_SfPivotClient_ValueCellToolTipButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.HyperlinkButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "HyperlinkButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_SfPivotClient_HyperlinkButtonVisibility;
                xamlMember.Setter = set_110_SfPivotClient_HyperlinkButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ExportPivotGridToExcelButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ExportPivotGridToExcelButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_SfPivotClient_ExportPivotGridToExcelButtonVisibility;
                xamlMember.Setter = set_111_SfPivotClient_ExportPivotGridToExcelButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ExportPivotGridToWordButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ExportPivotGridToWordButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_SfPivotClient_ExportPivotGridToWordButtonVisibility;
                xamlMember.Setter = set_112_SfPivotClient_ExportPivotGridToWordButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ExportPivotGridToPdfButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ExportPivotGridToPdfButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_SfPivotClient_ExportPivotGridToPdfButtonVisibility;
                xamlMember.Setter = set_113_SfPivotClient_ExportPivotGridToPdfButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ExportPivotGridToCsvButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ExportPivotGridToCsvButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_SfPivotClient_ExportPivotGridToCsvButtonVisibility;
                xamlMember.Setter = set_114_SfPivotClient_ExportPivotGridToCsvButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.EnableConditionalFormat":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "EnableConditionalFormat", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_SfPivotClient_EnableConditionalFormat;
                xamlMember.Setter = set_115_SfPivotClient_EnableConditionalFormat;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ChartToolBarVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ChartToolBarVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_SfPivotClient_ChartToolBarVisibility;
                xamlMember.Setter = set_116_SfPivotClient_ChartToolBarVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.LegendButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "LegendButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_SfPivotClient_LegendButtonVisibility;
                xamlMember.Setter = set_117_SfPivotClient_LegendButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ChartToolTipButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ChartToolTipButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_SfPivotClient_ChartToolTipButtonVisibility;
                xamlMember.Setter = set_118_SfPivotClient_ChartToolTipButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ExportChartToImageButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ExportChartToImageButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_SfPivotClient_ExportChartToImageButtonVisibility;
                xamlMember.Setter = set_119_SfPivotClient_ExportChartToImageButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ExportPivotChartToWordButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ExportPivotChartToWordButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_SfPivotClient_ExportPivotChartToWordButtonVisibility;
                xamlMember.Setter = set_120_SfPivotClient_ExportPivotChartToWordButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ExportPivotChartToPdfButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ExportPivotChartToPdfButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_SfPivotClient_ExportPivotChartToPdfButtonVisibility;
                xamlMember.Setter = set_121_SfPivotClient_ExportPivotChartToPdfButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.ReportMenuButtonVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ReportMenuButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_SfPivotClient_ReportMenuButtonVisibility;
                xamlMember.Setter = set_122_SfPivotClient_ReportMenuButtonVisibility;
                break;
            case "Syncfusion.UI.Xaml.PivotClient.SfPivotClient.EnableAutoExecute":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotClient.SfPivotClient");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "EnableAutoExecute", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_SfPivotClient_EnableAutoExecute;
                xamlMember.Setter = set_123_SfPivotClient_EnableAutoExecute;
                break;
            case "Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel.OlapDataManager":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "OlapDataManager", "Syncfusion.Olap.UWP.Manager.OlapDataManager");
                xamlMember.Getter = get_124_ViewModel_OlapDataManager;
                xamlMember.Setter = set_124_ViewModel_OlapDataManager;
                break;
            case "Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel.ProductSalesData":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.PivotClient.PivotClient.ViewModel.ViewModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ProductSalesData", "Object");
                xamlMember.Getter = get_125_ViewModel_ProductSalesData;
                xamlMember.Setter = set_125_ViewModel_ProductSalesData;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.AnimationType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "AnimationType", "Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_SfBusyIndicator_AnimationType;
                xamlMember.Setter = set_126_SfBusyIndicator_AnimationType;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.IsBusy":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "IsBusy", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_SfBusyIndicator_IsBusy;
                xamlMember.Setter = set_127_SfBusyIndicator_IsBusy;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.ViewboxHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ViewboxHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_SfBusyIndicator_ViewboxHeight;
                xamlMember.Setter = set_128_SfBusyIndicator_ViewboxHeight;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.ViewboxWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "ViewboxWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_SfBusyIndicator_ViewboxWidth;
                xamlMember.Setter = set_129_SfBusyIndicator_ViewboxWidth;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.AnimationSpeed":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "AnimationSpeed", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_SfBusyIndicator_AnimationSpeed;
                xamlMember.Setter = set_130_SfBusyIndicator_AnimationSpeed;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_SfBusyIndicator_Header;
                xamlMember.Setter = set_131_SfBusyIndicator_Header;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.HeaderTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_SfBusyIndicator_HeaderTemplate;
                xamlMember.Setter = set_132_SfBusyIndicator_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.HeaderPlacementMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "HeaderPlacementMode", "Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_SfBusyIndicator_HeaderPlacementMode;
                xamlMember.Setter = set_133_SfBusyIndicator_HeaderPlacementMode;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Type":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Type", "String");
                xamlMember.Getter = get_134_SetterValueBindingHelper_Type;
                xamlMember.Setter = set_134_SetterValueBindingHelper_Type;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Property":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Property", "String");
                xamlMember.Getter = get_135_SetterValueBindingHelper_Property;
                xamlMember.Setter = set_135_SetterValueBindingHelper_Property;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Binding":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Binding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_136_SetterValueBindingHelper_Binding;
                xamlMember.Setter = set_136_SetterValueBindingHelper_Binding;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Values":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "Values", "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>");
                xamlMember.Getter = get_137_SetterValueBindingHelper_Values;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.PropertyBinding":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlMember(this, "PropertyBinding", "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_138_SetterValueBindingHelper_PropertyBinding;
                xamlMember.Setter = set_138_SetterValueBindingHelper_PropertyBinding;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlSystemBaseType
    {
        global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Syncfusion.SampleBrowser.UWP.PivotClient.Syncfusion_SampleBrowser_UWP_PivotClient_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

