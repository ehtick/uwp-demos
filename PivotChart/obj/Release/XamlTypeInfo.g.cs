//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[100];
            _typeNameTable[0] = "Windows.UI.Color";
            _typeNameTable[1] = "System.ValueType";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Byte";
            _typeNameTable[4] = "Common.SampleLayout";
            _typeNameTable[5] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[6] = "String";
            _typeNameTable[7] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[8] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[9] = "System.Windows.Input.ICommand";
            _typeNameTable[10] = "BI.PivotChart.Converter.CustomAdornmentConverter";
            _typeNameTable[11] = "Syncfusion.UI.Xaml.PivotChart.SfPivotChart";
            _typeNameTable[12] = "Syncfusion.UI.Xaml.PivotChart.PivotChartType";
            _typeNameTable[13] = "System.Enum";
            _typeNameTable[14] = "Boolean";
            _typeNameTable[15] = "Syncfusion.UI.Xaml.PivotChart.PivotChartLegend";
            _typeNameTable[16] = "Syncfusion.UI.Xaml.Charts.ChartLegend";
            _typeNameTable[17] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[18] = "Syncfusion.Olap.UWP.Manager.OlapDataManager";
            _typeNameTable[19] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[20] = "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationCollection";
            _typeNameTable[21] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>";
            _typeNameTable[22] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>";
            _typeNameTable[23] = "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation";
            _typeNameTable[24] = "Syncfusion.UI.Xaml.Charts.Annotation";
            _typeNameTable[25] = "Windows.UI.Xaml.FrameworkElement";
            _typeNameTable[26] = "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType";
            _typeNameTable[27] = "Double";
            _typeNameTable[28] = "Windows.UI.Xaml.HorizontalAlignment";
            _typeNameTable[29] = "Windows.UI.Xaml.VerticalAlignment";
            _typeNameTable[30] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[31] = "Syncfusion.UI.Xaml.Charts.LineCap";
            _typeNameTable[32] = "Syncfusion.UI.Xaml.Charts.AxisMode";
            _typeNameTable[33] = "Windows.UI.Xaml.Media.DoubleCollection";
            _typeNameTable[34] = "Windows.UI.Xaml.Media.PenLineCap";
            _typeNameTable[35] = "Windows.UI.Xaml.Media.PenLineJoin";
            _typeNameTable[36] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[37] = "Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement";
            _typeNameTable[38] = "Syncfusion.UI.Xaml.Charts.CoordinateUnit";
            _typeNameTable[39] = "Windows.UI.Xaml.Media.FontFamily";
            _typeNameTable[40] = "Windows.UI.Text.FontStretch";
            _typeNameTable[41] = "Windows.UI.Text.FontStyle";
            _typeNameTable[42] = "Windows.UI.Text.FontWeight";
            _typeNameTable[43] = "Syncfusion.UI.Xaml.PivotChart.PivotChartAdornmentsInfo";
            _typeNameTable[44] = "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase";
            _typeNameTable[45] = "Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette";
            _typeNameTable[46] = "System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>";
            _typeNameTable[47] = "Syncfusion.UI.Xaml.PivotChart.PivotChartAxisStyle";
            _typeNameTable[48] = "Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle";
            _typeNameTable[49] = "TimeSpan";
            _typeNameTable[50] = "Syncfusion.UI.Xaml.PivotChart.PivotChartWatermark";
            _typeNameTable[51] = "Syncfusion.UI.Xaml.Charts.Watermark";
            _typeNameTable[52] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[53] = "Syncfusion.UI.Xaml.PivotChart.PivotChartZoomPanBehavior";
            _typeNameTable[54] = "Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior";
            _typeNameTable[55] = "Syncfusion.UI.Xaml.Charts.ChartBehavior";
            _typeNameTable[56] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>";
            _typeNameTable[57] = "System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>";
            _typeNameTable[58] = "Syncfusion.PivotAnalysis.UWP.PivotItem";
            _typeNameTable[59] = "System.Collections.IComparer";
            _typeNameTable[60] = "Syncfusion.Data.ListSortDirection";
            _typeNameTable[61] = "Syncfusion.PivotAnalysis.UWP.SummaryBase";
            _typeNameTable[62] = "Syncfusion.PivotAnalysis.UWP.SummaryType";
            _typeNameTable[63] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>";
            _typeNameTable[64] = "System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>";
            _typeNameTable[65] = "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo";
            _typeNameTable[66] = "Syncfusion.PivotAnalysis.UWP.CalculationType";
            _typeNameTable[67] = "Syncfusion.PivotAnalysis.UWP.DisplayOption";
            _typeNameTable[68] = "Syncfusion.PivotAnalysis.UWP.FilterExpression";
            _typeNameTable[69] = "Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel";
            _typeNameTable[70] = "Int32";
            _typeNameTable[71] = "Syncfusion.Olap.UWP.Reports.ChartAppearanceSettings";
            _typeNameTable[72] = "Syncfusion.UI.Xaml.PivotChart.PivotChartAxis";
            _typeNameTable[73] = "Syncfusion.UI.Xaml.Charts.NumericalAxis";
            _typeNameTable[74] = "Syncfusion.UI.Xaml.Charts.RangeAxisBase";
            _typeNameTable[75] = "Syncfusion.UI.Xaml.Charts.ChartAxisBase2D";
            _typeNameTable[76] = "Syncfusion.UI.Xaml.Charts.ChartAxis";
            _typeNameTable[77] = "Syncfusion.Olap.UWP.Reports.OlapReport";
            _typeNameTable[78] = "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator";
            _typeNameTable[79] = "Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes";
            _typeNameTable[80] = "Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode";
            _typeNameTable[81] = "BI.PivotChart.Adornments";
            _typeNameTable[82] = "BI.PivotChart.Annotations";
            _typeNameTable[83] = "BI.PivotChart.ChartTypes";
            _typeNameTable[84] = "BI.PivotChart.GettingStarted";
            _typeNameTable[85] = "BI.PivotChart.KPI";
            _typeNameTable[86] = "Syncfusion.UI.Xaml.Charts.ChartDock";
            _typeNameTable[87] = "Windows.UI.Xaml.TextWrapping";
            _typeNameTable[88] = "Syncfusion.UI.Xaml.Charts.ChartOrientation";
            _typeNameTable[89] = "Syncfusion.UI.Xaml.Charts.LegendPosition";
            _typeNameTable[90] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[91] = "Windows.UI.Xaml.CornerRadius";
            _typeNameTable[92] = "Syncfusion.UI.Xaml.Charts.ChartSeriesBase";
            _typeNameTable[93] = "BI.PivotChart.LegendCustomization";
            _typeNameTable[94] = "BI.PivotChart.Localization";
            _typeNameTable[95] = "BI.PivotChart.Serialization";
            _typeNameTable[96] = "BI.PivotChart.Relational";
            _typeNameTable[97] = "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper";
            _typeNameTable[98] = "Windows.UI.Xaml.Data.Binding";
            _typeNameTable[99] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>";

            _typeTable = new global::System.Type[100];
            _typeTable[0] = typeof(global::Windows.UI.Color);
            _typeTable[1] = typeof(global::System.ValueType);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Byte);
            _typeTable[4] = typeof(global::Common.SampleLayout);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[6] = typeof(global::System.String);
            _typeTable[7] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[8] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[9] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[10] = typeof(global::BI.PivotChart.Converter.CustomAdornmentConverter);
            _typeTable[11] = typeof(global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart);
            _typeTable[12] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartType);
            _typeTable[13] = typeof(global::System.Enum);
            _typeTable[14] = typeof(global::System.Boolean);
            _typeTable[15] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartLegend);
            _typeTable[16] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegend);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[18] = typeof(global::Syncfusion.Olap.UWP.Manager.OlapDataManager);
            _typeTable[19] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[20] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationCollection);
            _typeTable[21] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>);
            _typeTable[22] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>);
            _typeTable[23] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation);
            _typeTable[24] = typeof(global::Syncfusion.UI.Xaml.Charts.Annotation);
            _typeTable[25] = typeof(global::Windows.UI.Xaml.FrameworkElement);
            _typeTable[26] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType);
            _typeTable[27] = typeof(global::System.Double);
            _typeTable[28] = typeof(global::Windows.UI.Xaml.HorizontalAlignment);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.VerticalAlignment);
            _typeTable[30] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[31] = typeof(global::Syncfusion.UI.Xaml.Charts.LineCap);
            _typeTable[32] = typeof(global::Syncfusion.UI.Xaml.Charts.AxisMode);
            _typeTable[33] = typeof(global::Windows.UI.Xaml.Media.DoubleCollection);
            _typeTable[34] = typeof(global::Windows.UI.Xaml.Media.PenLineCap);
            _typeTable[35] = typeof(global::Windows.UI.Xaml.Media.PenLineJoin);
            _typeTable[36] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[37] = typeof(global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement);
            _typeTable[38] = typeof(global::Syncfusion.UI.Xaml.Charts.CoordinateUnit);
            _typeTable[39] = typeof(global::Windows.UI.Xaml.Media.FontFamily);
            _typeTable[40] = typeof(global::Windows.UI.Text.FontStretch);
            _typeTable[41] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[42] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[43] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartAdornmentsInfo);
            _typeTable[44] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase);
            _typeTable[45] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette);
            _typeTable[46] = typeof(global::System.Collections.Generic.List<global::Windows.UI.Xaml.Media.Brush>);
            _typeTable[47] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartAxisStyle);
            _typeTable[48] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle);
            _typeTable[49] = typeof(global::System.TimeSpan);
            _typeTable[50] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartWatermark);
            _typeTable[51] = typeof(global::Syncfusion.UI.Xaml.Charts.Watermark);
            _typeTable[52] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[53] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartZoomPanBehavior);
            _typeTable[54] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior);
            _typeTable[55] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartBehavior);
            _typeTable[56] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>);
            _typeTable[57] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>);
            _typeTable[58] = typeof(global::Syncfusion.PivotAnalysis.UWP.PivotItem);
            _typeTable[59] = typeof(global::System.Collections.IComparer);
            _typeTable[60] = typeof(global::Syncfusion.Data.ListSortDirection);
            _typeTable[61] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryBase);
            _typeTable[62] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryType);
            _typeTable[63] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>);
            _typeTable[64] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>);
            _typeTable[65] = typeof(global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo);
            _typeTable[66] = typeof(global::Syncfusion.PivotAnalysis.UWP.CalculationType);
            _typeTable[67] = typeof(global::Syncfusion.PivotAnalysis.UWP.DisplayOption);
            _typeTable[68] = typeof(global::Syncfusion.PivotAnalysis.UWP.FilterExpression);
            _typeTable[69] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel);
            _typeTable[70] = typeof(global::System.Int32);
            _typeTable[71] = typeof(global::Syncfusion.Olap.UWP.Reports.ChartAppearanceSettings);
            _typeTable[72] = typeof(global::Syncfusion.UI.Xaml.PivotChart.PivotChartAxis);
            _typeTable[73] = typeof(global::Syncfusion.UI.Xaml.Charts.NumericalAxis);
            _typeTable[74] = typeof(global::Syncfusion.UI.Xaml.Charts.RangeAxisBase);
            _typeTable[75] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxisBase2D);
            _typeTable[76] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxis);
            _typeTable[77] = typeof(global::Syncfusion.Olap.UWP.Reports.OlapReport);
            _typeTable[78] = typeof(global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator);
            _typeTable[79] = typeof(global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes);
            _typeTable[80] = typeof(global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode);
            _typeTable[81] = typeof(global::BI.PivotChart.Adornments);
            _typeTable[82] = typeof(global::BI.PivotChart.Annotations);
            _typeTable[83] = typeof(global::BI.PivotChart.ChartTypes);
            _typeTable[84] = typeof(global::BI.PivotChart.GettingStarted);
            _typeTable[85] = typeof(global::BI.PivotChart.KPI);
            _typeTable[86] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartDock);
            _typeTable[87] = typeof(global::Windows.UI.Xaml.TextWrapping);
            _typeTable[88] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartOrientation);
            _typeTable[89] = typeof(global::Syncfusion.UI.Xaml.Charts.LegendPosition);
            _typeTable[90] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[91] = typeof(global::Windows.UI.Xaml.CornerRadius);
            _typeTable[92] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase);
            _typeTable[93] = typeof(global::BI.PivotChart.LegendCustomization);
            _typeTable[94] = typeof(global::BI.PivotChart.Localization);
            _typeTable[95] = typeof(global::BI.PivotChart.Serialization);
            _typeTable[96] = typeof(global::BI.PivotChart.Relational);
            _typeTable[97] = typeof(global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper);
            _typeTable[98] = typeof(global::Windows.UI.Xaml.Data.Binding);
            _typeTable[99] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_4_SampleLayout() { return new global::Common.SampleLayout(); }
        private object Activate_10_CustomAdornmentConverter() { return new global::BI.PivotChart.Converter.CustomAdornmentConverter(); }
        private object Activate_11_SfPivotChart() { return new global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart(); }
        private object Activate_15_PivotChartLegend() { return new global::Syncfusion.UI.Xaml.PivotChart.PivotChartLegend(); }
        private object Activate_16_ChartLegend() { return new global::Syncfusion.UI.Xaml.Charts.ChartLegend(); }
        private object Activate_18_OlapDataManager() { return new global::Syncfusion.Olap.UWP.Manager.OlapDataManager(); }
        private object Activate_20_PivotChartAnnotationCollection() { return new global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationCollection(); }
        private object Activate_21_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>(); }
        private object Activate_22_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>(); }
        private object Activate_23_PivotChartAnnotation() { return new global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation(); }
        private object Activate_43_PivotChartAdornmentsInfo() { return new global::Syncfusion.UI.Xaml.PivotChart.PivotChartAdornmentsInfo(); }
        private object Activate_46_List() { return new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Media.Brush>(); }
        private object Activate_47_PivotChartAxisStyle() { return new global::Syncfusion.UI.Xaml.PivotChart.PivotChartAxisStyle(); }
        private object Activate_50_PivotChartWatermark() { return new global::Syncfusion.UI.Xaml.PivotChart.PivotChartWatermark(); }
        private object Activate_51_Watermark() { return new global::Syncfusion.UI.Xaml.Charts.Watermark(); }
        private object Activate_53_PivotChartZoomPanBehavior() { return new global::Syncfusion.UI.Xaml.PivotChart.PivotChartZoomPanBehavior(); }
        private object Activate_54_ChartZoomPanBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior(); }
        private object Activate_56_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>(); }
        private object Activate_57_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>(); }
        private object Activate_58_PivotItem() { return new global::Syncfusion.PivotAnalysis.UWP.PivotItem(); }
        private object Activate_63_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>(); }
        private object Activate_64_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>(); }
        private object Activate_65_PivotComputationInfo() { return new global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo(); }
        private object Activate_68_FilterExpression() { return new global::Syncfusion.PivotAnalysis.UWP.FilterExpression(); }
        private object Activate_71_ChartAppearanceSettings() { return new global::Syncfusion.Olap.UWP.Reports.ChartAppearanceSettings(); }
        private object Activate_72_PivotChartAxis() { return new global::Syncfusion.UI.Xaml.PivotChart.PivotChartAxis(); }
        private object Activate_73_NumericalAxis() { return new global::Syncfusion.UI.Xaml.Charts.NumericalAxis(); }
        private object Activate_77_OlapReport() { return new global::Syncfusion.Olap.UWP.Reports.OlapReport(); }
        private object Activate_78_SfBusyIndicator() { return new global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator(); }
        private object Activate_81_Adornments() { return new global::BI.PivotChart.Adornments(); }
        private object Activate_82_Annotations() { return new global::BI.PivotChart.Annotations(); }
        private object Activate_83_ChartTypes() { return new global::BI.PivotChart.ChartTypes(); }
        private object Activate_84_GettingStarted() { return new global::BI.PivotChart.GettingStarted(); }
        private object Activate_85_KPI() { return new global::BI.PivotChart.KPI(); }
        private object Activate_93_LegendCustomization() { return new global::BI.PivotChart.LegendCustomization(); }
        private object Activate_94_Localization() { return new global::BI.PivotChart.Localization(); }
        private object Activate_95_Serialization() { return new global::BI.PivotChart.Serialization(); }
        private object Activate_96_Relational() { return new global::BI.PivotChart.Relational(); }
        private object Activate_97_SetterValueBindingHelper() { return new global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper(); }
        private object Activate_99_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>(); }
        private void VectorAdd_20_PivotChartAnnotationCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)item;
            collection.Add(newItem);
        }
        private void VectorAdd_21_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)item;
            collection.Add(newItem);
        }
        private void VectorAdd_22_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)item;
            collection.Add(newItem);
        }
        private void VectorAdd_46_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Brush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.Brush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_56_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_57_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_63_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_64_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_99_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Windows.UI.Color
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 1:   //  System.ValueType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 2:   //  Object
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Byte
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 4:   //  Common.SampleLayout
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_4_SampleLayout;
                userType.AddMemberName("Header");
                userType.AddMemberName("Sample");
                userType.AddMemberName("Setting");
                userType.AddMemberName("OptionVisibility");
                userType.AddMemberName("FontIcons");
                userType.AddMemberName("Pathstring");
                userType.AddMemberName("ClickCommand");
                xamlType = userType;
                break;

            case 5:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  String
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  System.Windows.Input.ICommand
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  BI.PivotChart.Converter.CustomAdornmentConverter
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_CustomAdornmentConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  Syncfusion.UI.Xaml.PivotChart.SfPivotChart
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_11_SfPivotChart;
                userType.AddMemberName("ChartType");
                userType.AddMemberName("ShowToolTip");
                userType.AddMemberName("Legend");
                userType.AddMemberName("OlapDataManager");
                userType.AddMemberName("Annotations");
                userType.AddMemberName("AdornmentsInfo");
                userType.AddMemberName("ColorPalette");
                userType.AddMemberName("CustomBrushes");
                userType.AddMemberName("PrimaryAxisStyle");
                userType.AddMemberName("SecondaryAxisStyle");
                userType.AddMemberName("ChartVisualStyle");
                userType.AddMemberName("ShowProcessingBar");
                userType.AddMemberName("EnableAnimation");
                userType.AddMemberName("AnimationDuration");
                userType.AddMemberName("Watermark");
                userType.AddMemberName("ToolTipTemplate");
                userType.AddMemberName("ZoomPanBehavior");
                userType.AddMemberName("ItemSource");
                userType.AddMemberName("PivotAxis");
                userType.AddMemberName("PivotEngine");
                userType.AddMemberName("PivotLegend");
                userType.AddMemberName("PivotCalculations");
                userType.AddMemberName("EnableAutoExecute");
                userType.AddMemberName("ScatterWidth");
                userType.AddMemberName("ScatterHeight");
                userType.AddMemberName("EnableAntiAliasing");
                userType.AddMemberName("ChartAppearance");
                userType.AddMemberName("PrimaryAxis");
                userType.AddMemberName("SecondaryAxis");
                userType.AddMemberName("CurrentReport");
                xamlType = userType;
                break;

            case 12:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Column", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.Column);
                userType.AddEnumValue("StackingColumn", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.StackingColumn);
                userType.AddEnumValue("StackingColumn100", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.StackingColumn100);
                userType.AddEnumValue("Bar", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.Bar);
                userType.AddEnumValue("StackingBar", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.StackingBar);
                userType.AddEnumValue("StackingBar100", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.StackingBar100);
                userType.AddEnumValue("Line", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.Line);
                userType.AddEnumValue("Spline", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.Spline);
                userType.AddEnumValue("StepLine", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.StepLine);
                userType.AddEnumValue("Area", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.Area);
                userType.AddEnumValue("StackingArea", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.StackingArea);
                userType.AddEnumValue("SplineArea", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.SplineArea);
                userType.AddEnumValue("StepArea", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.StepArea);
                userType.AddEnumValue("Scatter", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.Scatter);
                userType.AddEnumValue("Pie", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.Pie);
                userType.AddEnumValue("FastColumnBitmap", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.FastColumnBitmap);
                userType.AddEnumValue("FastBarBitmap", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.FastBarBitmap);
                userType.AddEnumValue("FastLine", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.FastLine);
                userType.AddEnumValue("FastLineBitmap", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.FastLineBitmap);
                userType.AddEnumValue("FastStepLineBitmap", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.FastStepLineBitmap);
                userType.AddEnumValue("FastScatterBitmap", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.FastScatterBitmap);
                userType.AddEnumValue("FastStackingColumnBitmap", global::Syncfusion.UI.Xaml.PivotChart.PivotChartType.FastStackingColumnBitmap);
                xamlType = userType;
                break;

            case 13:   //  System.Enum
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 14:   //  Boolean
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartLegend
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend"));
                userType.Activator = Activate_15_PivotChartLegend;
                userType.AddMemberName("ColumnCount");
                userType.AddMemberName("RowCount");
                userType.AddMemberName("TextOverflow");
                userType.AddMemberName("Orientation");
                xamlType = userType;
                break;

            case 16:   //  Syncfusion.UI.Xaml.Charts.ChartLegend
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_16_ChartLegend;
                userType.AddMemberName("DockPosition");
                userType.AddMemberName("LegendPosition");
                userType.AddMemberName("ItemMargin");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("CornerRadius");
                userType.AddMemberName("CheckBoxVisibility");
                userType.AddMemberName("ToggleSeriesVisibility");
                userType.AddMemberName("IconVisibility");
                userType.AddMemberName("IconWidth");
                userType.AddMemberName("IconHeight");
                userType.AddMemberName("OffsetX");
                userType.AddMemberName("Series");
                userType.AddMemberName("OffsetY");
                xamlType = userType;
                break;

            case 17:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Syncfusion.Olap.UWP.Manager.OlapDataManager
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationCollection
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>"));
                userType.Activator = Activate_20_PivotChartAnnotationCollection;
                userType.CollectionAdd = VectorAdd_20_PivotChartAnnotationCollection;
                xamlType = userType;
                break;

            case 21:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>"));
                userType.Activator = Activate_21_ObservableCollection;
                userType.CollectionAdd = VectorAdd_21_ObservableCollection;
                xamlType = userType;
                break;

            case 22:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_22_Collection;
                userType.CollectionAdd = VectorAdd_22_Collection;
                userType.AddMemberName("Count");
                xamlType = userType;
                break;

            case 23:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation"));
                userType.Activator = Activate_23_PivotChartAnnotation;
                userType.AddMemberName("AnnotationType");
                userType.AddMemberName("X2");
                userType.AddMemberName("Y2");
                userType.AddMemberName("Angle");
                userType.AddMemberName("StrokeDashOffset");
                userType.AddMemberName("StrokeMiterLimit");
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("ImageSource");
                userType.AddMemberName("HorizontalTextAlignment");
                userType.AddMemberName("VerticalTextAlignment");
                userType.AddMemberName("Fill");
                userType.AddMemberName("Stroke");
                userType.AddMemberName("CanResize");
                userType.AddMemberName("ShowAxisLabel");
                userType.AddMemberName("ShowLine");
                userType.AddMemberName("LineCap");
                userType.AddMemberName("DraggingMode");
                userType.AddMemberName("ResizingMode");
                userType.AddMemberName("StrokeDashArray");
                userType.AddMemberName("StrokeDashCap");
                userType.AddMemberName("StrokeStartLineCap");
                userType.AddMemberName("StrokeEndLineCap");
                userType.AddMemberName("StrokeLineJoin");
                userType.AddMemberName("AxisLabelTemplate");
                xamlType = userType;
                break;

            case 24:   //  Syncfusion.UI.Xaml.Charts.Annotation
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.FrameworkElement"));
                userType.AddMemberName("Text");
                userType.AddMemberName("EnableEditing");
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("EnableClipping");
                userType.AddMemberName("ShowToolTip");
                userType.AddMemberName("ToolTipContent");
                userType.AddMemberName("ToolTipShowDuration");
                userType.AddMemberName("ToolTipTemplate");
                userType.AddMemberName("ToolTipPlacement");
                userType.AddMemberName("CoordinateUnit");
                userType.AddMemberName("XAxisName");
                userType.AddMemberName("YAxisName");
                userType.AddMemberName("X1");
                userType.AddMemberName("Y1");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontStretch");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("Foreground");
                xamlType = userType;
                break;

            case 25:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("TextAnnotation", global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType.TextAnnotation);
                userType.AddEnumValue("ImageAnnotation", global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType.ImageAnnotation);
                userType.AddEnumValue("RectangleAnnotation", global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType.RectangleAnnotation);
                userType.AddEnumValue("EllipseAnnotation", global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType.EllipseAnnotation);
                userType.AddEnumValue("LineAnnotation", global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType.LineAnnotation);
                userType.AddEnumValue("HorizontalLineAnnotation", global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType.HorizontalLineAnnotation);
                userType.AddEnumValue("VerticalLineAnnotation", global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType.VerticalLineAnnotation);
                xamlType = userType;
                break;

            case 27:   //  Double
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  Windows.UI.Xaml.HorizontalAlignment
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  Windows.UI.Xaml.VerticalAlignment
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  Syncfusion.UI.Xaml.Charts.LineCap
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.LineCap.None);
                userType.AddEnumValue("Arrow", global::Syncfusion.UI.Xaml.Charts.LineCap.Arrow);
                xamlType = userType;
                break;

            case 32:   //  Syncfusion.UI.Xaml.Charts.AxisMode
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Horizontal", global::Syncfusion.UI.Xaml.Charts.AxisMode.Horizontal);
                userType.AddEnumValue("Vertical", global::Syncfusion.UI.Xaml.Charts.AxisMode.Vertical);
                userType.AddEnumValue("All", global::Syncfusion.UI.Xaml.Charts.AxisMode.All);
                xamlType = userType;
                break;

            case 33:   //  Windows.UI.Xaml.Media.DoubleCollection
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 34:   //  Windows.UI.Xaml.Media.PenLineCap
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  Windows.UI.Xaml.Media.PenLineJoin
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Left);
                userType.AddEnumValue("Right", global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Right);
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Top);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Bottom);
                xamlType = userType;
                break;

            case 38:   //  Syncfusion.UI.Xaml.Charts.CoordinateUnit
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Pixel", global::Syncfusion.UI.Xaml.Charts.CoordinateUnit.Pixel);
                userType.AddEnumValue("Axis", global::Syncfusion.UI.Xaml.Charts.CoordinateUnit.Axis);
                xamlType = userType;
                break;

            case 39:   //  Windows.UI.Xaml.Media.FontFamily
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  Windows.UI.Text.FontStretch
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Undefined", global::Windows.UI.Text.FontStretch.Undefined);
                userType.AddEnumValue("UltraCondensed", global::Windows.UI.Text.FontStretch.UltraCondensed);
                userType.AddEnumValue("ExtraCondensed", global::Windows.UI.Text.FontStretch.ExtraCondensed);
                userType.AddEnumValue("Condensed", global::Windows.UI.Text.FontStretch.Condensed);
                userType.AddEnumValue("SemiCondensed", global::Windows.UI.Text.FontStretch.SemiCondensed);
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStretch.Normal);
                userType.AddEnumValue("SemiExpanded", global::Windows.UI.Text.FontStretch.SemiExpanded);
                userType.AddEnumValue("Expanded", global::Windows.UI.Text.FontStretch.Expanded);
                userType.AddEnumValue("ExtraExpanded", global::Windows.UI.Text.FontStretch.ExtraExpanded);
                userType.AddEnumValue("UltraExpanded", global::Windows.UI.Text.FontStretch.UltraExpanded);
                xamlType = userType;
                break;

            case 41:   //  Windows.UI.Text.FontStyle
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 42:   //  Windows.UI.Text.FontWeight
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 43:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartAdornmentsInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 44:   //  Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 45:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.None);
                userType.AddEnumValue("Metro", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.Metro);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.Custom);
                userType.AddEnumValue("AutumnBrights", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.AutumnBrights);
                userType.AddEnumValue("FloraHues", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.FloraHues);
                userType.AddEnumValue("Pineapple", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.Pineapple);
                userType.AddEnumValue("TomatoSpectrum", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.TomatoSpectrum);
                userType.AddEnumValue("RedChrome", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.RedChrome);
                userType.AddEnumValue("PurpleChrome", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.PurpleChrome);
                userType.AddEnumValue("BlueChrome", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.BlueChrome);
                userType.AddEnumValue("GreenChrome", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.GreenChrome);
                userType.AddEnumValue("Elite", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.Elite);
                userType.AddEnumValue("SandyBeach", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.SandyBeach);
                userType.AddEnumValue("LightCandy", global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette.LightCandy);
                xamlType = userType;
                break;

            case 46:   //  System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_46_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 47:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartAxisStyle
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 48:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Blend", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Blend);
                userType.AddEnumValue("Lime", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Lime);
                userType.AddEnumValue("Metro", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Metro);
                userType.AddEnumValue("Office2010Black", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Office2010Black);
                userType.AddEnumValue("Office2010Blue", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Office2010Blue);
                userType.AddEnumValue("Office2010Silver", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Office2010Silver);
                userType.AddEnumValue("Office2013DarkGray", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Office2013DarkGray);
                userType.AddEnumValue("Office2013LightGray", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Office2013LightGray);
                userType.AddEnumValue("Office2013White", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Office2013White);
                userType.AddEnumValue("Office2016Colorful", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Office2016Colorful);
                userType.AddEnumValue("Office2016DarkGray", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Office2016DarkGray);
                userType.AddEnumValue("Office2016White", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Office2016White);
                userType.AddEnumValue("Office365", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Office365);
                userType.AddEnumValue("Saffron", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.Saffron);
                userType.AddEnumValue("VisualStudio2013", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.VisualStudio2013);
                userType.AddEnumValue("VisualStudio2015", global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle.VisualStudio2015);
                xamlType = userType;
                break;

            case 49:   //  TimeSpan
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 50:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartWatermark
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Watermark"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 51:   //  Syncfusion.UI.Xaml.Charts.Watermark
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_51_Watermark;
                xamlType = userType;
                break;

            case 52:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 53:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartZoomPanBehavior
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 54:   //  Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.Activator = Activate_54_ChartZoomPanBehavior;
                xamlType = userType;
                break;

            case 55:   //  Syncfusion.UI.Xaml.Charts.ChartBehavior
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 56:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>"));
                userType.CollectionAdd = VectorAdd_56_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_57_Collection;
                userType.CollectionAdd = VectorAdd_57_Collection;
                xamlType = userType;
                break;

            case 58:   //  Syncfusion.PivotAnalysis.UWP.PivotItem
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_58_PivotItem;
                userType.AddMemberName("AllowFilter");
                userType.AddMemberName("AllowRunTimeGroupByField");
                userType.AddMemberName("AllowSort");
                userType.AddMemberName("Comparer");
                userType.AddMemberName("EnableHyperlinks");
                userType.AddMemberName("FieldCaption");
                userType.AddMemberName("FieldHeader");
                userType.AddMemberName("FieldMappingName");
                userType.AddMemberName("Format");
                userType.AddMemberName("ShowSubTotal");
                userType.AddMemberName("SortDirection");
                userType.AddMemberName("Summary");
                userType.AddMemberName("SummaryType");
                userType.AddMemberName("TotalHeader");
                userType.AddMemberName("Width");
                xamlType = userType;
                break;

            case 59:   //  System.Collections.IComparer
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 60:   //  Syncfusion.Data.ListSortDirection
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ascending", global::Syncfusion.Data.ListSortDirection.Ascending);
                userType.AddEnumValue("Descending", global::Syncfusion.Data.ListSortDirection.Descending);
                xamlType = userType;
                break;

            case 61:   //  Syncfusion.PivotAnalysis.UWP.SummaryBase
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 62:   //  Syncfusion.PivotAnalysis.UWP.SummaryType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("DoubleTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleTotalSum);
                userType.AddEnumValue("DoubleAverage", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleAverage);
                userType.AddEnumValue("DoubleMaximum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleMaximum);
                userType.AddEnumValue("DoubleMinimum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleMinimum);
                userType.AddEnumValue("DoubleStandardDeviation", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleStandardDeviation);
                userType.AddEnumValue("DoubleVariance", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleVariance);
                userType.AddEnumValue("Count", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Count);
                userType.AddEnumValue("DecimalTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DecimalTotalSum);
                userType.AddEnumValue("IntTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.IntTotalSum);
                userType.AddEnumValue("Custom", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Custom);
                userType.AddEnumValue("DisplayIfDiscreteValuesEqual", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DisplayIfDiscreteValuesEqual);
                userType.AddEnumValue("Sum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Sum);
                userType.AddEnumValue("Average", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Average);
                userType.AddEnumValue("Max", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Max);
                userType.AddEnumValue("Min", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Min);
                userType.AddEnumValue("CountNumbers", global::Syncfusion.PivotAnalysis.UWP.SummaryType.CountNumbers);
                userType.AddEnumValue("StdDev", global::Syncfusion.PivotAnalysis.UWP.SummaryType.StdDev);
                userType.AddEnumValue("StdDevP", global::Syncfusion.PivotAnalysis.UWP.SummaryType.StdDevP);
                userType.AddEnumValue("Var", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Var);
                userType.AddEnumValue("VarP", global::Syncfusion.PivotAnalysis.UWP.SummaryType.VarP);
                xamlType = userType;
                break;

            case 63:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>"));
                userType.CollectionAdd = VectorAdd_63_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 64:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_64_Collection;
                userType.CollectionAdd = VectorAdd_64_Collection;
                xamlType = userType;
                break;

            case 65:   //  Syncfusion.PivotAnalysis.UWP.PivotComputationInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_65_PivotComputationInfo;
                userType.AddMemberName("AllowFilter");
                userType.AddMemberName("AllowRunTimeGroupByField");
                userType.AddMemberName("AllowSort");
                userType.AddMemberName("BaseField");
                userType.AddMemberName("BaseItem");
                userType.AddMemberName("FieldType");
                userType.AddMemberName("CalculationName");
                userType.AddMemberName("CalculationType");
                userType.AddMemberName("DefaultValue");
                userType.AddMemberName("Description");
                userType.AddMemberName("DisplayOption");
                userType.AddMemberName("EnableHyperlinks");
                userType.AddMemberName("Expression");
                userType.AddMemberName("FieldCaption");
                userType.AddMemberName("FieldHeader");
                userType.AddMemberName("FieldName");
                userType.AddMemberName("Format");
                userType.AddMemberName("Formula");
                userType.AddMemberName("InnerMostComputationsOnly");
                userType.AddMemberName("IsTopColumnSummary");
                userType.AddMemberName("PadString");
                userType.AddMemberName("Summary");
                userType.AddMemberName("SummaryType");
                xamlType = userType;
                break;

            case 66:   //  Syncfusion.PivotAnalysis.UWP.CalculationType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("NoCalculation", global::Syncfusion.PivotAnalysis.UWP.CalculationType.NoCalculation);
                userType.AddEnumValue("PercentageOfGrandTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfGrandTotal);
                userType.AddEnumValue("PercentageOfColumnTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfColumnTotal);
                userType.AddEnumValue("PercentageOfRowTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfRowTotal);
                userType.AddEnumValue("PercentageOfParentColumnTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentColumnTotal);
                userType.AddEnumValue("PercentageOfParentRowTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentRowTotal);
                userType.AddEnumValue("PercentageOfParentTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentTotal);
                userType.AddEnumValue("Index", global::Syncfusion.PivotAnalysis.UWP.CalculationType.Index);
                userType.AddEnumValue("Formula", global::Syncfusion.PivotAnalysis.UWP.CalculationType.Formula);
                userType.AddEnumValue("PercentageOf", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOf);
                userType.AddEnumValue("DifferenceFrom", global::Syncfusion.PivotAnalysis.UWP.CalculationType.DifferenceFrom);
                userType.AddEnumValue("PercentageOfDifferenceFrom", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfDifferenceFrom);
                userType.AddEnumValue("RunningTotalIn", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RunningTotalIn);
                userType.AddEnumValue("PercentageOfRunningTotalIn", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfRunningTotalIn);
                userType.AddEnumValue("RankSmallestToLargest", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RankSmallestToLargest);
                userType.AddEnumValue("RankLargestToSmallest", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RankLargestToSmallest);
                xamlType = userType;
                break;

            case 67:   //  Syncfusion.PivotAnalysis.UWP.DisplayOption
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.None);
                userType.AddEnumValue("Calculations", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.Calculations);
                userType.AddEnumValue("Summary", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.Summary);
                userType.AddEnumValue("GrandTotals", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.GrandTotals);
                userType.AddEnumValue("All", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.All);
                xamlType = userType;
                break;

            case 68:   //  Syncfusion.PivotAnalysis.UWP.FilterExpression
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 69:   //  Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("All", global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel.All);
                userType.AddEnumValue("InnerMostOnly", global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel.InnerMostOnly);
                xamlType = userType;
                break;

            case 70:   //  Int32
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 71:   //  Syncfusion.Olap.UWP.Reports.ChartAppearanceSettings
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 72:   //  Syncfusion.UI.Xaml.PivotChart.PivotChartAxis
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 73:   //  Syncfusion.UI.Xaml.Charts.NumericalAxis
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase"));
                userType.Activator = Activate_73_NumericalAxis;
                xamlType = userType;
                break;

            case 74:   //  Syncfusion.UI.Xaml.Charts.RangeAxisBase
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxisBase2D"));
                xamlType = userType;
                break;

            case 75:   //  Syncfusion.UI.Xaml.Charts.ChartAxisBase2D
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis"));
                xamlType = userType;
                break;

            case 76:   //  Syncfusion.UI.Xaml.Charts.ChartAxis
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                xamlType = userType;
                break;

            case 77:   //  Syncfusion.Olap.UWP.Reports.OlapReport
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 78:   //  Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_78_SfBusyIndicator;
                userType.AddMemberName("AnimationType");
                userType.AddMemberName("IsBusy");
                userType.AddMemberName("ViewboxHeight");
                userType.AddMemberName("ViewboxWidth");
                userType.AddMemberName("AnimationSpeed");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("HeaderPlacementMode");
                xamlType = userType;
                break;

            case 79:   //  Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("BarChart", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.BarChart);
                userType.AddEnumValue("Message", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Message);
                userType.AddEnumValue("DoubleRing", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DoubleRing);
                userType.AddEnumValue("DualRing", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DualRing);
                userType.AddEnumValue("Ripple", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Ripple);
                userType.AddEnumValue("DotCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DotCircle);
                userType.AddEnumValue("Cupertino", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Cupertino);
                userType.AddEnumValue("Flower", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Flower);
                userType.AddEnumValue("Gear", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Gear);
                userType.AddEnumValue("Liquid", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Liquid);
                userType.AddEnumValue("Box", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Box);
                userType.AddEnumValue("HorizontalPulsingBox", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.HorizontalPulsingBox);
                userType.AddEnumValue("Rotation", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Rotation);
                userType.AddEnumValue("SliceBox", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.SliceBox);
                userType.AddEnumValue("DoubleCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DoubleCircle);
                userType.AddEnumValue("Drop", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Drop);
                userType.AddEnumValue("Ball", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Ball);
                userType.AddEnumValue("Delete", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Delete);
                userType.AddEnumValue("Sunny", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Sunny);
                userType.AddEnumValue("ECG", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.ECG);
                userType.AddEnumValue("GPS", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.GPS);
                userType.AddEnumValue("Pen", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Pen);
                userType.AddEnumValue("Globe", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Globe);
                userType.AddEnumValue("Print", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Print);
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Rectangle);
                userType.AddEnumValue("ArrowTrack", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.ArrowTrack);
                userType.AddEnumValue("Temperature", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Temperature);
                userType.AddEnumValue("Umbrella", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Umbrella);
                userType.AddEnumValue("Battery", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Battery);
                userType.AddEnumValue("Windmill", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Windmill);
                userType.AddEnumValue("Rainy", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Rainy);
                userType.AddEnumValue("Snow", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Snow);
                userType.AddEnumValue("Flight", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Flight);
                userType.AddEnumValue("Bulb", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Bulb);
                userType.AddEnumValue("Sunrise", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Sunrise);
                userType.AddEnumValue("Thunder", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Thunder);
                userType.AddEnumValue("SingleCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.SingleCircle);
                userType.AddEnumValue("SlicedCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.SlicedCircle);
                xamlType = userType;
                break;

            case 80:   //  Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode.Top);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode.Bottom);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode.None);
                xamlType = userType;
                break;

            case 81:   //  BI.PivotChart.Adornments
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_81_Adornments;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 82:   //  BI.PivotChart.Annotations
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_82_Annotations;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 83:   //  BI.PivotChart.ChartTypes
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_83_ChartTypes;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 84:   //  BI.PivotChart.GettingStarted
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_84_GettingStarted;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 85:   //  BI.PivotChart.KPI
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_85_KPI;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 86:   //  Syncfusion.UI.Xaml.Charts.ChartDock
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Syncfusion.UI.Xaml.Charts.ChartDock.Left);
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Charts.ChartDock.Top);
                userType.AddEnumValue("Right", global::Syncfusion.UI.Xaml.Charts.ChartDock.Right);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Charts.ChartDock.Bottom);
                userType.AddEnumValue("Floating", global::Syncfusion.UI.Xaml.Charts.ChartDock.Floating);
                xamlType = userType;
                break;

            case 87:   //  Windows.UI.Xaml.TextWrapping
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 88:   //  Syncfusion.UI.Xaml.Charts.ChartOrientation
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Charts.ChartOrientation.Default);
                userType.AddEnumValue("Horizontal", global::Syncfusion.UI.Xaml.Charts.ChartOrientation.Horizontal);
                userType.AddEnumValue("Vertical", global::Syncfusion.UI.Xaml.Charts.ChartOrientation.Vertical);
                xamlType = userType;
                break;

            case 89:   //  Syncfusion.UI.Xaml.Charts.LegendPosition
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Inside", global::Syncfusion.UI.Xaml.Charts.LegendPosition.Inside);
                userType.AddEnumValue("Outside", global::Syncfusion.UI.Xaml.Charts.LegendPosition.Outside);
                xamlType = userType;
                break;

            case 90:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 91:   //  Windows.UI.Xaml.CornerRadius
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 92:   //  Syncfusion.UI.Xaml.Charts.ChartSeriesBase
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 93:   //  BI.PivotChart.LegendCustomization
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_93_LegendCustomization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 94:   //  BI.PivotChart.Localization
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_94_Localization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 95:   //  BI.PivotChart.Serialization
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_95_Serialization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 96:   //  BI.PivotChart.Relational
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_96_Relational;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 97:   //  Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_97_SetterValueBindingHelper;
                userType.AddMemberName("Type");
                userType.AddMemberName("Property");
                userType.AddMemberName("Binding");
                userType.AddMemberName("Values");
                userType.AddMemberName("PropertyBinding");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 98:   //  Windows.UI.Xaml.Data.Binding
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 99:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_99_Collection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Common_2015.Syncfusion_SampleBrowser_UWP_Common_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfGantt.UWP.Syncfusion_SfGantt_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfImageEditor.UWP.Syncfusion_SfImageEditor_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfSmithChart.UWP.Syncfusion_SfSmithChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_0_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_1_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_1_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_2_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_2_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_3_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_3_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_4_SampleLayout_Header(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Header;
        }
        private void set_4_SampleLayout_Header(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Header = (global::System.String)Value;
        }
        private object get_5_SampleLayout_Sample(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Sample;
        }
        private void set_5_SampleLayout_Sample(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Sample = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_6_SampleLayout_Setting(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Setting;
        }
        private void set_6_SampleLayout_Setting(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Setting = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_7_SampleLayout_OptionVisibility(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.OptionVisibility;
        }
        private void set_7_SampleLayout_OptionVisibility(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.OptionVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_8_SampleLayout_FontIcons(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.FontIcons;
        }
        private void set_8_SampleLayout_FontIcons(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.FontIcons = (global::System.String)Value;
        }
        private object get_9_SampleLayout_Pathstring(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Pathstring;
        }
        private void set_9_SampleLayout_Pathstring(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Pathstring = (global::System.String)Value;
        }
        private object get_10_SampleLayout_ClickCommand(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.ClickCommand;
        }
        private object get_11_SfPivotChart_ChartType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.ChartType;
        }
        private void set_11_SfPivotChart_ChartType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.ChartType = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartType)Value;
        }
        private object get_12_SfPivotChart_ShowToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.ShowToolTip;
        }
        private void set_12_SfPivotChart_ShowToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.ShowToolTip = (global::System.Boolean)Value;
        }
        private object get_13_SfPivotChart_Legend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.Legend;
        }
        private void set_13_SfPivotChart_Legend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.Legend = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartLegend)Value;
        }
        private object get_14_SfPivotChart_OlapDataManager(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.OlapDataManager;
        }
        private void set_14_SfPivotChart_OlapDataManager(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.OlapDataManager = (global::Syncfusion.Olap.UWP.Manager.OlapDataManager)Value;
        }
        private object get_15_SfPivotChart_Annotations(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.Annotations;
        }
        private void set_15_SfPivotChart_Annotations(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.Annotations = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationCollection)Value;
        }
        private object get_16_PivotChartAnnotation_AnnotationType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.AnnotationType;
        }
        private void set_16_PivotChartAnnotation_AnnotationType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.AnnotationType = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType)Value;
        }
        private object get_17_PivotChartAnnotation_X2(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.X2;
        }
        private void set_17_PivotChartAnnotation_X2(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.X2 = (global::System.Double)Value;
        }
        private object get_18_PivotChartAnnotation_Y2(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.Y2;
        }
        private void set_18_PivotChartAnnotation_Y2(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.Y2 = (global::System.Double)Value;
        }
        private object get_19_PivotChartAnnotation_Angle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.Angle;
        }
        private void set_19_PivotChartAnnotation_Angle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.Angle = (global::System.Double)Value;
        }
        private object get_20_PivotChartAnnotation_StrokeDashOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.StrokeDashOffset;
        }
        private void set_20_PivotChartAnnotation_StrokeDashOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.StrokeDashOffset = (global::System.Double)Value;
        }
        private object get_21_PivotChartAnnotation_StrokeMiterLimit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.StrokeMiterLimit;
        }
        private void set_21_PivotChartAnnotation_StrokeMiterLimit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.StrokeMiterLimit = (global::System.Double)Value;
        }
        private object get_22_PivotChartAnnotation_StrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.StrokeThickness;
        }
        private void set_22_PivotChartAnnotation_StrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_23_PivotChartAnnotation_ImageSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.ImageSource;
        }
        private void set_23_PivotChartAnnotation_ImageSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.ImageSource = (global::System.String)Value;
        }
        private object get_24_PivotChartAnnotation_HorizontalTextAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.HorizontalTextAlignment;
        }
        private void set_24_PivotChartAnnotation_HorizontalTextAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.HorizontalTextAlignment = (global::Windows.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_25_PivotChartAnnotation_VerticalTextAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.VerticalTextAlignment;
        }
        private void set_25_PivotChartAnnotation_VerticalTextAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.VerticalTextAlignment = (global::Windows.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_26_PivotChartAnnotation_Fill(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.Fill;
        }
        private void set_26_PivotChartAnnotation_Fill(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.Fill = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_27_PivotChartAnnotation_Stroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.Stroke;
        }
        private void set_27_PivotChartAnnotation_Stroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_28_PivotChartAnnotation_CanResize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.CanResize;
        }
        private void set_28_PivotChartAnnotation_CanResize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.CanResize = (global::System.Boolean)Value;
        }
        private object get_29_PivotChartAnnotation_ShowAxisLabel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.ShowAxisLabel;
        }
        private void set_29_PivotChartAnnotation_ShowAxisLabel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.ShowAxisLabel = (global::System.Boolean)Value;
        }
        private object get_30_PivotChartAnnotation_ShowLine(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.ShowLine;
        }
        private void set_30_PivotChartAnnotation_ShowLine(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.ShowLine = (global::System.Boolean)Value;
        }
        private object get_31_PivotChartAnnotation_LineCap(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.LineCap;
        }
        private void set_31_PivotChartAnnotation_LineCap(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.LineCap = (global::Syncfusion.UI.Xaml.Charts.LineCap)Value;
        }
        private object get_32_PivotChartAnnotation_DraggingMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.DraggingMode;
        }
        private void set_32_PivotChartAnnotation_DraggingMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.DraggingMode = (global::Syncfusion.UI.Xaml.Charts.AxisMode)Value;
        }
        private object get_33_PivotChartAnnotation_ResizingMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.ResizingMode;
        }
        private void set_33_PivotChartAnnotation_ResizingMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.ResizingMode = (global::Syncfusion.UI.Xaml.Charts.AxisMode)Value;
        }
        private object get_34_PivotChartAnnotation_StrokeDashArray(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.StrokeDashArray;
        }
        private void set_34_PivotChartAnnotation_StrokeDashArray(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.StrokeDashArray = (global::Windows.UI.Xaml.Media.DoubleCollection)Value;
        }
        private object get_35_PivotChartAnnotation_StrokeDashCap(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.StrokeDashCap;
        }
        private void set_35_PivotChartAnnotation_StrokeDashCap(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.StrokeDashCap = (global::Windows.UI.Xaml.Media.PenLineCap)Value;
        }
        private object get_36_PivotChartAnnotation_StrokeStartLineCap(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.StrokeStartLineCap;
        }
        private void set_36_PivotChartAnnotation_StrokeStartLineCap(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.StrokeStartLineCap = (global::Windows.UI.Xaml.Media.PenLineCap)Value;
        }
        private object get_37_PivotChartAnnotation_StrokeEndLineCap(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.StrokeEndLineCap;
        }
        private void set_37_PivotChartAnnotation_StrokeEndLineCap(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.StrokeEndLineCap = (global::Windows.UI.Xaml.Media.PenLineCap)Value;
        }
        private object get_38_PivotChartAnnotation_StrokeLineJoin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.StrokeLineJoin;
        }
        private void set_38_PivotChartAnnotation_StrokeLineJoin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.StrokeLineJoin = (global::Windows.UI.Xaml.Media.PenLineJoin)Value;
        }
        private object get_39_PivotChartAnnotation_AxisLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            return that.AxisLabelTemplate;
        }
        private void set_39_PivotChartAnnotation_AxisLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation)instance;
            that.AxisLabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_40_Annotation_Text(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.Text;
        }
        private void set_40_Annotation_Text(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_41_Annotation_EnableEditing(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.EnableEditing;
        }
        private void set_41_Annotation_EnableEditing(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.EnableEditing = (global::System.Boolean)Value;
        }
        private object get_42_Annotation_ContentTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ContentTemplate;
        }
        private void set_42_Annotation_ContentTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_43_Annotation_EnableClipping(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.EnableClipping;
        }
        private void set_43_Annotation_EnableClipping(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.EnableClipping = (global::System.Boolean)Value;
        }
        private object get_44_Annotation_ShowToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ShowToolTip;
        }
        private void set_44_Annotation_ShowToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ShowToolTip = (global::System.Boolean)Value;
        }
        private object get_45_Annotation_ToolTipContent(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ToolTipContent;
        }
        private void set_45_Annotation_ToolTipContent(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ToolTipContent = (global::System.Object)Value;
        }
        private object get_46_Annotation_ToolTipShowDuration(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ToolTipShowDuration;
        }
        private void set_46_Annotation_ToolTipShowDuration(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ToolTipShowDuration = (global::System.Double)Value;
        }
        private object get_47_Annotation_ToolTipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ToolTipTemplate;
        }
        private void set_47_Annotation_ToolTipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ToolTipTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_48_Annotation_ToolTipPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ToolTipPlacement;
        }
        private void set_48_Annotation_ToolTipPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ToolTipPlacement = (global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement)Value;
        }
        private object get_49_Annotation_CoordinateUnit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.CoordinateUnit;
        }
        private void set_49_Annotation_CoordinateUnit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.CoordinateUnit = (global::Syncfusion.UI.Xaml.Charts.CoordinateUnit)Value;
        }
        private object get_50_Annotation_XAxisName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.XAxisName;
        }
        private void set_50_Annotation_XAxisName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.XAxisName = (global::System.String)Value;
        }
        private object get_51_Annotation_YAxisName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.YAxisName;
        }
        private void set_51_Annotation_YAxisName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.YAxisName = (global::System.String)Value;
        }
        private object get_52_Annotation_X1(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.X1;
        }
        private void set_52_Annotation_X1(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.X1 = (global::System.Object)Value;
        }
        private object get_53_Annotation_Y1(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.Y1;
        }
        private void set_53_Annotation_Y1(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.Y1 = (global::System.Object)Value;
        }
        private object get_54_Annotation_FontSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.FontSize;
        }
        private void set_54_Annotation_FontSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_55_Annotation_FontFamily(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.FontFamily;
        }
        private void set_55_Annotation_FontFamily(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_56_Annotation_FontStretch(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.FontStretch;
        }
        private void set_56_Annotation_FontStretch(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.FontStretch = (global::Windows.UI.Text.FontStretch)Value;
        }
        private object get_57_Annotation_FontStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.FontStyle;
        }
        private void set_57_Annotation_FontStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_58_Annotation_FontWeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.FontWeight;
        }
        private void set_58_Annotation_FontWeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_59_Annotation_Foreground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.Foreground;
        }
        private void set_59_Annotation_Foreground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_60_SfPivotChart_AdornmentsInfo(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.AdornmentsInfo;
        }
        private void set_60_SfPivotChart_AdornmentsInfo(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.AdornmentsInfo = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAdornmentsInfo)Value;
        }
        private object get_61_SfPivotChart_ColorPalette(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.ColorPalette;
        }
        private void set_61_SfPivotChart_ColorPalette(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.ColorPalette = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette)Value;
        }
        private object get_62_SfPivotChart_CustomBrushes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.CustomBrushes;
        }
        private void set_62_SfPivotChart_CustomBrushes(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.CustomBrushes = (global::System.Collections.Generic.List<global::Windows.UI.Xaml.Media.Brush>)Value;
        }
        private object get_63_SfPivotChart_PrimaryAxisStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.PrimaryAxisStyle;
        }
        private void set_63_SfPivotChart_PrimaryAxisStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.PrimaryAxisStyle = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAxisStyle)Value;
        }
        private object get_64_SfPivotChart_SecondaryAxisStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.SecondaryAxisStyle;
        }
        private void set_64_SfPivotChart_SecondaryAxisStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.SecondaryAxisStyle = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartAxisStyle)Value;
        }
        private object get_65_SfPivotChart_ChartVisualStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.ChartVisualStyle;
        }
        private void set_65_SfPivotChart_ChartVisualStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.ChartVisualStyle = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle)Value;
        }
        private object get_66_SfPivotChart_ShowProcessingBar(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.ShowProcessingBar;
        }
        private void set_66_SfPivotChart_ShowProcessingBar(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.ShowProcessingBar = (global::System.Boolean)Value;
        }
        private object get_67_SfPivotChart_EnableAnimation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.EnableAnimation;
        }
        private void set_67_SfPivotChart_EnableAnimation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.EnableAnimation = (global::System.Boolean)Value;
        }
        private object get_68_SfPivotChart_AnimationDuration(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.AnimationDuration;
        }
        private void set_68_SfPivotChart_AnimationDuration(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.AnimationDuration = (global::System.TimeSpan)Value;
        }
        private object get_69_SfPivotChart_Watermark(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.Watermark;
        }
        private void set_69_SfPivotChart_Watermark(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.Watermark = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartWatermark)Value;
        }
        private object get_70_SfPivotChart_ToolTipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.ToolTipTemplate;
        }
        private void set_70_SfPivotChart_ToolTipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.ToolTipTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_71_SfPivotChart_ZoomPanBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.ZoomPanBehavior;
        }
        private void set_71_SfPivotChart_ZoomPanBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.ZoomPanBehavior = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartZoomPanBehavior)Value;
        }
        private object get_72_SfPivotChart_ItemSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.ItemSource;
        }
        private void set_72_SfPivotChart_ItemSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.ItemSource = (global::System.Object)Value;
        }
        private object get_73_SfPivotChart_PivotAxis(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.PivotAxis;
        }
        private void set_73_SfPivotChart_PivotAxis(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.PivotAxis = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)Value;
        }
        private object get_74_PivotItem_AllowFilter(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowFilter;
        }
        private void set_74_PivotItem_AllowFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowFilter = (global::System.Boolean)Value;
        }
        private object get_75_PivotItem_AllowRunTimeGroupByField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowRunTimeGroupByField;
        }
        private void set_75_PivotItem_AllowRunTimeGroupByField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowRunTimeGroupByField = (global::System.Boolean)Value;
        }
        private object get_76_PivotItem_AllowSort(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowSort;
        }
        private void set_76_PivotItem_AllowSort(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowSort = (global::System.Boolean)Value;
        }
        private object get_77_PivotItem_Comparer(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Comparer;
        }
        private void set_77_PivotItem_Comparer(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Comparer = (global::System.Collections.IComparer)Value;
        }
        private object get_78_PivotItem_EnableHyperlinks(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.EnableHyperlinks;
        }
        private void set_78_PivotItem_EnableHyperlinks(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.EnableHyperlinks = (global::System.Boolean)Value;
        }
        private object get_79_PivotItem_FieldCaption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldCaption;
        }
        private void set_79_PivotItem_FieldCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldCaption = (global::System.String)Value;
        }
        private object get_80_PivotItem_FieldHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldHeader;
        }
        private void set_80_PivotItem_FieldHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldHeader = (global::System.String)Value;
        }
        private object get_81_PivotItem_FieldMappingName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldMappingName;
        }
        private void set_81_PivotItem_FieldMappingName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldMappingName = (global::System.String)Value;
        }
        private object get_82_PivotItem_Format(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Format;
        }
        private void set_82_PivotItem_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_83_PivotItem_ShowSubTotal(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.ShowSubTotal;
        }
        private void set_83_PivotItem_ShowSubTotal(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.ShowSubTotal = (global::System.Boolean)Value;
        }
        private object get_84_PivotItem_SortDirection(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.SortDirection;
        }
        private void set_84_PivotItem_SortDirection(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.SortDirection = (global::Syncfusion.Data.ListSortDirection)Value;
        }
        private object get_85_PivotItem_Summary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Summary;
        }
        private void set_85_PivotItem_Summary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Summary = (global::Syncfusion.PivotAnalysis.UWP.SummaryBase)Value;
        }
        private object get_86_PivotItem_SummaryType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.SummaryType;
        }
        private void set_86_PivotItem_SummaryType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.SummaryType = (global::Syncfusion.PivotAnalysis.UWP.SummaryType)Value;
        }
        private object get_87_PivotItem_TotalHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.TotalHeader;
        }
        private void set_87_PivotItem_TotalHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.TotalHeader = (global::System.String)Value;
        }
        private object get_88_PivotItem_Width(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Width;
        }
        private void set_88_PivotItem_Width(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_89_SfPivotChart_PivotEngine(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.PivotEngine;
        }
        private void set_89_SfPivotChart_PivotEngine(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.PivotEngine = (global::System.Object)Value;
        }
        private object get_90_SfPivotChart_PivotLegend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.PivotLegend;
        }
        private void set_90_SfPivotChart_PivotLegend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.PivotLegend = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)Value;
        }
        private object get_91_SfPivotChart_PivotCalculations(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.PivotCalculations;
        }
        private void set_91_SfPivotChart_PivotCalculations(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.PivotCalculations = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)Value;
        }
        private object get_92_PivotComputationInfo_AllowFilter(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowFilter;
        }
        private void set_92_PivotComputationInfo_AllowFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowFilter = (global::System.Boolean)Value;
        }
        private object get_93_PivotComputationInfo_AllowRunTimeGroupByField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowRunTimeGroupByField;
        }
        private void set_93_PivotComputationInfo_AllowRunTimeGroupByField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowRunTimeGroupByField = (global::System.Boolean)Value;
        }
        private object get_94_PivotComputationInfo_AllowSort(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowSort;
        }
        private void set_94_PivotComputationInfo_AllowSort(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowSort = (global::System.Boolean)Value;
        }
        private object get_95_PivotComputationInfo_BaseField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.BaseField;
        }
        private void set_95_PivotComputationInfo_BaseField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.BaseField = (global::System.String)Value;
        }
        private object get_96_PivotComputationInfo_BaseItem(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.BaseItem;
        }
        private void set_96_PivotComputationInfo_BaseItem(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.BaseItem = (global::System.String)Value;
        }
        private object get_97_PivotComputationInfo_FieldType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldType;
        }
        private void set_97_PivotComputationInfo_FieldType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldType = (global::System.String)Value;
        }
        private object get_98_PivotComputationInfo_CalculationName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.CalculationName;
        }
        private void set_98_PivotComputationInfo_CalculationName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.CalculationName = (global::System.String)Value;
        }
        private object get_99_PivotComputationInfo_CalculationType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.CalculationType;
        }
        private void set_99_PivotComputationInfo_CalculationType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.CalculationType = (global::Syncfusion.PivotAnalysis.UWP.CalculationType)Value;
        }
        private object get_100_PivotComputationInfo_DefaultValue(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.DefaultValue;
        }
        private void set_100_PivotComputationInfo_DefaultValue(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.DefaultValue = (global::System.Object)Value;
        }
        private object get_101_PivotComputationInfo_Description(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Description;
        }
        private void set_101_PivotComputationInfo_Description(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_102_PivotComputationInfo_DisplayOption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.DisplayOption;
        }
        private void set_102_PivotComputationInfo_DisplayOption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.DisplayOption = (global::Syncfusion.PivotAnalysis.UWP.DisplayOption)Value;
        }
        private object get_103_PivotComputationInfo_EnableHyperlinks(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.EnableHyperlinks;
        }
        private void set_103_PivotComputationInfo_EnableHyperlinks(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.EnableHyperlinks = (global::System.Boolean)Value;
        }
        private object get_104_PivotComputationInfo_Expression(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Expression;
        }
        private void set_104_PivotComputationInfo_Expression(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Expression = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)Value;
        }
        private object get_105_PivotComputationInfo_FieldCaption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldCaption;
        }
        private void set_105_PivotComputationInfo_FieldCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldCaption = (global::System.String)Value;
        }
        private object get_106_PivotComputationInfo_FieldHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldHeader;
        }
        private void set_106_PivotComputationInfo_FieldHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldHeader = (global::System.String)Value;
        }
        private object get_107_PivotComputationInfo_FieldName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldName;
        }
        private void set_107_PivotComputationInfo_FieldName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldName = (global::System.String)Value;
        }
        private object get_108_PivotComputationInfo_Format(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Format;
        }
        private void set_108_PivotComputationInfo_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_109_PivotComputationInfo_Formula(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Formula;
        }
        private void set_109_PivotComputationInfo_Formula(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Formula = (global::System.String)Value;
        }
        private object get_110_PivotComputationInfo_InnerMostComputationsOnly(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.InnerMostComputationsOnly;
        }
        private void set_110_PivotComputationInfo_InnerMostComputationsOnly(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.InnerMostComputationsOnly = (global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel)Value;
        }
        private object get_111_PivotComputationInfo_IsTopColumnSummary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.IsTopColumnSummary;
        }
        private void set_111_PivotComputationInfo_IsTopColumnSummary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.IsTopColumnSummary = (global::System.Boolean)Value;
        }
        private object get_112_PivotComputationInfo_PadString(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.PadString;
        }
        private void set_112_PivotComputationInfo_PadString(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.PadString = (global::System.String)Value;
        }
        private object get_113_PivotComputationInfo_Summary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Summary;
        }
        private void set_113_PivotComputationInfo_Summary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Summary = (global::Syncfusion.PivotAnalysis.UWP.SummaryBase)Value;
        }
        private object get_114_PivotComputationInfo_SummaryType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.SummaryType;
        }
        private void set_114_PivotComputationInfo_SummaryType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.SummaryType = (global::Syncfusion.PivotAnalysis.UWP.SummaryType)Value;
        }
        private object get_115_SfPivotChart_EnableAutoExecute(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.EnableAutoExecute;
        }
        private void set_115_SfPivotChart_EnableAutoExecute(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.EnableAutoExecute = (global::System.Boolean)Value;
        }
        private object get_116_SfPivotChart_ScatterWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.ScatterWidth;
        }
        private void set_116_SfPivotChart_ScatterWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.ScatterWidth = (global::System.Int32)Value;
        }
        private object get_117_SfPivotChart_ScatterHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.ScatterHeight;
        }
        private void set_117_SfPivotChart_ScatterHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.ScatterHeight = (global::System.Int32)Value;
        }
        private object get_118_SfPivotChart_EnableAntiAliasing(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.EnableAntiAliasing;
        }
        private void set_118_SfPivotChart_EnableAntiAliasing(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.EnableAntiAliasing = (global::System.Boolean)Value;
        }
        private object get_119_SfPivotChart_ChartAppearance(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.ChartAppearance;
        }
        private void set_119_SfPivotChart_ChartAppearance(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            that.ChartAppearance = (global::Syncfusion.Olap.UWP.Reports.ChartAppearanceSettings)Value;
        }
        private object get_120_SfPivotChart_PrimaryAxis(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.PrimaryAxis;
        }
        private object get_121_SfPivotChart_SecondaryAxis(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.SecondaryAxis;
        }
        private object get_122_SfPivotChart_CurrentReport(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.SfPivotChart)instance;
            return that.CurrentReport;
        }
        private object get_123_SfBusyIndicator_AnimationType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.AnimationType;
        }
        private void set_123_SfBusyIndicator_AnimationType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.AnimationType = (global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes)Value;
        }
        private object get_124_SfBusyIndicator_IsBusy(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.IsBusy;
        }
        private void set_124_SfBusyIndicator_IsBusy(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.IsBusy = (global::System.Boolean)Value;
        }
        private object get_125_SfBusyIndicator_ViewboxHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.ViewboxHeight;
        }
        private void set_125_SfBusyIndicator_ViewboxHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.ViewboxHeight = (global::System.Double)Value;
        }
        private object get_126_SfBusyIndicator_ViewboxWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.ViewboxWidth;
        }
        private void set_126_SfBusyIndicator_ViewboxWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.ViewboxWidth = (global::System.Double)Value;
        }
        private object get_127_SfBusyIndicator_AnimationSpeed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.AnimationSpeed;
        }
        private void set_127_SfBusyIndicator_AnimationSpeed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.AnimationSpeed = (global::System.Double)Value;
        }
        private object get_128_SfBusyIndicator_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.Header;
        }
        private void set_128_SfBusyIndicator_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_129_SfBusyIndicator_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.HeaderTemplate;
        }
        private void set_129_SfBusyIndicator_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_130_SfBusyIndicator_HeaderPlacementMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.HeaderPlacementMode;
        }
        private void set_130_SfBusyIndicator_HeaderPlacementMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.HeaderPlacementMode = (global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode)Value;
        }
        private object get_131_Collection_Count(object instance)
        {
            var that = (global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>)instance;
            return that.Count;
        }
        private object get_132_ChartLegend_DockPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.DockPosition;
        }
        private void set_132_ChartLegend_DockPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.DockPosition = (global::Syncfusion.UI.Xaml.Charts.ChartDock)Value;
        }
        private object get_133_PivotChartLegend_ColumnCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartLegend)instance;
            return that.ColumnCount;
        }
        private void set_133_PivotChartLegend_ColumnCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartLegend)instance;
            that.ColumnCount = (global::System.Int32)Value;
        }
        private object get_134_PivotChartLegend_RowCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartLegend)instance;
            return that.RowCount;
        }
        private void set_134_PivotChartLegend_RowCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartLegend)instance;
            that.RowCount = (global::System.Int32)Value;
        }
        private object get_135_PivotChartLegend_TextOverflow(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartLegend)instance;
            return that.TextOverflow;
        }
        private void set_135_PivotChartLegend_TextOverflow(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartLegend)instance;
            that.TextOverflow = (global::Windows.UI.Xaml.TextWrapping)Value;
        }
        private object get_136_PivotChartLegend_Orientation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartLegend)instance;
            return that.Orientation;
        }
        private void set_136_PivotChartLegend_Orientation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotChart.PivotChartLegend)instance;
            that.Orientation = (global::Syncfusion.UI.Xaml.Charts.ChartOrientation)Value;
        }
        private object get_137_ChartLegend_LegendPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.LegendPosition;
        }
        private void set_137_ChartLegend_LegendPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.LegendPosition = (global::Syncfusion.UI.Xaml.Charts.LegendPosition)Value;
        }
        private object get_138_ChartLegend_ItemMargin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.ItemMargin;
        }
        private void set_138_ChartLegend_ItemMargin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.ItemMargin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_139_ChartLegend_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.Header;
        }
        private void set_139_ChartLegend_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_140_ChartLegend_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.HeaderTemplate;
        }
        private void set_140_ChartLegend_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_141_ChartLegend_CornerRadius(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.CornerRadius;
        }
        private void set_141_ChartLegend_CornerRadius(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.CornerRadius = (global::Windows.UI.Xaml.CornerRadius)Value;
        }
        private object get_142_ChartLegend_CheckBoxVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.CheckBoxVisibility;
        }
        private void set_142_ChartLegend_CheckBoxVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.CheckBoxVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_143_ChartLegend_ToggleSeriesVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.ToggleSeriesVisibility;
        }
        private void set_143_ChartLegend_ToggleSeriesVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.ToggleSeriesVisibility = (global::System.Boolean)Value;
        }
        private object get_144_ChartLegend_IconVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.IconVisibility;
        }
        private void set_144_ChartLegend_IconVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.IconVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_145_ChartLegend_IconWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.IconWidth;
        }
        private void set_145_ChartLegend_IconWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.IconWidth = (global::System.Double)Value;
        }
        private object get_146_ChartLegend_IconHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.IconHeight;
        }
        private void set_146_ChartLegend_IconHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.IconHeight = (global::System.Double)Value;
        }
        private object get_147_ChartLegend_OffsetX(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.OffsetX;
        }
        private void set_147_ChartLegend_OffsetX(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.OffsetX = (global::System.Double)Value;
        }
        private object get_148_ChartLegend_Series(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.Series;
        }
        private void set_148_ChartLegend_Series(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.Series = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)Value;
        }
        private object get_149_ChartLegend_OffsetY(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.OffsetY;
        }
        private void set_149_ChartLegend_OffsetY(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.OffsetY = (global::System.Double)Value;
        }
        private object get_150_SetterValueBindingHelper_Type(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Type;
        }
        private void set_150_SetterValueBindingHelper_Type(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Type = (global::System.String)Value;
        }
        private object get_151_SetterValueBindingHelper_Property(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Property;
        }
        private void set_151_SetterValueBindingHelper_Property(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Property = (global::System.String)Value;
        }
        private object get_152_SetterValueBindingHelper_Binding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Binding;
        }
        private void set_152_SetterValueBindingHelper_Binding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Binding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_153_SetterValueBindingHelper_Values(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Values;
        }
        private object get_154_SetterValueBindingHelper_PropertyBinding(object instance)
        {
            return global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.GetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance);
        }
        private void set_154_SetterValueBindingHelper_PropertyBinding(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.SetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance, (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)Value);
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember xamlMember = null;
            global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Windows.UI.Color.A":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_0_Color_A;
                xamlMember.Setter = set_0_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_1_Color_B;
                xamlMember.Setter = set_1_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_2_Color_G;
                xamlMember.Setter = set_2_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_3_Color_R;
                xamlMember.Setter = set_3_Color_R;
                break;
            case "Common.SampleLayout.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Header", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_SampleLayout_Header;
                xamlMember.Setter = set_4_SampleLayout_Header;
                break;
            case "Common.SampleLayout.Sample":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Sample", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SampleLayout_Sample;
                xamlMember.Setter = set_5_SampleLayout_Sample;
                break;
            case "Common.SampleLayout.Setting":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Setting", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_SampleLayout_Setting;
                xamlMember.Setter = set_6_SampleLayout_Setting;
                break;
            case "Common.SampleLayout.OptionVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "OptionVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_SampleLayout_OptionVisibility;
                xamlMember.Setter = set_7_SampleLayout_OptionVisibility;
                break;
            case "Common.SampleLayout.FontIcons":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FontIcons", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_SampleLayout_FontIcons;
                xamlMember.Setter = set_8_SampleLayout_FontIcons;
                break;
            case "Common.SampleLayout.Pathstring":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Pathstring", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_SampleLayout_Pathstring;
                xamlMember.Setter = set_9_SampleLayout_Pathstring;
                break;
            case "Common.SampleLayout.ClickCommand":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ClickCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_10_SampleLayout_ClickCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.ChartType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ChartType", "Syncfusion.UI.Xaml.PivotChart.PivotChartType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_SfPivotChart_ChartType;
                xamlMember.Setter = set_11_SfPivotChart_ChartType;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.ShowToolTip":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ShowToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_SfPivotChart_ShowToolTip;
                xamlMember.Setter = set_12_SfPivotChart_ShowToolTip;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.Legend":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Legend", "Syncfusion.UI.Xaml.PivotChart.PivotChartLegend");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_SfPivotChart_Legend;
                xamlMember.Setter = set_13_SfPivotChart_Legend;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.OlapDataManager":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "OlapDataManager", "Syncfusion.Olap.UWP.Manager.OlapDataManager");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_SfPivotChart_OlapDataManager;
                xamlMember.Setter = set_14_SfPivotChart_OlapDataManager;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.Annotations":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Annotations", "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_SfPivotChart_Annotations;
                xamlMember.Setter = set_15_SfPivotChart_Annotations;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.AnnotationType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AnnotationType", "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotationType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_PivotChartAnnotation_AnnotationType;
                xamlMember.Setter = set_16_PivotChartAnnotation_AnnotationType;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.X2":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "X2", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_PivotChartAnnotation_X2;
                xamlMember.Setter = set_17_PivotChartAnnotation_X2;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.Y2":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Y2", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_PivotChartAnnotation_Y2;
                xamlMember.Setter = set_18_PivotChartAnnotation_Y2;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.Angle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Angle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_PivotChartAnnotation_Angle;
                xamlMember.Setter = set_19_PivotChartAnnotation_Angle;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.StrokeDashOffset":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "StrokeDashOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_PivotChartAnnotation_StrokeDashOffset;
                xamlMember.Setter = set_20_PivotChartAnnotation_StrokeDashOffset;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.StrokeMiterLimit":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "StrokeMiterLimit", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_PivotChartAnnotation_StrokeMiterLimit;
                xamlMember.Setter = set_21_PivotChartAnnotation_StrokeMiterLimit;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.StrokeThickness":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_PivotChartAnnotation_StrokeThickness;
                xamlMember.Setter = set_22_PivotChartAnnotation_StrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.ImageSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ImageSource", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_PivotChartAnnotation_ImageSource;
                xamlMember.Setter = set_23_PivotChartAnnotation_ImageSource;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.HorizontalTextAlignment":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "HorizontalTextAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_PivotChartAnnotation_HorizontalTextAlignment;
                xamlMember.Setter = set_24_PivotChartAnnotation_HorizontalTextAlignment;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.VerticalTextAlignment":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "VerticalTextAlignment", "Windows.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_PivotChartAnnotation_VerticalTextAlignment;
                xamlMember.Setter = set_25_PivotChartAnnotation_VerticalTextAlignment;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.Fill":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Fill", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_PivotChartAnnotation_Fill;
                xamlMember.Setter = set_26_PivotChartAnnotation_Fill;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.Stroke":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_PivotChartAnnotation_Stroke;
                xamlMember.Setter = set_27_PivotChartAnnotation_Stroke;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.CanResize":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "CanResize", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_PivotChartAnnotation_CanResize;
                xamlMember.Setter = set_28_PivotChartAnnotation_CanResize;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.ShowAxisLabel":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ShowAxisLabel", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_PivotChartAnnotation_ShowAxisLabel;
                xamlMember.Setter = set_29_PivotChartAnnotation_ShowAxisLabel;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.ShowLine":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ShowLine", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_PivotChartAnnotation_ShowLine;
                xamlMember.Setter = set_30_PivotChartAnnotation_ShowLine;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.LineCap":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "LineCap", "Syncfusion.UI.Xaml.Charts.LineCap");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_PivotChartAnnotation_LineCap;
                xamlMember.Setter = set_31_PivotChartAnnotation_LineCap;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.DraggingMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "DraggingMode", "Syncfusion.UI.Xaml.Charts.AxisMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_PivotChartAnnotation_DraggingMode;
                xamlMember.Setter = set_32_PivotChartAnnotation_DraggingMode;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.ResizingMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ResizingMode", "Syncfusion.UI.Xaml.Charts.AxisMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_PivotChartAnnotation_ResizingMode;
                xamlMember.Setter = set_33_PivotChartAnnotation_ResizingMode;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.StrokeDashArray":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "StrokeDashArray", "Windows.UI.Xaml.Media.DoubleCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_PivotChartAnnotation_StrokeDashArray;
                xamlMember.Setter = set_34_PivotChartAnnotation_StrokeDashArray;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.StrokeDashCap":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "StrokeDashCap", "Windows.UI.Xaml.Media.PenLineCap");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_PivotChartAnnotation_StrokeDashCap;
                xamlMember.Setter = set_35_PivotChartAnnotation_StrokeDashCap;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.StrokeStartLineCap":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "StrokeStartLineCap", "Windows.UI.Xaml.Media.PenLineCap");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_PivotChartAnnotation_StrokeStartLineCap;
                xamlMember.Setter = set_36_PivotChartAnnotation_StrokeStartLineCap;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.StrokeEndLineCap":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "StrokeEndLineCap", "Windows.UI.Xaml.Media.PenLineCap");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_PivotChartAnnotation_StrokeEndLineCap;
                xamlMember.Setter = set_37_PivotChartAnnotation_StrokeEndLineCap;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.StrokeLineJoin":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "StrokeLineJoin", "Windows.UI.Xaml.Media.PenLineJoin");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_PivotChartAnnotation_StrokeLineJoin;
                xamlMember.Setter = set_38_PivotChartAnnotation_StrokeLineJoin;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation.AxisLabelTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AxisLabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_PivotChartAnnotation_AxisLabelTemplate;
                xamlMember.Setter = set_39_PivotChartAnnotation_AxisLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.Text":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_Annotation_Text;
                xamlMember.Setter = set_40_Annotation_Text;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.EnableEditing":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "EnableEditing", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_Annotation_EnableEditing;
                xamlMember.Setter = set_41_Annotation_EnableEditing;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ContentTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_Annotation_ContentTemplate;
                xamlMember.Setter = set_42_Annotation_ContentTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.EnableClipping":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "EnableClipping", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_Annotation_EnableClipping;
                xamlMember.Setter = set_43_Annotation_EnableClipping;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ShowToolTip":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ShowToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_Annotation_ShowToolTip;
                xamlMember.Setter = set_44_Annotation_ShowToolTip;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ToolTipContent":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ToolTipContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_Annotation_ToolTipContent;
                xamlMember.Setter = set_45_Annotation_ToolTipContent;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ToolTipShowDuration":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ToolTipShowDuration", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_Annotation_ToolTipShowDuration;
                xamlMember.Setter = set_46_Annotation_ToolTipShowDuration;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ToolTipTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ToolTipTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_Annotation_ToolTipTemplate;
                xamlMember.Setter = set_47_Annotation_ToolTipTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ToolTipPlacement":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ToolTipPlacement", "Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_Annotation_ToolTipPlacement;
                xamlMember.Setter = set_48_Annotation_ToolTipPlacement;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.CoordinateUnit":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "CoordinateUnit", "Syncfusion.UI.Xaml.Charts.CoordinateUnit");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_Annotation_CoordinateUnit;
                xamlMember.Setter = set_49_Annotation_CoordinateUnit;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.XAxisName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "XAxisName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_Annotation_XAxisName;
                xamlMember.Setter = set_50_Annotation_XAxisName;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.YAxisName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "YAxisName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_Annotation_YAxisName;
                xamlMember.Setter = set_51_Annotation_YAxisName;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.X1":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "X1", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_Annotation_X1;
                xamlMember.Setter = set_52_Annotation_X1;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.Y1":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Y1", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_Annotation_Y1;
                xamlMember.Setter = set_53_Annotation_Y1;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.FontSize":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_Annotation_FontSize;
                xamlMember.Setter = set_54_Annotation_FontSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.FontFamily":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_Annotation_FontFamily;
                xamlMember.Setter = set_55_Annotation_FontFamily;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.FontStretch":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FontStretch", "Windows.UI.Text.FontStretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_Annotation_FontStretch;
                xamlMember.Setter = set_56_Annotation_FontStretch;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.FontStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_Annotation_FontStyle;
                xamlMember.Setter = set_57_Annotation_FontStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.FontWeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_Annotation_FontWeight;
                xamlMember.Setter = set_58_Annotation_FontWeight;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.Foreground":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_Annotation_Foreground;
                xamlMember.Setter = set_59_Annotation_Foreground;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.AdornmentsInfo":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AdornmentsInfo", "Syncfusion.UI.Xaml.PivotChart.PivotChartAdornmentsInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_SfPivotChart_AdornmentsInfo;
                xamlMember.Setter = set_60_SfPivotChart_AdornmentsInfo;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.ColorPalette":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ColorPalette", "Syncfusion.UI.Xaml.PivotChart.PivotChartColorPalette");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_SfPivotChart_ColorPalette;
                xamlMember.Setter = set_61_SfPivotChart_ColorPalette;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.CustomBrushes":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "CustomBrushes", "System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_SfPivotChart_CustomBrushes;
                xamlMember.Setter = set_62_SfPivotChart_CustomBrushes;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.PrimaryAxisStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "PrimaryAxisStyle", "Syncfusion.UI.Xaml.PivotChart.PivotChartAxisStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_SfPivotChart_PrimaryAxisStyle;
                xamlMember.Setter = set_63_SfPivotChart_PrimaryAxisStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.SecondaryAxisStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "SecondaryAxisStyle", "Syncfusion.UI.Xaml.PivotChart.PivotChartAxisStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_SfPivotChart_SecondaryAxisStyle;
                xamlMember.Setter = set_64_SfPivotChart_SecondaryAxisStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.ChartVisualStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ChartVisualStyle", "Syncfusion.UI.Xaml.PivotChart.PivotChartVisualStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_SfPivotChart_ChartVisualStyle;
                xamlMember.Setter = set_65_SfPivotChart_ChartVisualStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.ShowProcessingBar":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ShowProcessingBar", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_SfPivotChart_ShowProcessingBar;
                xamlMember.Setter = set_66_SfPivotChart_ShowProcessingBar;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.EnableAnimation":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "EnableAnimation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_SfPivotChart_EnableAnimation;
                xamlMember.Setter = set_67_SfPivotChart_EnableAnimation;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.AnimationDuration":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AnimationDuration", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_SfPivotChart_AnimationDuration;
                xamlMember.Setter = set_68_SfPivotChart_AnimationDuration;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.Watermark":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Watermark", "Syncfusion.UI.Xaml.PivotChart.PivotChartWatermark");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_SfPivotChart_Watermark;
                xamlMember.Setter = set_69_SfPivotChart_Watermark;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.ToolTipTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ToolTipTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_SfPivotChart_ToolTipTemplate;
                xamlMember.Setter = set_70_SfPivotChart_ToolTipTemplate;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.ZoomPanBehavior":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ZoomPanBehavior", "Syncfusion.UI.Xaml.PivotChart.PivotChartZoomPanBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_SfPivotChart_ZoomPanBehavior;
                xamlMember.Setter = set_71_SfPivotChart_ZoomPanBehavior;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.ItemSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ItemSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_SfPivotChart_ItemSource;
                xamlMember.Setter = set_72_SfPivotChart_ItemSource;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.PivotAxis":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "PivotAxis", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_SfPivotChart_PivotAxis;
                xamlMember.Setter = set_73_SfPivotChart_PivotAxis;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowFilter":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AllowFilter", "Boolean");
                xamlMember.Getter = get_74_PivotItem_AllowFilter;
                xamlMember.Setter = set_74_PivotItem_AllowFilter;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowRunTimeGroupByField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AllowRunTimeGroupByField", "Boolean");
                xamlMember.Getter = get_75_PivotItem_AllowRunTimeGroupByField;
                xamlMember.Setter = set_75_PivotItem_AllowRunTimeGroupByField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowSort":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AllowSort", "Boolean");
                xamlMember.Getter = get_76_PivotItem_AllowSort;
                xamlMember.Setter = set_76_PivotItem_AllowSort;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Comparer":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Comparer", "System.Collections.IComparer");
                xamlMember.Getter = get_77_PivotItem_Comparer;
                xamlMember.Setter = set_77_PivotItem_Comparer;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.EnableHyperlinks":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "EnableHyperlinks", "Boolean");
                xamlMember.Getter = get_78_PivotItem_EnableHyperlinks;
                xamlMember.Setter = set_78_PivotItem_EnableHyperlinks;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FieldCaption", "String");
                xamlMember.Getter = get_79_PivotItem_FieldCaption;
                xamlMember.Setter = set_79_PivotItem_FieldCaption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FieldHeader", "String");
                xamlMember.Getter = get_80_PivotItem_FieldHeader;
                xamlMember.Setter = set_80_PivotItem_FieldHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldMappingName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FieldMappingName", "String");
                xamlMember.Getter = get_81_PivotItem_FieldMappingName;
                xamlMember.Setter = set_81_PivotItem_FieldMappingName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Format":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_82_PivotItem_Format;
                xamlMember.Setter = set_82_PivotItem_Format;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.ShowSubTotal":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ShowSubTotal", "Boolean");
                xamlMember.Getter = get_83_PivotItem_ShowSubTotal;
                xamlMember.Setter = set_83_PivotItem_ShowSubTotal;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.SortDirection":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "SortDirection", "Syncfusion.Data.ListSortDirection");
                xamlMember.Getter = get_84_PivotItem_SortDirection;
                xamlMember.Setter = set_84_PivotItem_SortDirection;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Summary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Summary", "Syncfusion.PivotAnalysis.UWP.SummaryBase");
                xamlMember.Getter = get_85_PivotItem_Summary;
                xamlMember.Setter = set_85_PivotItem_Summary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.SummaryType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "SummaryType", "Syncfusion.PivotAnalysis.UWP.SummaryType");
                xamlMember.Getter = get_86_PivotItem_SummaryType;
                xamlMember.Setter = set_86_PivotItem_SummaryType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.TotalHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "TotalHeader", "String");
                xamlMember.Getter = get_87_PivotItem_TotalHeader;
                xamlMember.Setter = set_87_PivotItem_TotalHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Width":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.Getter = get_88_PivotItem_Width;
                xamlMember.Setter = set_88_PivotItem_Width;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.PivotEngine":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "PivotEngine", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_SfPivotChart_PivotEngine;
                xamlMember.Setter = set_89_SfPivotChart_PivotEngine;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.PivotLegend":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "PivotLegend", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_SfPivotChart_PivotLegend;
                xamlMember.Setter = set_90_SfPivotChart_PivotLegend;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.PivotCalculations":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "PivotCalculations", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_SfPivotChart_PivotCalculations;
                xamlMember.Setter = set_91_SfPivotChart_PivotCalculations;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowFilter":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AllowFilter", "Boolean");
                xamlMember.Getter = get_92_PivotComputationInfo_AllowFilter;
                xamlMember.Setter = set_92_PivotComputationInfo_AllowFilter;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowRunTimeGroupByField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AllowRunTimeGroupByField", "Boolean");
                xamlMember.Getter = get_93_PivotComputationInfo_AllowRunTimeGroupByField;
                xamlMember.Setter = set_93_PivotComputationInfo_AllowRunTimeGroupByField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowSort":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AllowSort", "Boolean");
                xamlMember.Getter = get_94_PivotComputationInfo_AllowSort;
                xamlMember.Setter = set_94_PivotComputationInfo_AllowSort;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.BaseField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "BaseField", "String");
                xamlMember.Getter = get_95_PivotComputationInfo_BaseField;
                xamlMember.Setter = set_95_PivotComputationInfo_BaseField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.BaseItem":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "BaseItem", "String");
                xamlMember.Getter = get_96_PivotComputationInfo_BaseItem;
                xamlMember.Setter = set_96_PivotComputationInfo_BaseItem;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FieldType", "String");
                xamlMember.Getter = get_97_PivotComputationInfo_FieldType;
                xamlMember.Setter = set_97_PivotComputationInfo_FieldType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.CalculationName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "CalculationName", "String");
                xamlMember.Getter = get_98_PivotComputationInfo_CalculationName;
                xamlMember.Setter = set_98_PivotComputationInfo_CalculationName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.CalculationType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "CalculationType", "Syncfusion.PivotAnalysis.UWP.CalculationType");
                xamlMember.Getter = get_99_PivotComputationInfo_CalculationType;
                xamlMember.Setter = set_99_PivotComputationInfo_CalculationType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.DefaultValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "DefaultValue", "Object");
                xamlMember.Getter = get_100_PivotComputationInfo_DefaultValue;
                xamlMember.Setter = set_100_PivotComputationInfo_DefaultValue;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Description":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_101_PivotComputationInfo_Description;
                xamlMember.Setter = set_101_PivotComputationInfo_Description;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.DisplayOption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "DisplayOption", "Syncfusion.PivotAnalysis.UWP.DisplayOption");
                xamlMember.Getter = get_102_PivotComputationInfo_DisplayOption;
                xamlMember.Setter = set_102_PivotComputationInfo_DisplayOption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.EnableHyperlinks":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "EnableHyperlinks", "Boolean");
                xamlMember.Getter = get_103_PivotComputationInfo_EnableHyperlinks;
                xamlMember.Setter = set_103_PivotComputationInfo_EnableHyperlinks;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Expression":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Expression", "Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember.Getter = get_104_PivotComputationInfo_Expression;
                xamlMember.Setter = set_104_PivotComputationInfo_Expression;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FieldCaption", "String");
                xamlMember.Getter = get_105_PivotComputationInfo_FieldCaption;
                xamlMember.Setter = set_105_PivotComputationInfo_FieldCaption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FieldHeader", "String");
                xamlMember.Getter = get_106_PivotComputationInfo_FieldHeader;
                xamlMember.Setter = set_106_PivotComputationInfo_FieldHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "FieldName", "String");
                xamlMember.Getter = get_107_PivotComputationInfo_FieldName;
                xamlMember.Setter = set_107_PivotComputationInfo_FieldName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Format":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_108_PivotComputationInfo_Format;
                xamlMember.Setter = set_108_PivotComputationInfo_Format;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Formula":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Formula", "String");
                xamlMember.Getter = get_109_PivotComputationInfo_Formula;
                xamlMember.Setter = set_109_PivotComputationInfo_Formula;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.InnerMostComputationsOnly":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "InnerMostComputationsOnly", "Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel");
                xamlMember.Getter = get_110_PivotComputationInfo_InnerMostComputationsOnly;
                xamlMember.Setter = set_110_PivotComputationInfo_InnerMostComputationsOnly;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.IsTopColumnSummary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "IsTopColumnSummary", "Boolean");
                xamlMember.Getter = get_111_PivotComputationInfo_IsTopColumnSummary;
                xamlMember.Setter = set_111_PivotComputationInfo_IsTopColumnSummary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.PadString":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "PadString", "String");
                xamlMember.Getter = get_112_PivotComputationInfo_PadString;
                xamlMember.Setter = set_112_PivotComputationInfo_PadString;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Summary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Summary", "Syncfusion.PivotAnalysis.UWP.SummaryBase");
                xamlMember.Getter = get_113_PivotComputationInfo_Summary;
                xamlMember.Setter = set_113_PivotComputationInfo_Summary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.SummaryType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "SummaryType", "Syncfusion.PivotAnalysis.UWP.SummaryType");
                xamlMember.Getter = get_114_PivotComputationInfo_SummaryType;
                xamlMember.Setter = set_114_PivotComputationInfo_SummaryType;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.EnableAutoExecute":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "EnableAutoExecute", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_SfPivotChart_EnableAutoExecute;
                xamlMember.Setter = set_115_SfPivotChart_EnableAutoExecute;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.ScatterWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ScatterWidth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_SfPivotChart_ScatterWidth;
                xamlMember.Setter = set_116_SfPivotChart_ScatterWidth;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.ScatterHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ScatterHeight", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_SfPivotChart_ScatterHeight;
                xamlMember.Setter = set_117_SfPivotChart_ScatterHeight;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.EnableAntiAliasing":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "EnableAntiAliasing", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_SfPivotChart_EnableAntiAliasing;
                xamlMember.Setter = set_118_SfPivotChart_EnableAntiAliasing;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.ChartAppearance":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ChartAppearance", "Syncfusion.Olap.UWP.Reports.ChartAppearanceSettings");
                xamlMember.Getter = get_119_SfPivotChart_ChartAppearance;
                xamlMember.Setter = set_119_SfPivotChart_ChartAppearance;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.PrimaryAxis":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "PrimaryAxis", "Syncfusion.UI.Xaml.PivotChart.PivotChartAxis");
                xamlMember.Getter = get_120_SfPivotChart_PrimaryAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.SecondaryAxis":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "SecondaryAxis", "Syncfusion.UI.Xaml.PivotChart.PivotChartAxis");
                xamlMember.Getter = get_121_SfPivotChart_SecondaryAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotChart.SfPivotChart.CurrentReport":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.SfPivotChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "CurrentReport", "Syncfusion.Olap.UWP.Reports.OlapReport");
                xamlMember.Getter = get_122_SfPivotChart_CurrentReport;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.AnimationType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AnimationType", "Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_SfBusyIndicator_AnimationType;
                xamlMember.Setter = set_123_SfBusyIndicator_AnimationType;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.IsBusy":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "IsBusy", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_SfBusyIndicator_IsBusy;
                xamlMember.Setter = set_124_SfBusyIndicator_IsBusy;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.ViewboxHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ViewboxHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_SfBusyIndicator_ViewboxHeight;
                xamlMember.Setter = set_125_SfBusyIndicator_ViewboxHeight;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.ViewboxWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ViewboxWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_SfBusyIndicator_ViewboxWidth;
                xamlMember.Setter = set_126_SfBusyIndicator_ViewboxWidth;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.AnimationSpeed":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "AnimationSpeed", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_SfBusyIndicator_AnimationSpeed;
                xamlMember.Setter = set_127_SfBusyIndicator_AnimationSpeed;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_SfBusyIndicator_Header;
                xamlMember.Setter = set_128_SfBusyIndicator_Header;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.HeaderTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_SfBusyIndicator_HeaderTemplate;
                xamlMember.Setter = set_129_SfBusyIndicator_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.HeaderPlacementMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "HeaderPlacementMode", "Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_SfBusyIndicator_HeaderPlacementMode;
                xamlMember.Setter = set_130_SfBusyIndicator_HeaderPlacementMode;
                break;
            case "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>.Count":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.PivotChart.PivotChartAnnotation>");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Count", "Int32");
                xamlMember.Getter = get_131_Collection_Count;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.DockPosition":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "DockPosition", "Syncfusion.UI.Xaml.Charts.ChartDock");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_ChartLegend_DockPosition;
                xamlMember.Setter = set_132_ChartLegend_DockPosition;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartLegend.ColumnCount":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ColumnCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_PivotChartLegend_ColumnCount;
                xamlMember.Setter = set_133_PivotChartLegend_ColumnCount;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartLegend.RowCount":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "RowCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_PivotChartLegend_RowCount;
                xamlMember.Setter = set_134_PivotChartLegend_RowCount;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartLegend.TextOverflow":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "TextOverflow", "Windows.UI.Xaml.TextWrapping");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_PivotChartLegend_TextOverflow;
                xamlMember.Setter = set_135_PivotChartLegend_TextOverflow;
                break;
            case "Syncfusion.UI.Xaml.PivotChart.PivotChartLegend.Orientation":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotChart.PivotChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Orientation", "Syncfusion.UI.Xaml.Charts.ChartOrientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_PivotChartLegend_Orientation;
                xamlMember.Setter = set_136_PivotChartLegend_Orientation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.LegendPosition":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "LegendPosition", "Syncfusion.UI.Xaml.Charts.LegendPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_ChartLegend_LegendPosition;
                xamlMember.Setter = set_137_ChartLegend_LegendPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.ItemMargin":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ItemMargin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_ChartLegend_ItemMargin;
                xamlMember.Setter = set_138_ChartLegend_ItemMargin;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_ChartLegend_Header;
                xamlMember.Setter = set_139_ChartLegend_Header;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.HeaderTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_ChartLegend_HeaderTemplate;
                xamlMember.Setter = set_140_ChartLegend_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.CornerRadius":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "CornerRadius", "Windows.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_ChartLegend_CornerRadius;
                xamlMember.Setter = set_141_ChartLegend_CornerRadius;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.CheckBoxVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "CheckBoxVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_ChartLegend_CheckBoxVisibility;
                xamlMember.Setter = set_142_ChartLegend_CheckBoxVisibility;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.ToggleSeriesVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "ToggleSeriesVisibility", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_ChartLegend_ToggleSeriesVisibility;
                xamlMember.Setter = set_143_ChartLegend_ToggleSeriesVisibility;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.IconVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "IconVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_ChartLegend_IconVisibility;
                xamlMember.Setter = set_144_ChartLegend_IconVisibility;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.IconWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "IconWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_ChartLegend_IconWidth;
                xamlMember.Setter = set_145_ChartLegend_IconWidth;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.IconHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "IconHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_ChartLegend_IconHeight;
                xamlMember.Setter = set_146_ChartLegend_IconHeight;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetX":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "OffsetX", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_ChartLegend_OffsetX;
                xamlMember.Setter = set_147_ChartLegend_OffsetX;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.Series":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Series", "Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_ChartLegend_Series;
                xamlMember.Setter = set_148_ChartLegend_Series;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetY":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "OffsetY", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_ChartLegend_OffsetY;
                xamlMember.Setter = set_149_ChartLegend_OffsetY;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Type":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Type", "String");
                xamlMember.Getter = get_150_SetterValueBindingHelper_Type;
                xamlMember.Setter = set_150_SetterValueBindingHelper_Type;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Property":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Property", "String");
                xamlMember.Getter = get_151_SetterValueBindingHelper_Property;
                xamlMember.Setter = set_151_SetterValueBindingHelper_Property;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Binding":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Binding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_152_SetterValueBindingHelper_Binding;
                xamlMember.Setter = set_152_SetterValueBindingHelper_Binding;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Values":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "Values", "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>");
                xamlMember.Getter = get_153_SetterValueBindingHelper_Values;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.PropertyBinding":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlMember(this, "PropertyBinding", "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_154_SetterValueBindingHelper_PropertyBinding;
                xamlMember.Setter = set_154_SetterValueBindingHelper_PropertyBinding;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlSystemBaseType
    {
        global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Syncfusion.SampleBrowser.UWP.PivotChart.Syncfusion_SampleBrowser_UWP_PivotChart_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

