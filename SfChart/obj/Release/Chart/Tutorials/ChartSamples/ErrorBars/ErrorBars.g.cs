#region Copyright Syncfusion Inc. 2001-2021.
// Copyright Syncfusion Inc. 2001-2021. All rights reserved.
// Use of this code is subject to the terms of our license.
// A copy of the current license can be obtained at any time by e-mailing
// licensing@syncfusion.com. Any infringement will be prosecuted under
// applicable laws. 
#endregion
#pragma checksum "D:\Git\RP\SfChart-xaml\UWP\Samples\SfChart\Chart\Tutorials\ChartSamples\ErrorBars\DeviceFamily-Mobile\ErrorBars.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "231FDC0F82BF21CE863F2084529A0CA8"
#pragma checksum "D:\Git\RP\SfChart-xaml\UWP\Samples\SfChart\Chart\Tutorials\ChartSamples\ErrorBars\ErrorBars.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "CDF1BDD0B453D0AC473C3C3CDD81E3E0"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Syncfusion.SampleBrowser.UWP.SfChart
{
    partial class ErrorBars : 
        global::Common.SampleLayout, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Chart\Tutorials\ChartSamples\ErrorBars\DeviceFamily-Mobile\ErrorBars.xaml line 15
                {
                    this.mainGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 2: // Chart\Tutorials\ChartSamples\ErrorBars\DeviceFamily-Mobile\ErrorBars.xaml line 27
                {
                    this.sfchart = (global::Syncfusion.UI.Xaml.Charts.SfChart)(target);
                }
                break;
            case 3: // Chart\Tutorials\ChartSamples\ErrorBars\DeviceFamily-Mobile\ErrorBars.xaml line 48
                {
                    this.Errorbar = (global::Syncfusion.UI.Xaml.Charts.ErrorBarSeries)(target);
                }
                break;
            case 4: // Chart\Tutorials\ChartSamples\ErrorBars\ErrorBars.xaml line 17
                {
                    this.mainGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 5: // Chart\Tutorials\ChartSamples\ErrorBars\ErrorBars.xaml line 20
                {
                    this.sfchart = (global::Syncfusion.UI.Xaml.Charts.SfChart)(target);
                }
                break;
            case 6: // Chart\Tutorials\ChartSamples\ErrorBars\ErrorBars.xaml line 33
                {
                    this.Errorbar = (global::Syncfusion.UI.Xaml.Charts.ErrorBarSeries)(target);
                }
                break;
            case 7: // Chart\Tutorials\ChartSamples\ErrorBars\ErrorBars.xaml line 39
                {
                    this.horizontalLineStyle = (global::Syncfusion.UI.Xaml.Charts.LineStyle)(target);
                }
                break;
            case 8: // Chart\Tutorials\ChartSamples\ErrorBars\ErrorBars.xaml line 80
                {
                    this.TypeCombo = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)this.TypeCombo).SelectionChanged += this.OnTypeSelectionChanged;
                }
                break;
            case 9: // Chart\Tutorials\ChartSamples\ErrorBars\ErrorBars.xaml line 91
                {
                    this.ModeCombo = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)this.ModeCombo).SelectionChanged += this.OnModeSelectionChanged;
                }
                break;
            case 10: // Chart\Tutorials\ChartSamples\ErrorBars\ErrorBars.xaml line 99
                {
                    global::Windows.UI.Xaml.Controls.TextBox element10 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    ((global::Windows.UI.Xaml.Controls.TextBox)element10).TextChanged += this.OnHorizontalTextChanged;
                }
                break;
            case 11: // Chart\Tutorials\ChartSamples\ErrorBars\ErrorBars.xaml line 104
                {
                    global::Windows.UI.Xaml.Controls.TextBox element11 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    ((global::Windows.UI.Xaml.Controls.TextBox)element11).TextChanged += this.OnVerticalTextChanged;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            return returnValue;
        }
    }
}

