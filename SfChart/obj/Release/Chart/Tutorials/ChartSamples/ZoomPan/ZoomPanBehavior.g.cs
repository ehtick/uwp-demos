#region Copyright Syncfusion Inc. 2001-2021.
// Copyright Syncfusion Inc. 2001-2021. All rights reserved.
// Use of this code is subject to the terms of our license.
// A copy of the current license can be obtained at any time by e-mailing
// licensing@syncfusion.com. Any infringement will be prosecuted under
// applicable laws. 
#endregion
#pragma checksum "D:\Git\RP\SfChart-xaml\UWP\Samples\SfChart\Chart\Tutorials\ChartSamples\ZoomPan\DeviceFamily-Mobile\ZoomPanBehavior.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "CEA5D8CD616869775795D1A2FBDBE2D1"
#pragma checksum "D:\Git\RP\SfChart-xaml\UWP\Samples\SfChart\Chart\Tutorials\ChartSamples\ZoomPan\ZoomPanBehavior.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "F7EB5A15F29D6EC3CB765215DDDAE675"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Syncfusion.SampleBrowser.UWP.SfChart
{
    partial class ZoomPanBehavior : 
        global::Common.SampleLayout, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Chart\Tutorials\ChartSamples\ZoomPan\DeviceFamily-Mobile\ZoomPanBehavior.xaml line 14
                {
                    this.MainGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 2: // Chart\Tutorials\ChartSamples\ZoomPan\DeviceFamily-Mobile\ZoomPanBehavior.xaml line 37
                {
                    this.zoomPan = (global::Syncfusion.UI.Xaml.Charts.SfChart)(target);
                    ((global::Syncfusion.UI.Xaml.Charts.SfChart)this.zoomPan).Loaded += this.zoomPan_Loaded;
                }
                break;
            case 3: // Chart\Tutorials\ChartSamples\ZoomPan\DeviceFamily-Mobile\ZoomPanBehavior.xaml line 54
                {
                    this.fastLineSeries = (global::Syncfusion.UI.Xaml.Charts.FastLineSeries)(target);
                }
                break;
            case 4: // Chart\Tutorials\ChartSamples\ZoomPan\ZoomPanBehavior.xaml line 16
                {
                    this.MainGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 5: // Chart\Tutorials\ChartSamples\ZoomPan\ZoomPanBehavior.xaml line 22
                {
                    this.zoomPan = (global::Syncfusion.UI.Xaml.Charts.SfChart)(target);
                    ((global::Syncfusion.UI.Xaml.Charts.SfChart)this.zoomPan).Loaded += this.zoomPan_Loaded;
                }
                break;
            case 6: // Chart\Tutorials\ChartSamples\ZoomPan\ZoomPanBehavior.xaml line 35
                {
                    this.fastLineSeries = (global::Syncfusion.UI.Xaml.Charts.FastLineSeries)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            return returnValue;
        }
    }
}

