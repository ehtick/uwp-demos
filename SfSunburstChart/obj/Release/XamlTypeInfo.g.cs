//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[67];
            _typeNameTable[0] = "Common.SampleLayout";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[3] = "String";
            _typeNameTable[4] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[5] = "System.Windows.Input.ICommand";
            _typeNameTable[6] = "Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel";
            _typeNameTable[7] = "Object";
            _typeNameTable[8] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>";
            _typeNameTable[9] = "System.Collections.ObjectModel.Collection`1<Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>";
            _typeNameTable[10] = "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model";
            _typeNameTable[11] = "Double";
            _typeNameTable[12] = "Syncfusion.SampleBrowser.UWP.SfSunburstChart.ToolTipConverter";
            _typeNameTable[13] = "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart";
            _typeNameTable[14] = "System.Collections.IEnumerable";
            _typeNameTable[15] = "Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette";
            _typeNameTable[16] = "System.Enum";
            _typeNameTable[17] = "System.ValueType";
            _typeNameTable[18] = "Boolean";
            _typeNameTable[19] = "Int32";
            _typeNameTable[20] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>";
            _typeNameTable[21] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>";
            _typeNameTable[22] = "Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel";
            _typeNameTable[23] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[24] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>";
            _typeNameTable[25] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>";
            _typeNameTable[26] = "Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior";
            _typeNameTable[27] = "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo";
            _typeNameTable[28] = "Syncfusion.UI.Xaml.SunburstChart.SunburstColorModel";
            _typeNameTable[29] = "Syncfusion.UI.Xaml.SunburstChart.AnimationType";
            _typeNameTable[30] = "Syncfusion.UI.Xaml.SunburstChart.SunburstLegend";
            _typeNameTable[31] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[32] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[33] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>";
            _typeNameTable[34] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>";
            _typeNameTable[35] = "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment";
            _typeNameTable[36] = "System.Collections.Generic.List`1<Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>";
            _typeNameTable[37] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>";
            _typeNameTable[38] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>";
            _typeNameTable[39] = "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel";
            _typeNameTable[40] = "Windows.UI.Xaml.Media.FontFamily";
            _typeNameTable[41] = "Windows.UI.Text.FontStyle";
            _typeNameTable[42] = "Windows.UI.Text.FontWeight";
            _typeNameTable[43] = "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior";
            _typeNameTable[44] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[45] = "Windows.UI.Xaml.HorizontalAlignment";
            _typeNameTable[46] = "Windows.UI.Xaml.VerticalAlignment";
            _typeNameTable[47] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[48] = "Syncfusion.UI.Xaml.SunburstChart.LabelRotationMode";
            _typeNameTable[49] = "Syncfusion.UI.Xaml.SunburstChart.LabelOverflowMode";
            _typeNameTable[50] = "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Animation";
            _typeNameTable[51] = "Syncfusion.UI.Xaml.SunburstChart.ChartDock";
            _typeNameTable[52] = "Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon";
            _typeNameTable[53] = "Syncfusion.UI.Xaml.SunburstChart.LegendClickAction";
            _typeNameTable[54] = "Syncfusion.SampleBrowser.UWP.SfSunburstChart.GettingStarted";
            _typeNameTable[55] = "Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior";
            _typeNameTable[56] = "Syncfusion.UI.Xaml.SunburstChart.SelectionMode";
            _typeNameTable[57] = "Syncfusion.UI.Xaml.SunburstChart.SelectionType";
            _typeNameTable[58] = "Syncfusion.UI.Xaml.SunburstChart.SelectionDisplayMode";
            _typeNameTable[59] = "Windows.UI.Core.CoreCursorType";
            _typeNameTable[60] = "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Selection";
            _typeNameTable[61] = "Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior";
            _typeNameTable[62] = "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Zoom";
            _typeNameTable[63] = "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper";
            _typeNameTable[64] = "Windows.UI.Xaml.Data.Binding";
            _typeNameTable[65] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>";
            _typeNameTable[66] = "Windows.UI.Xaml.FrameworkElement";

            _typeTable = new global::System.Type[67];
            _typeTable[0] = typeof(global::Common.SampleLayout);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[3] = typeof(global::System.String);
            _typeTable[4] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[5] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[6] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel);
            _typeTable[7] = typeof(global::System.Object);
            _typeTable[8] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>);
            _typeTable[9] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>);
            _typeTable[10] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model);
            _typeTable[11] = typeof(global::System.Double);
            _typeTable[12] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.ToolTipConverter);
            _typeTable[13] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart);
            _typeTable[14] = typeof(global::System.Collections.IEnumerable);
            _typeTable[15] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette);
            _typeTable[16] = typeof(global::System.Enum);
            _typeTable[17] = typeof(global::System.ValueType);
            _typeTable[18] = typeof(global::System.Boolean);
            _typeTable[19] = typeof(global::System.Int32);
            _typeTable[20] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>);
            _typeTable[21] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>);
            _typeTable[22] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel);
            _typeTable[23] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[24] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>);
            _typeTable[25] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>);
            _typeTable[26] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior);
            _typeTable[27] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo);
            _typeTable[28] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorModel);
            _typeTable[29] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.AnimationType);
            _typeTable[30] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[32] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[33] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>);
            _typeTable[34] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>);
            _typeTable[35] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment);
            _typeTable[36] = typeof(global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>);
            _typeTable[38] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>);
            _typeTable[39] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel);
            _typeTable[40] = typeof(global::Windows.UI.Xaml.Media.FontFamily);
            _typeTable[41] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[42] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[43] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior);
            _typeTable[44] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[45] = typeof(global::Windows.UI.Xaml.HorizontalAlignment);
            _typeTable[46] = typeof(global::Windows.UI.Xaml.VerticalAlignment);
            _typeTable[47] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[48] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.LabelRotationMode);
            _typeTable[49] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.LabelOverflowMode);
            _typeTable[50] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Animation);
            _typeTable[51] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.ChartDock);
            _typeTable[52] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon);
            _typeTable[53] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.LegendClickAction);
            _typeTable[54] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.GettingStarted);
            _typeTable[55] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior);
            _typeTable[56] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SelectionMode);
            _typeTable[57] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SelectionType);
            _typeTable[58] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SelectionDisplayMode);
            _typeTable[59] = typeof(global::Windows.UI.Core.CoreCursorType);
            _typeTable[60] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Selection);
            _typeTable[61] = typeof(global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior);
            _typeTable[62] = typeof(global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Zoom);
            _typeTable[63] = typeof(global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper);
            _typeTable[64] = typeof(global::Windows.UI.Xaml.Data.Binding);
            _typeTable[65] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>);
            _typeTable[66] = typeof(global::Windows.UI.Xaml.FrameworkElement);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_SampleLayout() { return new global::Common.SampleLayout(); }
        private object Activate_6_ViewModel() { return new global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel(); }
        private object Activate_8_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>(); }
        private object Activate_9_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>(); }
        private object Activate_10_Model() { return new global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model(); }
        private object Activate_12_ToolTipConverter() { return new global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.ToolTipConverter(); }
        private object Activate_13_SfSunburstChart() { return new global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart(); }
        private object Activate_20_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>(); }
        private object Activate_21_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>(); }
        private object Activate_22_SunburstHierarchicalLevel() { return new global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel(); }
        private object Activate_24_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>(); }
        private object Activate_25_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>(); }
        private object Activate_27_SunburstDataLabelInfo() { return new global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo(); }
        private object Activate_28_SunburstColorModel() { return new global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorModel(); }
        private object Activate_30_SunburstLegend() { return new global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend(); }
        private object Activate_33_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>(); }
        private object Activate_34_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>(); }
        private object Activate_35_SunburstSegment() { return new global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment(); }
        private object Activate_36_List() { return new global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>(); }
        private object Activate_37_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>(); }
        private object Activate_38_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>(); }
        private object Activate_39_SunburstDataLabel() { return new global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel(); }
        private object Activate_43_SunburstToolTipBehavior() { return new global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior(); }
        private object Activate_50_Animation() { return new global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Animation(); }
        private object Activate_54_GettingStarted() { return new global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.GettingStarted(); }
        private object Activate_55_SunburstSelectionBehavior() { return new global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior(); }
        private object Activate_60_Selection() { return new global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Selection(); }
        private object Activate_61_SunburstZoomingBehavior() { return new global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior(); }
        private object Activate_62_Zoom() { return new global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Zoom(); }
        private object Activate_63_SetterValueBindingHelper() { return new global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper(); }
        private object Activate_65_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>(); }
        private void VectorAdd_8_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>)instance;
            var newItem = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)item;
            collection.Add(newItem);
        }
        private void VectorAdd_9_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>)instance;
            var newItem = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)item;
            collection.Add(newItem);
        }
        private void VectorAdd_20_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_21_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_24_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior)item;
            collection.Add(newItem);
        }
        private void VectorAdd_25_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior)item;
            collection.Add(newItem);
        }
        private void VectorAdd_33_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)item;
            collection.Add(newItem);
        }
        private void VectorAdd_34_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)item;
            collection.Add(newItem);
        }
        private void VectorAdd_36_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_38_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_65_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Common.SampleLayout
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_0_SampleLayout;
                userType.AddMemberName("Sample");
                userType.AddMemberName("Setting");
                userType.AddMemberName("Header");
                userType.AddMemberName("OptionVisibility");
                userType.AddMemberName("FontIcons");
                userType.AddMemberName("Pathstring");
                userType.AddMemberName("ClickCommand");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  String
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  System.Windows.Input.ICommand
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 6:   //  Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_ViewModel;
                userType.AddMemberName("DataSource");
                userType.AddMemberName("Population_Data");
                userType.AddMemberName("Population_Data_Selection");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  Object
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>"));
                userType.CollectionAdd = VectorAdd_8_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 9:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_Collection;
                userType.CollectionAdd = VectorAdd_9_Collection;
                xamlType = userType;
                break;

            case 10:   //  Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_Model;
                userType.AddMemberName("JobDescription");
                userType.AddMemberName("JobGroup");
                userType.AddMemberName("JobRole");
                userType.AddMemberName("EmployeesCount");
                userType.AddMemberName("Value");
                userType.AddMemberName("Continent");
                userType.AddMemberName("Country");
                userType.AddMemberName("State");
                userType.AddMemberName("Population");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  Double
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Syncfusion.SampleBrowser.UWP.SfSunburstChart.ToolTipConverter
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_12_ToolTipConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_13_SfSunburstChart;
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("ValueMemberPath");
                userType.AddMemberName("Palette");
                userType.AddMemberName("EnableAnimation");
                userType.AddMemberName("AnimationDuration");
                userType.AddMemberName("Header");
                userType.AddMemberName("Levels");
                userType.AddMemberName("Behaviors");
                userType.AddMemberName("DataLabelInfo");
                userType.AddMemberName("InnerRadius");
                userType.AddMemberName("Radius");
                userType.AddMemberName("ColorModel");
                userType.AddMemberName("AnimationType");
                userType.AddMemberName("Legend");
                userType.AddMemberName("Stroke");
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("StartAngle");
                userType.AddMemberName("EndAngle");
                userType.AddMemberName("Segments");
                userType.AddMemberName("DataLabels");
                xamlType = userType;
                break;

            case 14:   //  System.Collections.IEnumerable
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 15:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Metro", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.Metro);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.Custom);
                userType.AddEnumValue("AutumnBright", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.AutumnBright);
                userType.AddEnumValue("FloraHues", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.FloraHues);
                userType.AddEnumValue("Pineapple", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.Pineapple);
                userType.AddEnumValue("TomatoSpectrum", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.TomatoSpectrum);
                userType.AddEnumValue("RedChrome", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.RedChrome);
                userType.AddEnumValue("PurpleChrome", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.PurpleChrome);
                userType.AddEnumValue("BlueChrome", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.BlueChrome);
                userType.AddEnumValue("GreenChrome", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.GreenChrome);
                userType.AddEnumValue("Elite", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.Elite);
                userType.AddEnumValue("SandyBeach", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.SandyBeach);
                userType.AddEnumValue("LightCandy", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.LightCandy);
                userType.AddEnumValue("Natural", global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette.Natural);
                xamlType = userType;
                break;

            case 16:   //  System.Enum
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 17:   //  System.ValueType
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 18:   //  Boolean
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  Int32
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>"));
                userType.CollectionAdd = VectorAdd_20_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_21_Collection;
                userType.CollectionAdd = VectorAdd_21_Collection;
                xamlType = userType;
                break;

            case 22:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_22_SunburstHierarchicalLevel;
                userType.AddMemberName("GroupMemberPath");
                xamlType = userType;
                break;

            case 23:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>"));
                userType.CollectionAdd = VectorAdd_24_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_25_Collection;
                userType.CollectionAdd = VectorAdd_25_Collection;
                xamlType = userType;
                break;

            case 26:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 27:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_27_SunburstDataLabelInfo;
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("ShowLabel");
                userType.AddMemberName("LabelTemplate");
                userType.AddMemberName("LabelRotationMode");
                userType.AddMemberName("LabelOverflowMode");
                xamlType = userType;
                break;

            case 28:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstColorModel
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  Syncfusion.UI.Xaml.SunburstChart.AnimationType
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Rotation", global::Syncfusion.UI.Xaml.SunburstChart.AnimationType.Rotation);
                userType.AddEnumValue("FadeIn", global::Syncfusion.UI.Xaml.SunburstChart.AnimationType.FadeIn);
                xamlType = userType;
                break;

            case 30:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstLegend
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_30_SunburstLegend;
                userType.AddMemberName("DockPosition");
                userType.AddMemberName("LegendIcon");
                userType.AddMemberName("LegendIconTemplate");
                userType.AddMemberName("ClickAction");
                userType.AddMemberName("IconWidth");
                userType.AddMemberName("IconHeight");
                userType.AddMemberName("ItemMargin");
                xamlType = userType;
                break;

            case 31:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 33:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>"));
                userType.CollectionAdd = VectorAdd_33_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_34_Collection;
                userType.CollectionAdd = VectorAdd_34_Collection;
                xamlType = userType;
                break;

            case 35:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstSegment
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_35_SunburstSegment;
                userType.AddMemberName("Category");
                userType.AddMemberName("Value");
                userType.AddMemberName("Interior");
                userType.AddMemberName("Opacity");
                userType.AddMemberName("Stroke");
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("CurrentLevel");
                userType.AddMemberName("SliceIndex");
                userType.AddMemberName("HasChild");
                userType.AddMemberName("HasParent");
                userType.AddMemberName("Childs");
                userType.AddMemberName("Parent");
                xamlType = userType;
                break;

            case 36:   //  System.Collections.Generic.List`1<Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_36_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>"));
                userType.CollectionAdd = VectorAdd_37_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_Collection;
                userType.CollectionAdd = VectorAdd_38_Collection;
                xamlType = userType;
                break;

            case 39:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_39_SunburstDataLabel;
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("Category");
                userType.AddMemberName("Value");
                userType.AddMemberName("LabelWidth");
                xamlType = userType;
                break;

            case 40:   //  Windows.UI.Xaml.Media.FontFamily
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 41:   //  Windows.UI.Text.FontStyle
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 42:   //  Windows.UI.Text.FontWeight
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 43:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior"));
                userType.Activator = Activate_43_SunburstToolTipBehavior;
                userType.AddMemberName("ToolTipTemplate");
                userType.AddMemberName("ShowToolTip");
                userType.AddMemberName("ShowDuration");
                userType.AddMemberName("InitialShowDelay");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("VerticalOffset");
                userType.AddMemberName("HorizontalAlignment");
                userType.AddMemberName("VerticalAlignment");
                userType.AddMemberName("Margin");
                userType.AddMemberName("EnableAnimation");
                userType.AddMemberName("AnimationDuration");
                xamlType = userType;
                break;

            case 44:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 45:   //  Windows.UI.Xaml.HorizontalAlignment
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 46:   //  Windows.UI.Xaml.VerticalAlignment
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 47:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 48:   //  Syncfusion.UI.Xaml.SunburstChart.LabelRotationMode
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Angle", global::Syncfusion.UI.Xaml.SunburstChart.LabelRotationMode.Angle);
                userType.AddEnumValue("Normal", global::Syncfusion.UI.Xaml.SunburstChart.LabelRotationMode.Normal);
                xamlType = userType;
                break;

            case 49:   //  Syncfusion.UI.Xaml.SunburstChart.LabelOverflowMode
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Trim", global::Syncfusion.UI.Xaml.SunburstChart.LabelOverflowMode.Trim);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.SunburstChart.LabelOverflowMode.Hide);
                xamlType = userType;
                break;

            case 50:   //  Syncfusion.SampleBrowser.UWP.SfSunburstChart.Animation
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_50_Animation;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 51:   //  Syncfusion.UI.Xaml.SunburstChart.ChartDock
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Syncfusion.UI.Xaml.SunburstChart.ChartDock.Left);
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.SunburstChart.ChartDock.Top);
                userType.AddEnumValue("Right", global::Syncfusion.UI.Xaml.SunburstChart.ChartDock.Right);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.SunburstChart.ChartDock.Bottom);
                xamlType = userType;
                break;

            case 52:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Circle", global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon.Circle);
                userType.AddEnumValue("Cross", global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon.Cross);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon.Custom);
                userType.AddEnumValue("Diamond", global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon.Diamond);
                userType.AddEnumValue("Pentagon", global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon.Pentagon);
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon.Rectangle);
                userType.AddEnumValue("Triangle", global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon.Triangle);
                xamlType = userType;
                break;

            case 53:   //  Syncfusion.UI.Xaml.SunburstChart.LegendClickAction
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("ToggleSegmentVisibility", global::Syncfusion.UI.Xaml.SunburstChart.LegendClickAction.ToggleSegmentVisibility);
                userType.AddEnumValue("ToggleSegmentSelection", global::Syncfusion.UI.Xaml.SunburstChart.LegendClickAction.ToggleSegmentSelection);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.SunburstChart.LegendClickAction.None);
                xamlType = userType;
                break;

            case 54:   //  Syncfusion.SampleBrowser.UWP.SfSunburstChart.GettingStarted
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_54_GettingStarted;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior"));
                userType.Activator = Activate_55_SunburstSelectionBehavior;
                userType.AddMemberName("SelectionBrush");
                userType.AddMemberName("EnableSelection");
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("SelectionType");
                userType.AddMemberName("SelectionStrokeThickness");
                userType.AddMemberName("SelectionStrokeBrush");
                userType.AddMemberName("SelectionDisplayMode");
                userType.AddMemberName("Opacity");
                userType.AddMemberName("SelectionCursor");
                xamlType = userType;
                break;

            case 56:   //  Syncfusion.UI.Xaml.SunburstChart.SelectionMode
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("MouseMove", global::Syncfusion.UI.Xaml.SunburstChart.SelectionMode.MouseMove);
                userType.AddEnumValue("MouseClick", global::Syncfusion.UI.Xaml.SunburstChart.SelectionMode.MouseClick);
                userType.AddEnumValue("Both", global::Syncfusion.UI.Xaml.SunburstChart.SelectionMode.Both);
                xamlType = userType;
                break;

            case 57:   //  Syncfusion.UI.Xaml.SunburstChart.SelectionType
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Child", global::Syncfusion.UI.Xaml.SunburstChart.SelectionType.Child);
                userType.AddEnumValue("Group", global::Syncfusion.UI.Xaml.SunburstChart.SelectionType.Group);
                userType.AddEnumValue("Single", global::Syncfusion.UI.Xaml.SunburstChart.SelectionType.Single);
                userType.AddEnumValue("Parent", global::Syncfusion.UI.Xaml.SunburstChart.SelectionType.Parent);
                xamlType = userType;
                break;

            case 58:   //  Syncfusion.UI.Xaml.SunburstChart.SelectionDisplayMode
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("HighlightByColor", global::Syncfusion.UI.Xaml.SunburstChart.SelectionDisplayMode.HighlightByColor);
                userType.AddEnumValue("HighlightByOpacity", global::Syncfusion.UI.Xaml.SunburstChart.SelectionDisplayMode.HighlightByOpacity);
                userType.AddEnumValue("HighlightByStrokeColor", global::Syncfusion.UI.Xaml.SunburstChart.SelectionDisplayMode.HighlightByStrokeColor);
                xamlType = userType;
                break;

            case 59:   //  Windows.UI.Core.CoreCursorType
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Arrow", global::Windows.UI.Core.CoreCursorType.Arrow);
                userType.AddEnumValue("Cross", global::Windows.UI.Core.CoreCursorType.Cross);
                userType.AddEnumValue("Custom", global::Windows.UI.Core.CoreCursorType.Custom);
                userType.AddEnumValue("Hand", global::Windows.UI.Core.CoreCursorType.Hand);
                userType.AddEnumValue("Help", global::Windows.UI.Core.CoreCursorType.Help);
                userType.AddEnumValue("IBeam", global::Windows.UI.Core.CoreCursorType.IBeam);
                userType.AddEnumValue("SizeAll", global::Windows.UI.Core.CoreCursorType.SizeAll);
                userType.AddEnumValue("SizeNortheastSouthwest", global::Windows.UI.Core.CoreCursorType.SizeNortheastSouthwest);
                userType.AddEnumValue("SizeNorthSouth", global::Windows.UI.Core.CoreCursorType.SizeNorthSouth);
                userType.AddEnumValue("SizeNorthwestSoutheast", global::Windows.UI.Core.CoreCursorType.SizeNorthwestSoutheast);
                userType.AddEnumValue("SizeWestEast", global::Windows.UI.Core.CoreCursorType.SizeWestEast);
                userType.AddEnumValue("UniversalNo", global::Windows.UI.Core.CoreCursorType.UniversalNo);
                userType.AddEnumValue("UpArrow", global::Windows.UI.Core.CoreCursorType.UpArrow);
                userType.AddEnumValue("Wait", global::Windows.UI.Core.CoreCursorType.Wait);
                userType.AddEnumValue("Pin", global::Windows.UI.Core.CoreCursorType.Pin);
                userType.AddEnumValue("Person", global::Windows.UI.Core.CoreCursorType.Person);
                xamlType = userType;
                break;

            case 60:   //  Syncfusion.SampleBrowser.UWP.SfSunburstChart.Selection
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_60_Selection;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 61:   //  Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior"));
                userType.Activator = Activate_61_SunburstZoomingBehavior;
                userType.AddMemberName("EnableZooming");
                userType.AddMemberName("ToolBarHorizontalAlignment");
                userType.AddMemberName("ToolBarVerticalAlignment");
                userType.AddMemberName("ToolBarItemHeight");
                userType.AddMemberName("ToolBarItemWidth");
                userType.AddMemberName("ToolBarItemMargin");
                userType.AddMemberName("ToolbarOffsetX");
                userType.AddMemberName("ToolbarOffsetY");
                xamlType = userType;
                break;

            case 62:   //  Syncfusion.SampleBrowser.UWP.SfSunburstChart.Zoom
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_62_Zoom;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 63:   //  Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_63_SetterValueBindingHelper;
                userType.AddMemberName("Type");
                userType.AddMemberName("Property");
                userType.AddMemberName("Binding");
                userType.AddMemberName("Values");
                userType.AddMemberName("PropertyBinding");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 64:   //  Windows.UI.Xaml.Data.Binding
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 65:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>
                userType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_65_Collection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 66:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Common_2015.Syncfusion_SampleBrowser_UWP_Common_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfGantt.UWP.Syncfusion_SfGantt_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfImageEditor.UWP.Syncfusion_SfImageEditor_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfSmithChart.UWP.Syncfusion_SfSmithChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_SampleLayout_Sample(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Sample;
        }
        private void set_0_SampleLayout_Sample(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Sample = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_1_SampleLayout_Setting(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Setting;
        }
        private void set_1_SampleLayout_Setting(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Setting = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_2_SampleLayout_Header(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Header;
        }
        private void set_2_SampleLayout_Header(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Header = (global::System.String)Value;
        }
        private object get_3_SampleLayout_OptionVisibility(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.OptionVisibility;
        }
        private void set_3_SampleLayout_OptionVisibility(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.OptionVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_4_SampleLayout_FontIcons(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.FontIcons;
        }
        private void set_4_SampleLayout_FontIcons(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.FontIcons = (global::System.String)Value;
        }
        private object get_5_SampleLayout_Pathstring(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Pathstring;
        }
        private void set_5_SampleLayout_Pathstring(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Pathstring = (global::System.String)Value;
        }
        private object get_6_SampleLayout_ClickCommand(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.ClickCommand;
        }
        private object get_7_ViewModel_DataSource(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel)instance;
            return that.DataSource;
        }
        private void set_7_ViewModel_DataSource(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel)instance;
            that.DataSource = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>)Value;
        }
        private object get_8_Model_JobDescription(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            return that.JobDescription;
        }
        private void set_8_Model_JobDescription(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            that.JobDescription = (global::System.String)Value;
        }
        private object get_9_Model_JobGroup(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            return that.JobGroup;
        }
        private void set_9_Model_JobGroup(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            that.JobGroup = (global::System.String)Value;
        }
        private object get_10_Model_JobRole(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            return that.JobRole;
        }
        private void set_10_Model_JobRole(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            that.JobRole = (global::System.String)Value;
        }
        private object get_11_Model_EmployeesCount(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            return that.EmployeesCount;
        }
        private void set_11_Model_EmployeesCount(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            that.EmployeesCount = (global::System.Double)Value;
        }
        private object get_12_Model_Value(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            return that.Value;
        }
        private void set_12_Model_Value(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_13_Model_Continent(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            return that.Continent;
        }
        private void set_13_Model_Continent(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            that.Continent = (global::System.String)Value;
        }
        private object get_14_Model_Country(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            return that.Country;
        }
        private void set_14_Model_Country(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            that.Country = (global::System.String)Value;
        }
        private object get_15_Model_State(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            return that.State;
        }
        private void set_15_Model_State(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            that.State = (global::System.String)Value;
        }
        private object get_16_Model_Population(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            return that.Population;
        }
        private void set_16_Model_Population(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model)instance;
            that.Population = (global::System.Double)Value;
        }
        private object get_17_ViewModel_Population_Data(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel)instance;
            return that.Population_Data;
        }
        private void set_17_ViewModel_Population_Data(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel)instance;
            that.Population_Data = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>)Value;
        }
        private object get_18_ViewModel_Population_Data_Selection(object instance)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel)instance;
            return that.Population_Data_Selection;
        }
        private void set_18_ViewModel_Population_Data_Selection(object instance, object Value)
        {
            var that = (global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel)instance;
            that.Population_Data_Selection = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>)Value;
        }
        private object get_19_SfSunburstChart_ItemsSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.ItemsSource;
        }
        private void set_19_SfSunburstChart_ItemsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.ItemsSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_20_SfSunburstChart_ValueMemberPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.ValueMemberPath;
        }
        private void set_20_SfSunburstChart_ValueMemberPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.ValueMemberPath = (global::System.String)Value;
        }
        private object get_21_SfSunburstChart_Palette(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.Palette;
        }
        private void set_21_SfSunburstChart_Palette(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.Palette = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette)Value;
        }
        private object get_22_SfSunburstChart_EnableAnimation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.EnableAnimation;
        }
        private void set_22_SfSunburstChart_EnableAnimation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.EnableAnimation = (global::System.Boolean)Value;
        }
        private object get_23_SfSunburstChart_AnimationDuration(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.AnimationDuration;
        }
        private void set_23_SfSunburstChart_AnimationDuration(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.AnimationDuration = (global::System.Int32)Value;
        }
        private object get_24_SfSunburstChart_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.Header;
        }
        private void set_24_SfSunburstChart_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_25_SfSunburstChart_Levels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.Levels;
        }
        private void set_25_SfSunburstChart_Levels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.Levels = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>)Value;
        }
        private object get_26_SunburstHierarchicalLevel_GroupMemberPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel)instance;
            return that.GroupMemberPath;
        }
        private void set_26_SunburstHierarchicalLevel_GroupMemberPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel)instance;
            that.GroupMemberPath = (global::System.String)Value;
        }
        private object get_27_SfSunburstChart_Behaviors(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.Behaviors;
        }
        private void set_27_SfSunburstChart_Behaviors(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.Behaviors = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>)Value;
        }
        private object get_28_SfSunburstChart_DataLabelInfo(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.DataLabelInfo;
        }
        private void set_28_SfSunburstChart_DataLabelInfo(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.DataLabelInfo = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)Value;
        }
        private object get_29_SfSunburstChart_InnerRadius(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.InnerRadius;
        }
        private void set_29_SfSunburstChart_InnerRadius(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.InnerRadius = (global::System.Double)Value;
        }
        private object get_30_SfSunburstChart_Radius(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.Radius;
        }
        private void set_30_SfSunburstChart_Radius(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.Radius = (global::System.Double)Value;
        }
        private object get_31_SfSunburstChart_ColorModel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.ColorModel;
        }
        private void set_31_SfSunburstChart_ColorModel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.ColorModel = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstColorModel)Value;
        }
        private object get_32_SfSunburstChart_AnimationType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.AnimationType;
        }
        private void set_32_SfSunburstChart_AnimationType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.AnimationType = (global::Syncfusion.UI.Xaml.SunburstChart.AnimationType)Value;
        }
        private object get_33_SfSunburstChart_Legend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.Legend;
        }
        private void set_33_SfSunburstChart_Legend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.Legend = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)Value;
        }
        private object get_34_SfSunburstChart_Stroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.Stroke;
        }
        private void set_34_SfSunburstChart_Stroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_35_SfSunburstChart_StrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.StrokeThickness;
        }
        private void set_35_SfSunburstChart_StrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_36_SfSunburstChart_StartAngle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.StartAngle;
        }
        private void set_36_SfSunburstChart_StartAngle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.StartAngle = (global::System.Double)Value;
        }
        private object get_37_SfSunburstChart_EndAngle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.EndAngle;
        }
        private void set_37_SfSunburstChart_EndAngle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.EndAngle = (global::System.Double)Value;
        }
        private object get_38_SfSunburstChart_Segments(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.Segments;
        }
        private void set_38_SfSunburstChart_Segments(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.Segments = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>)Value;
        }
        private object get_39_SunburstSegment_Category(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.Category;
        }
        private void set_39_SunburstSegment_Category(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.Category = (global::System.Object)Value;
        }
        private object get_40_SunburstSegment_Value(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.Value;
        }
        private void set_40_SunburstSegment_Value(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_41_SunburstSegment_Interior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.Interior;
        }
        private void set_41_SunburstSegment_Interior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.Interior = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_42_SunburstSegment_Opacity(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.Opacity;
        }
        private void set_42_SunburstSegment_Opacity(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.Opacity = (global::System.Double)Value;
        }
        private object get_43_SunburstSegment_Stroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.Stroke;
        }
        private void set_43_SunburstSegment_Stroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_44_SunburstSegment_StrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.StrokeThickness;
        }
        private void set_44_SunburstSegment_StrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_45_SunburstSegment_CurrentLevel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.CurrentLevel;
        }
        private void set_45_SunburstSegment_CurrentLevel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.CurrentLevel = (global::System.Int32)Value;
        }
        private object get_46_SunburstSegment_SliceIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.SliceIndex;
        }
        private void set_46_SunburstSegment_SliceIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.SliceIndex = (global::System.Int32)Value;
        }
        private object get_47_SunburstSegment_HasChild(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.HasChild;
        }
        private void set_47_SunburstSegment_HasChild(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.HasChild = (global::System.Boolean)Value;
        }
        private object get_48_SunburstSegment_HasParent(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.HasParent;
        }
        private void set_48_SunburstSegment_HasParent(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.HasParent = (global::System.Boolean)Value;
        }
        private object get_49_SunburstSegment_Childs(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.Childs;
        }
        private void set_49_SunburstSegment_Childs(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.Childs = (global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>)Value;
        }
        private object get_50_SunburstSegment_Parent(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            return that.Parent;
        }
        private void set_50_SunburstSegment_Parent(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)instance;
            that.Parent = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSegment)Value;
        }
        private object get_51_SfSunburstChart_DataLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            return that.DataLabels;
        }
        private void set_51_SfSunburstChart_DataLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart)instance;
            that.DataLabels = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>)Value;
        }
        private object get_52_SunburstDataLabel_FontSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            return that.FontSize;
        }
        private void set_52_SunburstDataLabel_FontSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            that.FontSize = (global::System.Int32)Value;
        }
        private object get_53_SunburstDataLabel_FontFamily(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            return that.FontFamily;
        }
        private void set_53_SunburstDataLabel_FontFamily(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_54_SunburstDataLabel_FontStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            return that.FontStyle;
        }
        private void set_54_SunburstDataLabel_FontStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_55_SunburstDataLabel_FontWeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            return that.FontWeight;
        }
        private void set_55_SunburstDataLabel_FontWeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_56_SunburstDataLabel_Foreground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            return that.Foreground;
        }
        private void set_56_SunburstDataLabel_Foreground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_57_SunburstDataLabel_Category(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            return that.Category;
        }
        private void set_57_SunburstDataLabel_Category(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            that.Category = (global::System.Object)Value;
        }
        private object get_58_SunburstDataLabel_Value(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            return that.Value;
        }
        private void set_58_SunburstDataLabel_Value(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_59_SunburstDataLabel_LabelWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            return that.LabelWidth;
        }
        private void set_59_SunburstDataLabel_LabelWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel)instance;
            that.LabelWidth = (global::System.Double)Value;
        }
        private object get_60_SunburstToolTipBehavior_ToolTipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            return that.ToolTipTemplate;
        }
        private void set_60_SunburstToolTipBehavior_ToolTipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            that.ToolTipTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_61_SunburstToolTipBehavior_ShowToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            return that.ShowToolTip;
        }
        private void set_61_SunburstToolTipBehavior_ShowToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            that.ShowToolTip = (global::System.Boolean)Value;
        }
        private object get_62_SunburstToolTipBehavior_ShowDuration(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            return that.ShowDuration;
        }
        private void set_62_SunburstToolTipBehavior_ShowDuration(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            that.ShowDuration = (global::System.Int32)Value;
        }
        private object get_63_SunburstToolTipBehavior_InitialShowDelay(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            return that.InitialShowDelay;
        }
        private void set_63_SunburstToolTipBehavior_InitialShowDelay(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            that.InitialShowDelay = (global::System.Int32)Value;
        }
        private object get_64_SunburstToolTipBehavior_HorizontalOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            return that.HorizontalOffset;
        }
        private void set_64_SunburstToolTipBehavior_HorizontalOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            that.HorizontalOffset = (global::System.Int32)Value;
        }
        private object get_65_SunburstToolTipBehavior_VerticalOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            return that.VerticalOffset;
        }
        private void set_65_SunburstToolTipBehavior_VerticalOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            that.VerticalOffset = (global::System.Int32)Value;
        }
        private object get_66_SunburstToolTipBehavior_HorizontalAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            return that.HorizontalAlignment;
        }
        private void set_66_SunburstToolTipBehavior_HorizontalAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            that.HorizontalAlignment = (global::Windows.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_67_SunburstToolTipBehavior_VerticalAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            return that.VerticalAlignment;
        }
        private void set_67_SunburstToolTipBehavior_VerticalAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            that.VerticalAlignment = (global::Windows.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_68_SunburstToolTipBehavior_Margin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            return that.Margin;
        }
        private void set_68_SunburstToolTipBehavior_Margin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            that.Margin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_69_SunburstToolTipBehavior_EnableAnimation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            return that.EnableAnimation;
        }
        private void set_69_SunburstToolTipBehavior_EnableAnimation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            that.EnableAnimation = (global::System.Boolean)Value;
        }
        private object get_70_SunburstToolTipBehavior_AnimationDuration(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            return that.AnimationDuration;
        }
        private void set_70_SunburstToolTipBehavior_AnimationDuration(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior)instance;
            that.AnimationDuration = (global::System.Int32)Value;
        }
        private object get_71_SunburstDataLabelInfo_FontSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            return that.FontSize;
        }
        private void set_71_SunburstDataLabelInfo_FontSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_72_SunburstDataLabelInfo_FontFamily(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            return that.FontFamily;
        }
        private void set_72_SunburstDataLabelInfo_FontFamily(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_73_SunburstDataLabelInfo_FontStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            return that.FontStyle;
        }
        private void set_73_SunburstDataLabelInfo_FontStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_74_SunburstDataLabelInfo_FontWeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            return that.FontWeight;
        }
        private void set_74_SunburstDataLabelInfo_FontWeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_75_SunburstDataLabelInfo_Foreground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            return that.Foreground;
        }
        private void set_75_SunburstDataLabelInfo_Foreground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_76_SunburstDataLabelInfo_ShowLabel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            return that.ShowLabel;
        }
        private void set_76_SunburstDataLabelInfo_ShowLabel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            that.ShowLabel = (global::System.Boolean)Value;
        }
        private object get_77_SunburstDataLabelInfo_LabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            return that.LabelTemplate;
        }
        private void set_77_SunburstDataLabelInfo_LabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            that.LabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_78_SunburstDataLabelInfo_LabelRotationMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            return that.LabelRotationMode;
        }
        private void set_78_SunburstDataLabelInfo_LabelRotationMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            that.LabelRotationMode = (global::Syncfusion.UI.Xaml.SunburstChart.LabelRotationMode)Value;
        }
        private object get_79_SunburstDataLabelInfo_LabelOverflowMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            return that.LabelOverflowMode;
        }
        private void set_79_SunburstDataLabelInfo_LabelOverflowMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo)instance;
            that.LabelOverflowMode = (global::Syncfusion.UI.Xaml.SunburstChart.LabelOverflowMode)Value;
        }
        private object get_80_SunburstLegend_DockPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            return that.DockPosition;
        }
        private void set_80_SunburstLegend_DockPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            that.DockPosition = (global::Syncfusion.UI.Xaml.SunburstChart.ChartDock)Value;
        }
        private object get_81_SunburstLegend_LegendIcon(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            return that.LegendIcon;
        }
        private void set_81_SunburstLegend_LegendIcon(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            that.LegendIcon = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon)Value;
        }
        private object get_82_SunburstLegend_LegendIconTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            return that.LegendIconTemplate;
        }
        private void set_82_SunburstLegend_LegendIconTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            that.LegendIconTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_83_SunburstLegend_ClickAction(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            return that.ClickAction;
        }
        private void set_83_SunburstLegend_ClickAction(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            that.ClickAction = (global::Syncfusion.UI.Xaml.SunburstChart.LegendClickAction)Value;
        }
        private object get_84_SunburstLegend_IconWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            return that.IconWidth;
        }
        private void set_84_SunburstLegend_IconWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            that.IconWidth = (global::System.Double)Value;
        }
        private object get_85_SunburstLegend_IconHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            return that.IconHeight;
        }
        private void set_85_SunburstLegend_IconHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            that.IconHeight = (global::System.Double)Value;
        }
        private object get_86_SunburstLegend_ItemMargin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            return that.ItemMargin;
        }
        private void set_86_SunburstLegend_ItemMargin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstLegend)instance;
            that.ItemMargin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_87_SunburstSelectionBehavior_SelectionBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            return that.SelectionBrush;
        }
        private void set_87_SunburstSelectionBehavior_SelectionBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            that.SelectionBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_88_SunburstSelectionBehavior_EnableSelection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            return that.EnableSelection;
        }
        private void set_88_SunburstSelectionBehavior_EnableSelection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            that.EnableSelection = (global::System.Boolean)Value;
        }
        private object get_89_SunburstSelectionBehavior_SelectionMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            return that.SelectionMode;
        }
        private void set_89_SunburstSelectionBehavior_SelectionMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            that.SelectionMode = (global::Syncfusion.UI.Xaml.SunburstChart.SelectionMode)Value;
        }
        private object get_90_SunburstSelectionBehavior_SelectionType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            return that.SelectionType;
        }
        private void set_90_SunburstSelectionBehavior_SelectionType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            that.SelectionType = (global::Syncfusion.UI.Xaml.SunburstChart.SelectionType)Value;
        }
        private object get_91_SunburstSelectionBehavior_SelectionStrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            return that.SelectionStrokeThickness;
        }
        private void set_91_SunburstSelectionBehavior_SelectionStrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            that.SelectionStrokeThickness = (global::System.Double)Value;
        }
        private object get_92_SunburstSelectionBehavior_SelectionStrokeBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            return that.SelectionStrokeBrush;
        }
        private void set_92_SunburstSelectionBehavior_SelectionStrokeBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            that.SelectionStrokeBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_93_SunburstSelectionBehavior_SelectionDisplayMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            return that.SelectionDisplayMode;
        }
        private void set_93_SunburstSelectionBehavior_SelectionDisplayMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            that.SelectionDisplayMode = (global::Syncfusion.UI.Xaml.SunburstChart.SelectionDisplayMode)Value;
        }
        private object get_94_SunburstSelectionBehavior_Opacity(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            return that.Opacity;
        }
        private void set_94_SunburstSelectionBehavior_Opacity(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            that.Opacity = (global::System.Double)Value;
        }
        private object get_95_SunburstSelectionBehavior_SelectionCursor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            return that.SelectionCursor;
        }
        private void set_95_SunburstSelectionBehavior_SelectionCursor(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior)instance;
            that.SelectionCursor = (global::Windows.UI.Core.CoreCursorType)Value;
        }
        private object get_96_SunburstZoomingBehavior_EnableZooming(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            return that.EnableZooming;
        }
        private void set_96_SunburstZoomingBehavior_EnableZooming(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            that.EnableZooming = (global::System.Boolean)Value;
        }
        private object get_97_SunburstZoomingBehavior_ToolBarHorizontalAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            return that.ToolBarHorizontalAlignment;
        }
        private void set_97_SunburstZoomingBehavior_ToolBarHorizontalAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            that.ToolBarHorizontalAlignment = (global::Windows.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_98_SunburstZoomingBehavior_ToolBarVerticalAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            return that.ToolBarVerticalAlignment;
        }
        private void set_98_SunburstZoomingBehavior_ToolBarVerticalAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            that.ToolBarVerticalAlignment = (global::Windows.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_99_SunburstZoomingBehavior_ToolBarItemHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            return that.ToolBarItemHeight;
        }
        private void set_99_SunburstZoomingBehavior_ToolBarItemHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            that.ToolBarItemHeight = (global::System.Double)Value;
        }
        private object get_100_SunburstZoomingBehavior_ToolBarItemWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            return that.ToolBarItemWidth;
        }
        private void set_100_SunburstZoomingBehavior_ToolBarItemWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            that.ToolBarItemWidth = (global::System.Double)Value;
        }
        private object get_101_SunburstZoomingBehavior_ToolBarItemMargin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            return that.ToolBarItemMargin;
        }
        private void set_101_SunburstZoomingBehavior_ToolBarItemMargin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            that.ToolBarItemMargin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_102_SunburstZoomingBehavior_ToolbarOffsetX(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            return that.ToolbarOffsetX;
        }
        private void set_102_SunburstZoomingBehavior_ToolbarOffsetX(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            that.ToolbarOffsetX = (global::System.Double)Value;
        }
        private object get_103_SunburstZoomingBehavior_ToolbarOffsetY(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            return that.ToolbarOffsetY;
        }
        private void set_103_SunburstZoomingBehavior_ToolbarOffsetY(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior)instance;
            that.ToolbarOffsetY = (global::System.Double)Value;
        }
        private object get_104_SetterValueBindingHelper_Type(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Type;
        }
        private void set_104_SetterValueBindingHelper_Type(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Type = (global::System.String)Value;
        }
        private object get_105_SetterValueBindingHelper_Property(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Property;
        }
        private void set_105_SetterValueBindingHelper_Property(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Property = (global::System.String)Value;
        }
        private object get_106_SetterValueBindingHelper_Binding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Binding;
        }
        private void set_106_SetterValueBindingHelper_Binding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Binding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_107_SetterValueBindingHelper_Values(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Values;
        }
        private object get_108_SetterValueBindingHelper_PropertyBinding(object instance)
        {
            return global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.GetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance);
        }
        private void set_108_SetterValueBindingHelper_PropertyBinding(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.SetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance, (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)Value);
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember xamlMember = null;
            global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Common.SampleLayout.Sample":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Sample", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_SampleLayout_Sample;
                xamlMember.Setter = set_0_SampleLayout_Sample;
                break;
            case "Common.SampleLayout.Setting":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Setting", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_SampleLayout_Setting;
                xamlMember.Setter = set_1_SampleLayout_Setting;
                break;
            case "Common.SampleLayout.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Header", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_SampleLayout_Header;
                xamlMember.Setter = set_2_SampleLayout_Header;
                break;
            case "Common.SampleLayout.OptionVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "OptionVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_SampleLayout_OptionVisibility;
                xamlMember.Setter = set_3_SampleLayout_OptionVisibility;
                break;
            case "Common.SampleLayout.FontIcons":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "FontIcons", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_SampleLayout_FontIcons;
                xamlMember.Setter = set_4_SampleLayout_FontIcons;
                break;
            case "Common.SampleLayout.Pathstring":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Pathstring", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SampleLayout_Pathstring;
                xamlMember.Setter = set_5_SampleLayout_Pathstring;
                break;
            case "Common.SampleLayout.ClickCommand":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ClickCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_6_SampleLayout_ClickCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel.DataSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "DataSource", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>");
                xamlMember.Getter = get_7_ViewModel_DataSource;
                xamlMember.Setter = set_7_ViewModel_DataSource;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model.JobDescription":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "JobDescription", "String");
                xamlMember.Getter = get_8_Model_JobDescription;
                xamlMember.Setter = set_8_Model_JobDescription;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model.JobGroup":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "JobGroup", "String");
                xamlMember.Getter = get_9_Model_JobGroup;
                xamlMember.Setter = set_9_Model_JobGroup;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model.JobRole":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "JobRole", "String");
                xamlMember.Getter = get_10_Model_JobRole;
                xamlMember.Setter = set_10_Model_JobRole;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model.EmployeesCount":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "EmployeesCount", "Double");
                xamlMember.Getter = get_11_Model_EmployeesCount;
                xamlMember.Setter = set_11_Model_EmployeesCount;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model.Value":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.Getter = get_12_Model_Value;
                xamlMember.Setter = set_12_Model_Value;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model.Continent":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Continent", "String");
                xamlMember.Getter = get_13_Model_Continent;
                xamlMember.Setter = set_13_Model_Continent;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model.Country":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Country", "String");
                xamlMember.Getter = get_14_Model_Country;
                xamlMember.Setter = set_14_Model_Country;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model.State":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "State", "String");
                xamlMember.Getter = get_15_Model_State;
                xamlMember.Setter = set_15_Model_State;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model.Population":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Population", "Double");
                xamlMember.Getter = get_16_Model_Population;
                xamlMember.Setter = set_16_Model_Population;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel.Population_Data":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Population_Data", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>");
                xamlMember.Getter = get_17_ViewModel_Population_Data;
                xamlMember.Setter = set_17_ViewModel_Population_Data;
                break;
            case "Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel.Population_Data_Selection":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.SampleBrowser.UWP.SfSunburstChart.ViewModel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Population_Data_Selection", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.SampleBrowser.UWP.SfSunburstChart.Model>");
                xamlMember.Getter = get_18_ViewModel_Population_Data_Selection;
                xamlMember.Setter = set_18_ViewModel_Population_Data_Selection;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.ItemsSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_SfSunburstChart_ItemsSource;
                xamlMember.Setter = set_19_SfSunburstChart_ItemsSource;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.ValueMemberPath":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ValueMemberPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_SfSunburstChart_ValueMemberPath;
                xamlMember.Setter = set_20_SfSunburstChart_ValueMemberPath;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.Palette":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Palette", "Syncfusion.UI.Xaml.SunburstChart.SunburstColorPalette");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_SfSunburstChart_Palette;
                xamlMember.Setter = set_21_SfSunburstChart_Palette;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.EnableAnimation":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "EnableAnimation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_SfSunburstChart_EnableAnimation;
                xamlMember.Setter = set_22_SfSunburstChart_EnableAnimation;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.AnimationDuration":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "AnimationDuration", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_SfSunburstChart_AnimationDuration;
                xamlMember.Setter = set_23_SfSunburstChart_AnimationDuration;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_SfSunburstChart_Header;
                xamlMember.Setter = set_24_SfSunburstChart_Header;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.Levels":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Levels", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_SfSunburstChart_Levels;
                xamlMember.Setter = set_25_SfSunburstChart_Levels;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel.GroupMemberPath":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstHierarchicalLevel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "GroupMemberPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_SunburstHierarchicalLevel_GroupMemberPath;
                xamlMember.Setter = set_26_SunburstHierarchicalLevel_GroupMemberPath;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.Behaviors":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Behaviors", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstBehavior>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_SfSunburstChart_Behaviors;
                xamlMember.Setter = set_27_SfSunburstChart_Behaviors;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.DataLabelInfo":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "DataLabelInfo", "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_SfSunburstChart_DataLabelInfo;
                xamlMember.Setter = set_28_SfSunburstChart_DataLabelInfo;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.InnerRadius":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "InnerRadius", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_SfSunburstChart_InnerRadius;
                xamlMember.Setter = set_29_SfSunburstChart_InnerRadius;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.Radius":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Radius", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_SfSunburstChart_Radius;
                xamlMember.Setter = set_30_SfSunburstChart_Radius;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.ColorModel":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ColorModel", "Syncfusion.UI.Xaml.SunburstChart.SunburstColorModel");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_SfSunburstChart_ColorModel;
                xamlMember.Setter = set_31_SfSunburstChart_ColorModel;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.AnimationType":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "AnimationType", "Syncfusion.UI.Xaml.SunburstChart.AnimationType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_SfSunburstChart_AnimationType;
                xamlMember.Setter = set_32_SfSunburstChart_AnimationType;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.Legend":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Legend", "Syncfusion.UI.Xaml.SunburstChart.SunburstLegend");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_SfSunburstChart_Legend;
                xamlMember.Setter = set_33_SfSunburstChart_Legend;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.Stroke":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_SfSunburstChart_Stroke;
                xamlMember.Setter = set_34_SfSunburstChart_Stroke;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.StrokeThickness":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_SfSunburstChart_StrokeThickness;
                xamlMember.Setter = set_35_SfSunburstChart_StrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.StartAngle":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "StartAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_SfSunburstChart_StartAngle;
                xamlMember.Setter = set_36_SfSunburstChart_StartAngle;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.EndAngle":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "EndAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_SfSunburstChart_EndAngle;
                xamlMember.Setter = set_37_SfSunburstChart_EndAngle;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.Segments":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Segments", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>");
                xamlMember.Getter = get_38_SfSunburstChart_Segments;
                xamlMember.Setter = set_38_SfSunburstChart_Segments;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.Category":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Category", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_SunburstSegment_Category;
                xamlMember.Setter = set_39_SunburstSegment_Category;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.Value":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_SunburstSegment_Value;
                xamlMember.Setter = set_40_SunburstSegment_Value;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.Interior":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Interior", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_SunburstSegment_Interior;
                xamlMember.Setter = set_41_SunburstSegment_Interior;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.Opacity":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Opacity", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_SunburstSegment_Opacity;
                xamlMember.Setter = set_42_SunburstSegment_Opacity;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.Stroke":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_SunburstSegment_Stroke;
                xamlMember.Setter = set_43_SunburstSegment_Stroke;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.StrokeThickness":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_SunburstSegment_StrokeThickness;
                xamlMember.Setter = set_44_SunburstSegment_StrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.CurrentLevel":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "CurrentLevel", "Int32");
                xamlMember.Getter = get_45_SunburstSegment_CurrentLevel;
                xamlMember.Setter = set_45_SunburstSegment_CurrentLevel;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.SliceIndex":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "SliceIndex", "Int32");
                xamlMember.Getter = get_46_SunburstSegment_SliceIndex;
                xamlMember.Setter = set_46_SunburstSegment_SliceIndex;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.HasChild":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "HasChild", "Boolean");
                xamlMember.Getter = get_47_SunburstSegment_HasChild;
                xamlMember.Setter = set_47_SunburstSegment_HasChild;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.HasParent":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "HasParent", "Boolean");
                xamlMember.Getter = get_48_SunburstSegment_HasParent;
                xamlMember.Setter = set_48_SunburstSegment_HasParent;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.Childs":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Childs", "System.Collections.Generic.List`1<Syncfusion.UI.Xaml.SunburstChart.SunburstSegment>");
                xamlMember.Getter = get_49_SunburstSegment_Childs;
                xamlMember.Setter = set_49_SunburstSegment_Childs;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment.Parent":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Parent", "Syncfusion.UI.Xaml.SunburstChart.SunburstSegment");
                xamlMember.Getter = get_50_SunburstSegment_Parent;
                xamlMember.Setter = set_50_SunburstSegment_Parent;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart.DataLabels":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SfSunburstChart");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "DataLabels", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel>");
                xamlMember.Getter = get_51_SfSunburstChart_DataLabels;
                xamlMember.Setter = set_51_SfSunburstChart_DataLabels;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel.FontSize":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "FontSize", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_SunburstDataLabel_FontSize;
                xamlMember.Setter = set_52_SunburstDataLabel_FontSize;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel.FontFamily":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_SunburstDataLabel_FontFamily;
                xamlMember.Setter = set_53_SunburstDataLabel_FontFamily;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel.FontStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_SunburstDataLabel_FontStyle;
                xamlMember.Setter = set_54_SunburstDataLabel_FontStyle;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel.FontWeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_SunburstDataLabel_FontWeight;
                xamlMember.Setter = set_55_SunburstDataLabel_FontWeight;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel.Foreground":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_SunburstDataLabel_Foreground;
                xamlMember.Setter = set_56_SunburstDataLabel_Foreground;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel.Category":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Category", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_SunburstDataLabel_Category;
                xamlMember.Setter = set_57_SunburstDataLabel_Category;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel.Value":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_SunburstDataLabel_Value;
                xamlMember.Setter = set_58_SunburstDataLabel_Value;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel.LabelWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabel");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "LabelWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_SunburstDataLabel_LabelWidth;
                xamlMember.Setter = set_59_SunburstDataLabel_LabelWidth;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior.ToolTipTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ToolTipTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_SunburstToolTipBehavior_ToolTipTemplate;
                xamlMember.Setter = set_60_SunburstToolTipBehavior_ToolTipTemplate;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior.ShowToolTip":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ShowToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_SunburstToolTipBehavior_ShowToolTip;
                xamlMember.Setter = set_61_SunburstToolTipBehavior_ShowToolTip;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior.ShowDuration":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ShowDuration", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_SunburstToolTipBehavior_ShowDuration;
                xamlMember.Setter = set_62_SunburstToolTipBehavior_ShowDuration;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior.InitialShowDelay":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "InitialShowDelay", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_SunburstToolTipBehavior_InitialShowDelay;
                xamlMember.Setter = set_63_SunburstToolTipBehavior_InitialShowDelay;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior.HorizontalOffset":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_SunburstToolTipBehavior_HorizontalOffset;
                xamlMember.Setter = set_64_SunburstToolTipBehavior_HorizontalOffset;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior.VerticalOffset":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_SunburstToolTipBehavior_VerticalOffset;
                xamlMember.Setter = set_65_SunburstToolTipBehavior_VerticalOffset;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior.HorizontalAlignment":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "HorizontalAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_SunburstToolTipBehavior_HorizontalAlignment;
                xamlMember.Setter = set_66_SunburstToolTipBehavior_HorizontalAlignment;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior.VerticalAlignment":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "VerticalAlignment", "Windows.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_SunburstToolTipBehavior_VerticalAlignment;
                xamlMember.Setter = set_67_SunburstToolTipBehavior_VerticalAlignment;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior.Margin":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Margin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_SunburstToolTipBehavior_Margin;
                xamlMember.Setter = set_68_SunburstToolTipBehavior_Margin;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior.EnableAnimation":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "EnableAnimation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_SunburstToolTipBehavior_EnableAnimation;
                xamlMember.Setter = set_69_SunburstToolTipBehavior_EnableAnimation;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior.AnimationDuration":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstToolTipBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "AnimationDuration", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_SunburstToolTipBehavior_AnimationDuration;
                xamlMember.Setter = set_70_SunburstToolTipBehavior_AnimationDuration;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo.FontSize":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_SunburstDataLabelInfo_FontSize;
                xamlMember.Setter = set_71_SunburstDataLabelInfo_FontSize;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo.FontFamily":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_SunburstDataLabelInfo_FontFamily;
                xamlMember.Setter = set_72_SunburstDataLabelInfo_FontFamily;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo.FontStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_SunburstDataLabelInfo_FontStyle;
                xamlMember.Setter = set_73_SunburstDataLabelInfo_FontStyle;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo.FontWeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_SunburstDataLabelInfo_FontWeight;
                xamlMember.Setter = set_74_SunburstDataLabelInfo_FontWeight;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo.Foreground":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_SunburstDataLabelInfo_Foreground;
                xamlMember.Setter = set_75_SunburstDataLabelInfo_Foreground;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo.ShowLabel":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ShowLabel", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_SunburstDataLabelInfo_ShowLabel;
                xamlMember.Setter = set_76_SunburstDataLabelInfo_ShowLabel;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo.LabelTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "LabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_SunburstDataLabelInfo_LabelTemplate;
                xamlMember.Setter = set_77_SunburstDataLabelInfo_LabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo.LabelRotationMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "LabelRotationMode", "Syncfusion.UI.Xaml.SunburstChart.LabelRotationMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_SunburstDataLabelInfo_LabelRotationMode;
                xamlMember.Setter = set_78_SunburstDataLabelInfo_LabelRotationMode;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo.LabelOverflowMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstDataLabelInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "LabelOverflowMode", "Syncfusion.UI.Xaml.SunburstChart.LabelOverflowMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_SunburstDataLabelInfo_LabelOverflowMode;
                xamlMember.Setter = set_79_SunburstDataLabelInfo_LabelOverflowMode;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstLegend.DockPosition":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "DockPosition", "Syncfusion.UI.Xaml.SunburstChart.ChartDock");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_SunburstLegend_DockPosition;
                xamlMember.Setter = set_80_SunburstLegend_DockPosition;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstLegend.LegendIcon":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "LegendIcon", "Syncfusion.UI.Xaml.SunburstChart.SunburstLegendIcon");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_SunburstLegend_LegendIcon;
                xamlMember.Setter = set_81_SunburstLegend_LegendIcon;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstLegend.LegendIconTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "LegendIconTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_SunburstLegend_LegendIconTemplate;
                xamlMember.Setter = set_82_SunburstLegend_LegendIconTemplate;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstLegend.ClickAction":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ClickAction", "Syncfusion.UI.Xaml.SunburstChart.LegendClickAction");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_SunburstLegend_ClickAction;
                xamlMember.Setter = set_83_SunburstLegend_ClickAction;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstLegend.IconWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "IconWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_SunburstLegend_IconWidth;
                xamlMember.Setter = set_84_SunburstLegend_IconWidth;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstLegend.IconHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "IconHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_SunburstLegend_IconHeight;
                xamlMember.Setter = set_85_SunburstLegend_IconHeight;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstLegend.ItemMargin":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstLegend");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ItemMargin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_SunburstLegend_ItemMargin;
                xamlMember.Setter = set_86_SunburstLegend_ItemMargin;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior.SelectionBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "SelectionBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_SunburstSelectionBehavior_SelectionBrush;
                xamlMember.Setter = set_87_SunburstSelectionBehavior_SelectionBrush;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior.EnableSelection":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "EnableSelection", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_SunburstSelectionBehavior_EnableSelection;
                xamlMember.Setter = set_88_SunburstSelectionBehavior_EnableSelection;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior.SelectionMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "SelectionMode", "Syncfusion.UI.Xaml.SunburstChart.SelectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_SunburstSelectionBehavior_SelectionMode;
                xamlMember.Setter = set_89_SunburstSelectionBehavior_SelectionMode;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior.SelectionType":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "SelectionType", "Syncfusion.UI.Xaml.SunburstChart.SelectionType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_SunburstSelectionBehavior_SelectionType;
                xamlMember.Setter = set_90_SunburstSelectionBehavior_SelectionType;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior.SelectionStrokeThickness":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "SelectionStrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_SunburstSelectionBehavior_SelectionStrokeThickness;
                xamlMember.Setter = set_91_SunburstSelectionBehavior_SelectionStrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior.SelectionStrokeBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "SelectionStrokeBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_SunburstSelectionBehavior_SelectionStrokeBrush;
                xamlMember.Setter = set_92_SunburstSelectionBehavior_SelectionStrokeBrush;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior.SelectionDisplayMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "SelectionDisplayMode", "Syncfusion.UI.Xaml.SunburstChart.SelectionDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_SunburstSelectionBehavior_SelectionDisplayMode;
                xamlMember.Setter = set_93_SunburstSelectionBehavior_SelectionDisplayMode;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior.Opacity":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Opacity", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_SunburstSelectionBehavior_Opacity;
                xamlMember.Setter = set_94_SunburstSelectionBehavior_Opacity;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior.SelectionCursor":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstSelectionBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "SelectionCursor", "Windows.UI.Core.CoreCursorType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_SunburstSelectionBehavior_SelectionCursor;
                xamlMember.Setter = set_95_SunburstSelectionBehavior_SelectionCursor;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior.EnableZooming":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "EnableZooming", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_SunburstZoomingBehavior_EnableZooming;
                xamlMember.Setter = set_96_SunburstZoomingBehavior_EnableZooming;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior.ToolBarHorizontalAlignment":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ToolBarHorizontalAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_SunburstZoomingBehavior_ToolBarHorizontalAlignment;
                xamlMember.Setter = set_97_SunburstZoomingBehavior_ToolBarHorizontalAlignment;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior.ToolBarVerticalAlignment":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ToolBarVerticalAlignment", "Windows.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_SunburstZoomingBehavior_ToolBarVerticalAlignment;
                xamlMember.Setter = set_98_SunburstZoomingBehavior_ToolBarVerticalAlignment;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior.ToolBarItemHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ToolBarItemHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_SunburstZoomingBehavior_ToolBarItemHeight;
                xamlMember.Setter = set_99_SunburstZoomingBehavior_ToolBarItemHeight;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior.ToolBarItemWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ToolBarItemWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_SunburstZoomingBehavior_ToolBarItemWidth;
                xamlMember.Setter = set_100_SunburstZoomingBehavior_ToolBarItemWidth;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior.ToolBarItemMargin":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ToolBarItemMargin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_SunburstZoomingBehavior_ToolBarItemMargin;
                xamlMember.Setter = set_101_SunburstZoomingBehavior_ToolBarItemMargin;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior.ToolbarOffsetX":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ToolbarOffsetX", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_SunburstZoomingBehavior_ToolbarOffsetX;
                xamlMember.Setter = set_102_SunburstZoomingBehavior_ToolbarOffsetX;
                break;
            case "Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior.ToolbarOffsetY":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.SunburstChart.SunburstZoomingBehavior");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "ToolbarOffsetY", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_SunburstZoomingBehavior_ToolbarOffsetY;
                xamlMember.Setter = set_103_SunburstZoomingBehavior_ToolbarOffsetY;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Type":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Type", "String");
                xamlMember.Getter = get_104_SetterValueBindingHelper_Type;
                xamlMember.Setter = set_104_SetterValueBindingHelper_Type;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Property":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Property", "String");
                xamlMember.Getter = get_105_SetterValueBindingHelper_Property;
                xamlMember.Setter = set_105_SetterValueBindingHelper_Property;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Binding":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Binding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_106_SetterValueBindingHelper_Binding;
                xamlMember.Setter = set_106_SetterValueBindingHelper_Binding;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Values":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "Values", "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>");
                xamlMember.Getter = get_107_SetterValueBindingHelper_Values;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.PropertyBinding":
                userType = (global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlMember(this, "PropertyBinding", "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_108_SetterValueBindingHelper_PropertyBinding;
                xamlMember.Setter = set_108_SetterValueBindingHelper_PropertyBinding;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlSystemBaseType
    {
        global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Syncfusion.SampleBrowser.UWP.SfSunburst.Syncfusion_SampleBrowser_UWP_SfSunburstChart_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

