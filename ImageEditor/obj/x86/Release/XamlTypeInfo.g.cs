//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Syncfusion.SampleBrowser.UWP.ImageEditor
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMetaDataProvider __appProvider;
        private global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[39];
            _typeNameTable[0] = "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[2] = "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings";
            _typeNameTable[3] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[4] = "Boolean";
            _typeNameTable[5] = "Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorResizableElements";
            _typeNameTable[6] = "System.Enum";
            _typeNameTable[7] = "System.ValueType";
            _typeNameTable[8] = "Object";
            _typeNameTable[9] = "Windows.Foundation.Rect";
            _typeNameTable[10] = "Windows.Foundation.Size";
            _typeNameTable[11] = "Int32";
            _typeNameTable[12] = "Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorElements";
            _typeNameTable[13] = "Windows.Storage.Streams.IRandomAccessStream";
            _typeNameTable[14] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[15] = "System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.Media.SolidColorBrush>";
            _typeNameTable[16] = "System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.Media.SolidColorBrush>";
            _typeNameTable[17] = "Windows.UI.Xaml.Media.SolidColorBrush";
            _typeNameTable[18] = "Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect";
            _typeNameTable[19] = "Single";
            _typeNameTable[20] = "Double";
            _typeNameTable[21] = "Syncfusion.UI.Xaml.ImageEditor.Enums.PanningMode";
            _typeNameTable[22] = "Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes";
            _typeNameTable[23] = "Syncfusion.UI.Xaml.ImageEditor.ToolbarItem";
            _typeNameTable[24] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>";
            _typeNameTable[25] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>";
            _typeNameTable[26] = "String";
            _typeNameTable[27] = "Syncfusion.SampleBrowser.UWP.ImageEditor.BannerPage";
            _typeNameTable[28] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[29] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[30] = "Syncfusion.SampleBrowser.UWP.ImageEditor.Customization";
            _typeNameTable[31] = "Syncfusion.SampleBrowser.UWP.ImageEditor.CustomView";
            _typeNameTable[32] = "Syncfusion.SampleBrowser.UWP.ImageEditor.FirstPage1";
            _typeNameTable[33] = "Syncfusion.SampleBrowser.UWP.ImageEditor.Serialization";
            _typeNameTable[34] = "Syncfusion.SampleBrowser.UWP.ImageEditor.MainPage";
            _typeNameTable[35] = "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper";
            _typeNameTable[36] = "Windows.UI.Xaml.Data.Binding";
            _typeNameTable[37] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>";
            _typeNameTable[38] = "Windows.UI.Xaml.FrameworkElement";

            _typeTable = new global::System.Type[39];
            _typeTable[0] = typeof(global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[2] = typeof(global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings);
            _typeTable[3] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[4] = typeof(global::System.Boolean);
            _typeTable[5] = typeof(global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorResizableElements);
            _typeTable[6] = typeof(global::System.Enum);
            _typeTable[7] = typeof(global::System.ValueType);
            _typeTable[8] = typeof(global::System.Object);
            _typeTable[9] = typeof(global::Windows.Foundation.Rect);
            _typeTable[10] = typeof(global::Windows.Foundation.Size);
            _typeTable[11] = typeof(global::System.Int32);
            _typeTable[12] = typeof(global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorElements);
            _typeTable[13] = typeof(global::Windows.Storage.Streams.IRandomAccessStream);
            _typeTable[14] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[15] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.SolidColorBrush>);
            _typeTable[16] = typeof(global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.Media.SolidColorBrush>);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.Media.SolidColorBrush);
            _typeTable[18] = typeof(global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect);
            _typeTable[19] = typeof(global::System.Single);
            _typeTable[20] = typeof(global::System.Double);
            _typeTable[21] = typeof(global::Syncfusion.UI.Xaml.ImageEditor.Enums.PanningMode);
            _typeTable[22] = typeof(global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes);
            _typeTable[23] = typeof(global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem);
            _typeTable[24] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>);
            _typeTable[25] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>);
            _typeTable[26] = typeof(global::System.String);
            _typeTable[27] = typeof(global::Syncfusion.SampleBrowser.UWP.ImageEditor.BannerPage);
            _typeTable[28] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[30] = typeof(global::Syncfusion.SampleBrowser.UWP.ImageEditor.Customization);
            _typeTable[31] = typeof(global::Syncfusion.SampleBrowser.UWP.ImageEditor.CustomView);
            _typeTable[32] = typeof(global::Syncfusion.SampleBrowser.UWP.ImageEditor.FirstPage1);
            _typeTable[33] = typeof(global::Syncfusion.SampleBrowser.UWP.ImageEditor.Serialization);
            _typeTable[34] = typeof(global::Syncfusion.SampleBrowser.UWP.ImageEditor.MainPage);
            _typeTable[35] = typeof(global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper);
            _typeTable[36] = typeof(global::Windows.UI.Xaml.Data.Binding);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>);
            _typeTable[38] = typeof(global::Windows.UI.Xaml.FrameworkElement);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_SfImageEditor() { return new global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor(); }
        private object Activate_2_ToolbarSettings() { return new global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings(); }
        private object Activate_15_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.SolidColorBrush>(); }
        private object Activate_16_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.Media.SolidColorBrush>(); }
        private object Activate_23_ToolbarItem() { return new global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem(); }
        private object Activate_24_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>(); }
        private object Activate_25_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>(); }
        private object Activate_27_BannerPage() { return new global::Syncfusion.SampleBrowser.UWP.ImageEditor.BannerPage(); }
        private object Activate_30_Customization() { return new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Customization(); }
        private object Activate_31_CustomView() { return new global::Syncfusion.SampleBrowser.UWP.ImageEditor.CustomView(); }
        private object Activate_32_FirstPage1() { return new global::Syncfusion.SampleBrowser.UWP.ImageEditor.FirstPage1(); }
        private object Activate_33_Serialization() { return new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Serialization(); }
        private object Activate_34_MainPage() { return new global::Syncfusion.SampleBrowser.UWP.ImageEditor.MainPage(); }
        private object Activate_35_SetterValueBindingHelper() { return new global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper(); }
        private object Activate_37_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>(); }
        private void VectorAdd_15_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.SolidColorBrush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.SolidColorBrush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_16_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.SolidColorBrush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.SolidColorBrush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_24_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_25_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Syncfusion.UI.Xaml.ImageEditor.SfImageEditor
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_0_SfImageEditor;
                userType.AddMemberName("ToolbarSettings");
                userType.AddMemberName("IsSelected");
                userType.AddMemberName("IsImageEdited");
                userType.AddMemberName("ResizableElements");
                userType.AddMemberName("EnableAutoSelectText");
                userType.AddMemberName("ActualImageRenderedBounds");
                userType.AddMemberName("OriginalImageSize");
                userType.AddMemberName("IsImageZoomed");
                userType.AddMemberName("DefaultSelectedColorIndex");
                userType.AddMemberName("RotatableElements");
                userType.AddMemberName("Image");
                userType.AddMemberName("ImageSource");
                userType.AddMemberName("ColorPalette");
                userType.AddMemberName("ImageEffect");
                userType.AddMemberName("EffectValue");
                userType.AddMemberName("MaximumZoomLevel");
                userType.AddMemberName("ZoomLevel");
                userType.AddMemberName("EnableZooming");
                userType.AddMemberName("PanningMode");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_2_ToolbarSettings;
                userType.AddMemberName("IsToolbarVisiblity");
                userType.AddMemberName("ShowDeleteButton");
                userType.AddMemberName("Background");
                userType.AddMemberName("BorderColor");
                userType.AddMemberName("TextForegroundColor");
                userType.AddMemberName("HeaderToolbarHeight");
                userType.AddMemberName("VisibleShapesItems");
                userType.AddMemberName("FooterToolbarHeight");
                userType.AddMemberName("SubItemToolbarHeight");
                userType.AddMemberName("ColorPaletteCircleSize");
                userType.AddMemberName("ColorPaletteItemSize");
                userType.AddMemberName("BackButton");
                userType.AddMemberName("ToolbarItems");
                xamlType = userType;
                break;

            case 3:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Boolean
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorResizableElements
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorResizableElements.None);
                userType.AddEnumValue("Text", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorResizableElements.Text);
                userType.AddEnumValue("CustomView", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorResizableElements.CustomView);
                userType.AddEnumValue("Shapes", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorResizableElements.Shapes);
                xamlType = userType;
                break;

            case 6:   //  System.Enum
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 7:   //  System.ValueType
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 8:   //  Object
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Windows.Foundation.Rect
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Windows.Foundation.Size
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Int32
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorElements
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorElements.None);
                userType.AddEnumValue("Text", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorElements.Text);
                userType.AddEnumValue("CustomView", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorElements.CustomView);
                xamlType = userType;
                break;

            case 13:   //  Windows.Storage.Streams.IRandomAccessStream
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.Media.SolidColorBrush>
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.Media.SolidColorBrush>"));
                userType.CollectionAdd = VectorAdd_15_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 16:   //  System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.Media.SolidColorBrush>
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_16_Collection;
                userType.CollectionAdd = VectorAdd_16_Collection;
                xamlType = userType;
                break;

            case 17:   //  Windows.UI.Xaml.Media.SolidColorBrush
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Hue", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect.Hue);
                userType.AddEnumValue("Saturation", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect.Saturation);
                userType.AddEnumValue("Brightness", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect.Brightness);
                userType.AddEnumValue("Contrast", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect.Contrast);
                userType.AddEnumValue("Sharpen", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect.Sharpen);
                userType.AddEnumValue("Blur", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect.Blur);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect.None);
                xamlType = userType;
                break;

            case 19:   //  Single
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Double
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  Syncfusion.UI.Xaml.ImageEditor.Enums.PanningMode
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("SingleFinger", global::Syncfusion.UI.Xaml.ImageEditor.Enums.PanningMode.SingleFinger);
                userType.AddEnumValue("TwoFinger", global::Syncfusion.UI.Xaml.ImageEditor.Enums.PanningMode.TwoFinger);
                xamlType = userType;
                break;

            case 22:   //  Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes.Rectangle);
                userType.AddEnumValue("Circle", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes.Circle);
                userType.AddEnumValue("Arrow", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes.Arrow);
                userType.AddEnumValue("DoubleArrow", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes.DoubleArrow);
                userType.AddEnumValue("Line", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes.Line);
                userType.AddEnumValue("Dotted", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes.Dotted);
                userType.AddEnumValue("DottedArrow", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes.DottedArrow);
                userType.AddEnumValue("DottedDoubleArrow", global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes.DottedDoubleArrow);
                xamlType = userType;
                break;

            case 23:   //  Syncfusion.UI.Xaml.ImageEditor.ToolbarItem
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_23_ToolbarItem;
                userType.AddMemberName("Icon");
                userType.AddMemberName("Text");
                userType.AddMemberName("TextHeight");
                userType.AddMemberName("IconHeight");
                xamlType = userType;
                break;

            case 24:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>"));
                userType.CollectionAdd = VectorAdd_24_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_25_Collection;
                userType.CollectionAdd = VectorAdd_25_Collection;
                xamlType = userType;
                break;

            case 26:   //  String
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  Syncfusion.SampleBrowser.UWP.ImageEditor.BannerPage
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_27_BannerPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  Syncfusion.SampleBrowser.UWP.ImageEditor.Customization
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_Customization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  Syncfusion.SampleBrowser.UWP.ImageEditor.CustomView
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_CustomView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  Syncfusion.SampleBrowser.UWP.ImageEditor.FirstPage1
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_FirstPage1;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  Syncfusion.SampleBrowser.UWP.ImageEditor.Serialization
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_Serialization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  Syncfusion.SampleBrowser.UWP.ImageEditor.MainPage
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_35_SetterValueBindingHelper;
                userType.AddMemberName("Type");
                userType.AddMemberName("Property");
                userType.AddMemberName("Binding");
                userType.AddMemberName("Values");
                userType.AddMemberName("PropertyBinding");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 36:   //  Windows.UI.Xaml.Data.Binding
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>
                userType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_37_Collection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Common_2015.Syncfusion_SampleBrowser_UWP_Common_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfGantt.UWP.Syncfusion_SfGantt_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfImageEditor.UWP.Syncfusion_SfImageEditor_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfSmithChart.UWP.Syncfusion_SfSmithChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_SfImageEditor_ToolbarSettings(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.ToolbarSettings;
        }
        private void set_0_SfImageEditor_ToolbarSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.ToolbarSettings = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)Value;
        }
        private object get_1_SfImageEditor_IsSelected(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.IsSelected;
        }
        private object get_2_SfImageEditor_IsImageEdited(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.IsImageEdited;
        }
        private object get_3_SfImageEditor_ResizableElements(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.ResizableElements;
        }
        private void set_3_SfImageEditor_ResizableElements(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.ResizableElements = (global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorResizableElements)Value;
        }
        private object get_4_SfImageEditor_EnableAutoSelectText(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.EnableAutoSelectText;
        }
        private void set_4_SfImageEditor_EnableAutoSelectText(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.EnableAutoSelectText = (global::System.Boolean)Value;
        }
        private object get_5_SfImageEditor_ActualImageRenderedBounds(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.ActualImageRenderedBounds;
        }
        private object get_6_SfImageEditor_OriginalImageSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.OriginalImageSize;
        }
        private object get_7_SfImageEditor_IsImageZoomed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.IsImageZoomed;
        }
        private object get_8_SfImageEditor_DefaultSelectedColorIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.DefaultSelectedColorIndex;
        }
        private void set_8_SfImageEditor_DefaultSelectedColorIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.DefaultSelectedColorIndex = (global::System.Int32)Value;
        }
        private object get_9_SfImageEditor_RotatableElements(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.RotatableElements;
        }
        private void set_9_SfImageEditor_RotatableElements(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.RotatableElements = (global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorElements)Value;
        }
        private object get_10_SfImageEditor_Image(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.Image;
        }
        private void set_10_SfImageEditor_Image(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.Image = (global::Windows.Storage.Streams.IRandomAccessStream)Value;
        }
        private object get_11_SfImageEditor_ImageSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.ImageSource;
        }
        private void set_11_SfImageEditor_ImageSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.ImageSource = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_12_SfImageEditor_ColorPalette(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.ColorPalette;
        }
        private void set_12_SfImageEditor_ColorPalette(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.ColorPalette = (global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.SolidColorBrush>)Value;
        }
        private object get_13_SfImageEditor_ImageEffect(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.ImageEffect;
        }
        private void set_13_SfImageEditor_ImageEffect(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.ImageEffect = (global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect)Value;
        }
        private object get_14_SfImageEditor_EffectValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.EffectValue;
        }
        private void set_14_SfImageEditor_EffectValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.EffectValue = (global::System.Single)Value;
        }
        private object get_15_SfImageEditor_MaximumZoomLevel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.MaximumZoomLevel;
        }
        private void set_15_SfImageEditor_MaximumZoomLevel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.MaximumZoomLevel = (global::System.Double)Value;
        }
        private object get_16_SfImageEditor_ZoomLevel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.ZoomLevel;
        }
        private void set_16_SfImageEditor_ZoomLevel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.ZoomLevel = (global::System.Double)Value;
        }
        private object get_17_SfImageEditor_EnableZooming(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.EnableZooming;
        }
        private void set_17_SfImageEditor_EnableZooming(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.EnableZooming = (global::System.Boolean)Value;
        }
        private object get_18_SfImageEditor_PanningMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            return that.PanningMode;
        }
        private void set_18_SfImageEditor_PanningMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.SfImageEditor)instance;
            that.PanningMode = (global::Syncfusion.UI.Xaml.ImageEditor.Enums.PanningMode)Value;
        }
        private object get_19_ToolbarSettings_IsToolbarVisiblity(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.IsToolbarVisiblity;
        }
        private void set_19_ToolbarSettings_IsToolbarVisiblity(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.IsToolbarVisiblity = (global::System.Boolean)Value;
        }
        private object get_20_ToolbarSettings_ShowDeleteButton(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.ShowDeleteButton;
        }
        private void set_20_ToolbarSettings_ShowDeleteButton(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.ShowDeleteButton = (global::System.Boolean)Value;
        }
        private object get_21_ToolbarSettings_Background(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.Background;
        }
        private void set_21_ToolbarSettings_Background(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.Background = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_22_ToolbarSettings_BorderColor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.BorderColor;
        }
        private void set_22_ToolbarSettings_BorderColor(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.BorderColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_23_ToolbarSettings_TextForegroundColor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.TextForegroundColor;
        }
        private void set_23_ToolbarSettings_TextForegroundColor(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.TextForegroundColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_24_ToolbarSettings_HeaderToolbarHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.HeaderToolbarHeight;
        }
        private void set_24_ToolbarSettings_HeaderToolbarHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.HeaderToolbarHeight = (global::System.Double)Value;
        }
        private object get_25_ToolbarSettings_VisibleShapesItems(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.VisibleShapesItems;
        }
        private void set_25_ToolbarSettings_VisibleShapesItems(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.VisibleShapesItems = (global::Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes)Value;
        }
        private object get_26_ToolbarSettings_FooterToolbarHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.FooterToolbarHeight;
        }
        private void set_26_ToolbarSettings_FooterToolbarHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.FooterToolbarHeight = (global::System.Double)Value;
        }
        private object get_27_ToolbarSettings_SubItemToolbarHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.SubItemToolbarHeight;
        }
        private void set_27_ToolbarSettings_SubItemToolbarHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.SubItemToolbarHeight = (global::System.Double)Value;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_28_ToolbarSettings_ColorPaletteCircleSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.ColorPaletteCircleSize;
        }
        private void set_28_ToolbarSettings_ColorPaletteCircleSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.ColorPaletteCircleSize = (global::System.Double)Value;
        }
#pragma warning restore 0618
        private object get_29_ToolbarSettings_ColorPaletteItemSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.ColorPaletteItemSize;
        }
        private void set_29_ToolbarSettings_ColorPaletteItemSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.ColorPaletteItemSize = (global::System.Double)Value;
        }
        private object get_30_ToolbarSettings_BackButton(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.BackButton;
        }
        private void set_30_ToolbarSettings_BackButton(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.BackButton = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem)Value;
        }
        private object get_31_ToolbarSettings_ToolbarItems(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            return that.ToolbarItems;
        }
        private void set_31_ToolbarSettings_ToolbarItems(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings)instance;
            that.ToolbarItems = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>)Value;
        }
        private object get_32_ToolbarItem_Icon(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem)instance;
            return that.Icon;
        }
        private void set_32_ToolbarItem_Icon(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem)instance;
            that.Icon = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_33_ToolbarItem_Text(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem)instance;
            return that.Text;
        }
        private void set_33_ToolbarItem_Text(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_34_ToolbarItem_TextHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem)instance;
            return that.TextHeight;
        }
        private void set_34_ToolbarItem_TextHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem)instance;
            that.TextHeight = (global::System.Double)Value;
        }
        private object get_35_ToolbarItem_IconHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem)instance;
            return that.IconHeight;
        }
        private void set_35_ToolbarItem_IconHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.ImageEditor.ToolbarItem)instance;
            that.IconHeight = (global::System.Double)Value;
        }
        private object get_36_SetterValueBindingHelper_Type(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Type;
        }
        private void set_36_SetterValueBindingHelper_Type(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Type = (global::System.String)Value;
        }
        private object get_37_SetterValueBindingHelper_Property(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Property;
        }
        private void set_37_SetterValueBindingHelper_Property(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Property = (global::System.String)Value;
        }
        private object get_38_SetterValueBindingHelper_Binding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Binding;
        }
        private void set_38_SetterValueBindingHelper_Binding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Binding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_39_SetterValueBindingHelper_Values(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Values;
        }
        private object get_40_SetterValueBindingHelper_PropertyBinding(object instance)
        {
            return global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.GetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance);
        }
        private void set_40_SetterValueBindingHelper_PropertyBinding(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.SetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance, (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)Value);
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember xamlMember = null;
            global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.ToolbarSettings":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "ToolbarSettings", "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_SfImageEditor_ToolbarSettings;
                xamlMember.Setter = set_0_SfImageEditor_ToolbarSettings;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.IsSelected":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.Getter = get_1_SfImageEditor_IsSelected;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.IsImageEdited":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "IsImageEdited", "Boolean");
                xamlMember.Getter = get_2_SfImageEditor_IsImageEdited;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.ResizableElements":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "ResizableElements", "Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorResizableElements");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_SfImageEditor_ResizableElements;
                xamlMember.Setter = set_3_SfImageEditor_ResizableElements;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.EnableAutoSelectText":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "EnableAutoSelectText", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_SfImageEditor_EnableAutoSelectText;
                xamlMember.Setter = set_4_SfImageEditor_EnableAutoSelectText;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.ActualImageRenderedBounds":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "ActualImageRenderedBounds", "Windows.Foundation.Rect");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SfImageEditor_ActualImageRenderedBounds;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.OriginalImageSize":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "OriginalImageSize", "Windows.Foundation.Size");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_SfImageEditor_OriginalImageSize;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.IsImageZoomed":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "IsImageZoomed", "Boolean");
                xamlMember.Getter = get_7_SfImageEditor_IsImageZoomed;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.DefaultSelectedColorIndex":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "DefaultSelectedColorIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_SfImageEditor_DefaultSelectedColorIndex;
                xamlMember.Setter = set_8_SfImageEditor_DefaultSelectedColorIndex;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.RotatableElements":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "RotatableElements", "Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorElements");
                xamlMember.Getter = get_9_SfImageEditor_RotatableElements;
                xamlMember.Setter = set_9_SfImageEditor_RotatableElements;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.Image":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "Image", "Windows.Storage.Streams.IRandomAccessStream");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_SfImageEditor_Image;
                xamlMember.Setter = set_10_SfImageEditor_Image;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.ImageSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "ImageSource", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_SfImageEditor_ImageSource;
                xamlMember.Setter = set_11_SfImageEditor_ImageSource;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.ColorPalette":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "ColorPalette", "System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.Media.SolidColorBrush>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_SfImageEditor_ColorPalette;
                xamlMember.Setter = set_12_SfImageEditor_ColorPalette;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.ImageEffect":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "ImageEffect", "Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEffect");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_SfImageEditor_ImageEffect;
                xamlMember.Setter = set_13_SfImageEditor_ImageEffect;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.EffectValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "EffectValue", "Single");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_SfImageEditor_EffectValue;
                xamlMember.Setter = set_14_SfImageEditor_EffectValue;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.MaximumZoomLevel":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "MaximumZoomLevel", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_SfImageEditor_MaximumZoomLevel;
                xamlMember.Setter = set_15_SfImageEditor_MaximumZoomLevel;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.ZoomLevel":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "ZoomLevel", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_SfImageEditor_ZoomLevel;
                xamlMember.Setter = set_16_SfImageEditor_ZoomLevel;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.EnableZooming":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "EnableZooming", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_SfImageEditor_EnableZooming;
                xamlMember.Setter = set_17_SfImageEditor_EnableZooming;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.SfImageEditor.PanningMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.SfImageEditor");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "PanningMode", "Syncfusion.UI.Xaml.ImageEditor.Enums.PanningMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_SfImageEditor_PanningMode;
                xamlMember.Setter = set_18_SfImageEditor_PanningMode;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.IsToolbarVisiblity":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "IsToolbarVisiblity", "Boolean");
                xamlMember.Getter = get_19_ToolbarSettings_IsToolbarVisiblity;
                xamlMember.Setter = set_19_ToolbarSettings_IsToolbarVisiblity;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.ShowDeleteButton":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "ShowDeleteButton", "Boolean");
                xamlMember.Getter = get_20_ToolbarSettings_ShowDeleteButton;
                xamlMember.Setter = set_20_ToolbarSettings_ShowDeleteButton;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.Background":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "Background", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.Getter = get_21_ToolbarSettings_Background;
                xamlMember.Setter = set_21_ToolbarSettings_Background;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.BorderColor":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "BorderColor", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.Getter = get_22_ToolbarSettings_BorderColor;
                xamlMember.Setter = set_22_ToolbarSettings_BorderColor;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.TextForegroundColor":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "TextForegroundColor", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.Getter = get_23_ToolbarSettings_TextForegroundColor;
                xamlMember.Setter = set_23_ToolbarSettings_TextForegroundColor;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.HeaderToolbarHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "HeaderToolbarHeight", "Double");
                xamlMember.Getter = get_24_ToolbarSettings_HeaderToolbarHeight;
                xamlMember.Setter = set_24_ToolbarSettings_HeaderToolbarHeight;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.VisibleShapesItems":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "VisibleShapesItems", "Syncfusion.UI.Xaml.ImageEditor.Enums.ImageEditorShapes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_ToolbarSettings_VisibleShapesItems;
                xamlMember.Setter = set_25_ToolbarSettings_VisibleShapesItems;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.FooterToolbarHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "FooterToolbarHeight", "Double");
                xamlMember.Getter = get_26_ToolbarSettings_FooterToolbarHeight;
                xamlMember.Setter = set_26_ToolbarSettings_FooterToolbarHeight;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.SubItemToolbarHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "SubItemToolbarHeight", "Double");
                xamlMember.Getter = get_27_ToolbarSettings_SubItemToolbarHeight;
                xamlMember.Setter = set_27_ToolbarSettings_SubItemToolbarHeight;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.ColorPaletteCircleSize":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "ColorPaletteCircleSize", "Double");
                xamlMember.Getter = get_28_ToolbarSettings_ColorPaletteCircleSize;
                xamlMember.Setter = set_28_ToolbarSettings_ColorPaletteCircleSize;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.ColorPaletteItemSize":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "ColorPaletteItemSize", "Double");
                xamlMember.Getter = get_29_ToolbarSettings_ColorPaletteItemSize;
                xamlMember.Setter = set_29_ToolbarSettings_ColorPaletteItemSize;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.BackButton":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "BackButton", "Syncfusion.UI.Xaml.ImageEditor.ToolbarItem");
                xamlMember.Getter = get_30_ToolbarSettings_BackButton;
                xamlMember.Setter = set_30_ToolbarSettings_BackButton;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings.ToolbarItems":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarSettings");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "ToolbarItems", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.ImageEditor.ToolbarItem>");
                xamlMember.Getter = get_31_ToolbarSettings_ToolbarItems;
                xamlMember.Setter = set_31_ToolbarSettings_ToolbarItems;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarItem.Icon":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "Icon", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_32_ToolbarItem_Icon;
                xamlMember.Setter = set_32_ToolbarItem_Icon;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarItem.Text":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_33_ToolbarItem_Text;
                xamlMember.Setter = set_33_ToolbarItem_Text;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarItem.TextHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "TextHeight", "Double");
                xamlMember.Getter = get_34_ToolbarItem_TextHeight;
                xamlMember.Setter = set_34_ToolbarItem_TextHeight;
                break;
            case "Syncfusion.UI.Xaml.ImageEditor.ToolbarItem.IconHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.ImageEditor.ToolbarItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "IconHeight", "Double");
                xamlMember.Getter = get_35_ToolbarItem_IconHeight;
                xamlMember.Setter = set_35_ToolbarItem_IconHeight;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Type":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "Type", "String");
                xamlMember.Getter = get_36_SetterValueBindingHelper_Type;
                xamlMember.Setter = set_36_SetterValueBindingHelper_Type;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Property":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "Property", "String");
                xamlMember.Getter = get_37_SetterValueBindingHelper_Property;
                xamlMember.Setter = set_37_SetterValueBindingHelper_Property;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Binding":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "Binding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_38_SetterValueBindingHelper_Binding;
                xamlMember.Setter = set_38_SetterValueBindingHelper_Binding;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Values":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "Values", "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>");
                xamlMember.Getter = get_39_SetterValueBindingHelper_Values;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.PropertyBinding":
                userType = (global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlMember(this, "PropertyBinding", "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_40_SetterValueBindingHelper_PropertyBinding;
                xamlMember.Setter = set_40_SetterValueBindingHelper_PropertyBinding;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlSystemBaseType
    {
        global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Syncfusion.SampleBrowser.UWP.ImageEditor.Syncfusion_SampleBrowser_UWP_ImageEditor_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

