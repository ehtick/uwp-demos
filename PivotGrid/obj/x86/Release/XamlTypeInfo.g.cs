//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Syncfusion.SampleBrowser.UWP.PivotGrid
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMetaDataProvider __appProvider;
        private global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[110];
            _typeNameTable[0] = "Windows.UI.Color";
            _typeNameTable[1] = "System.ValueType";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Byte";
            _typeNameTable[4] = "Common.SampleLayout";
            _typeNameTable[5] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[6] = "String";
            _typeNameTable[7] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[8] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[9] = "System.Windows.Input.ICommand";
            _typeNameTable[10] = "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid";
            _typeNameTable[11] = "Syncfusion.UI.Xaml.PivotGrid.PivotGridControlBase";
            _typeNameTable[12] = "Syncfusion.UI.Xaml.CellGrid.SfCellGrid";
            _typeNameTable[13] = "Windows.UI.Xaml.UIElement";
            _typeNameTable[14] = "Syncfusion.UI.Xaml.PivotGrid.PivotEditingManager";
            _typeNameTable[15] = "Syncfusion.UI.Xaml.PivotGrid.PivotUpdatingManager";
            _typeNameTable[16] = "Syncfusion.PivotAnalysis.UWP.PivotEngineUpdatingManager";
            _typeNameTable[17] = "Syncfusion.UI.Xaml.PivotGrid.SortOptions";
            _typeNameTable[18] = "System.Enum";
            _typeNameTable[19] = "Boolean";
            _typeNameTable[20] = "System.Collections.Generic.List`1<Syncfusion.PivotAnalysis.UWP.FieldInfo>";
            _typeNameTable[21] = "Syncfusion.PivotAnalysis.UWP.FieldInfo";
            _typeNameTable[22] = "Syncfusion.PivotAnalysis.UWP.FieldTypes";
            _typeNameTable[23] = "Syncfusion.UI.Xaml.PivotGrid.PivotValueChooser";
            _typeNameTable[24] = "Syncfusion.Olap.UWP.Manager.OlapDataManager";
            _typeNameTable[25] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[26] = "Syncfusion.Olap.UWP.Engine.GridLayout";
            _typeNameTable[27] = "Syncfusion.PivotAnalysis.UWP.GridLayout";
            _typeNameTable[28] = "Syncfusion.UI.Xaml.PivotGrid.ExportingGridStyleInfo";
            _typeNameTable[29] = "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle";
            _typeNameTable[30] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[31] = "Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle";
            _typeNameTable[32] = "Syncfusion.Olap.UWP.Reports.GridAppearanceSettings";
            _typeNameTable[33] = "Windows.UI.Xaml.HorizontalAlignment";
            _typeNameTable[34] = "Double";
            _typeNameTable[35] = "Windows.UI.Xaml.Style";
            _typeNameTable[36] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>";
            _typeNameTable[37] = "System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>";
            _typeNameTable[38] = "Syncfusion.PivotAnalysis.UWP.PivotItem";
            _typeNameTable[39] = "System.Collections.IComparer";
            _typeNameTable[40] = "Syncfusion.Data.ListSortDirection";
            _typeNameTable[41] = "Syncfusion.PivotAnalysis.UWP.SummaryBase";
            _typeNameTable[42] = "Syncfusion.PivotAnalysis.UWP.SummaryType";
            _typeNameTable[43] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>";
            _typeNameTable[44] = "System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>";
            _typeNameTable[45] = "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo";
            _typeNameTable[46] = "Syncfusion.PivotAnalysis.UWP.CalculationType";
            _typeNameTable[47] = "Syncfusion.PivotAnalysis.UWP.DisplayOption";
            _typeNameTable[48] = "Syncfusion.PivotAnalysis.UWP.FilterExpression";
            _typeNameTable[49] = "Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel";
            _typeNameTable[50] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>";
            _typeNameTable[51] = "System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>";
            _typeNameTable[52] = "Syncfusion.PivotAnalysis.UWP.ExpressionError";
            _typeNameTable[53] = "System.Delegate";
            _typeNameTable[54] = "Syncfusion.PivotAnalysis.UWP.PivotEngine";
            _typeNameTable[55] = "Syncfusion.Olap.UWP.Engine.PivotCellDescriptor";
            _typeNameTable[56] = "Syncfusion.UI.Xaml.PivotGrid.SelectedItems";
            _typeNameTable[57] = "System.Collections.Generic.List`1<Syncfusion.UI.Xaml.PivotGrid.SelectedItem>";
            _typeNameTable[58] = "Syncfusion.UI.Xaml.PivotGrid.SelectedItem";
            _typeNameTable[59] = "System.Collections.Generic.List`1<String>";
            _typeNameTable[60] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>";
            _typeNameTable[61] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>";
            _typeNameTable[62] = "Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat";
            _typeNameTable[63] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>";
            _typeNameTable[64] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>";
            _typeNameTable[65] = "Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition";
            _typeNameTable[66] = "Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType";
            _typeNameTable[67] = "Syncfusion.Data.PredicateType";
            _typeNameTable[68] = "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator";
            _typeNameTable[69] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[70] = "Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes";
            _typeNameTable[71] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[72] = "Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode";
            _typeNameTable[73] = "BI.PivotGrid.Exporting";
            _typeNameTable[74] = "BI.PivotGrid.CellSelection";
            _typeNameTable[75] = "BI.PivotGrid.Tutorials.PivotGridSamples.Converters.ImageConverter";
            _typeNameTable[76] = "Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell";
            _typeNameTable[77] = "Syncfusion.PivotAnalysis.UWP.PivotCellInfo";
            _typeNameTable[78] = "Windows.UI.Xaml.Media.FontFamily";
            _typeNameTable[79] = "Int32";
            _typeNameTable[80] = "Windows.UI.Text.FontWeight";
            _typeNameTable[81] = "Windows.UI.Xaml.TextWrapping";
            _typeNameTable[82] = "Windows.UI.Text.FontStyle";
            _typeNameTable[83] = "BI.PivotGrid.CellTemplate";
            _typeNameTable[84] = "BI.PivotGrid.ConditionalFormat";
            _typeNameTable[85] = "BI.PivotGrid.CustomSummaries";
            _typeNameTable[86] = "BI.PivotGrid.Drill_Through";
            _typeNameTable[87] = "BI.PivotGrid.Editing";
            _typeNameTable[88] = "BI.PivotGrid.ExpressionFields";
            _typeNameTable[89] = "BI.PivotGrid.GettingStarted";
            _typeNameTable[90] = "BI.PivotGrid.GridLayout";
            _typeNameTable[91] = "BI.PivotGrid.Hyperlink";
            _typeNameTable[92] = "BI.PivotGrid.KPI";
            _typeNameTable[93] = "BI.PivotGrid.Localization";
            _typeNameTable[94] = "BI.PivotGrid.MemberProperties";
            _typeNameTable[95] = "BI.PivotGrid.NamedSets";
            _typeNameTable[96] = "BI.PivotGrid.Relational";
            _typeNameTable[97] = "BI.PivotGrid.SummaryDisplay";
            _typeNameTable[98] = "BI.PivotGrid.TotalsHiding";
            _typeNameTable[99] = "BI.PivotGrid.UIThreading";
            _typeNameTable[100] = "BI.PivotGrid.Updating";
            _typeNameTable[101] = "BI.PivotGrid.GroupingBar";
            _typeNameTable[102] = "BI.PivotGrid.MDXQuery";
            _typeNameTable[103] = "BI.PivotGrid.RowPivotsOnly";
            _typeNameTable[104] = "BI.PivotGrid.Serialization";
            _typeNameTable[105] = "BI.PivotGrid.StatePersistence";
            _typeNameTable[106] = "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper";
            _typeNameTable[107] = "Windows.UI.Xaml.Data.Binding";
            _typeNameTable[108] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>";
            _typeNameTable[109] = "Windows.UI.Xaml.FrameworkElement";

            _typeTable = new global::System.Type[110];
            _typeTable[0] = typeof(global::Windows.UI.Color);
            _typeTable[1] = typeof(global::System.ValueType);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Byte);
            _typeTable[4] = typeof(global::Common.SampleLayout);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[6] = typeof(global::System.String);
            _typeTable[7] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[8] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[9] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[10] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid);
            _typeTable[11] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.PivotGridControlBase);
            _typeTable[12] = typeof(global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid);
            _typeTable[13] = typeof(global::Windows.UI.Xaml.UIElement);
            _typeTable[14] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.PivotEditingManager);
            _typeTable[15] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.PivotUpdatingManager);
            _typeTable[16] = typeof(global::Syncfusion.PivotAnalysis.UWP.PivotEngineUpdatingManager);
            _typeTable[17] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.SortOptions);
            _typeTable[18] = typeof(global::System.Enum);
            _typeTable[19] = typeof(global::System.Boolean);
            _typeTable[20] = typeof(global::System.Collections.Generic.List<global::Syncfusion.PivotAnalysis.UWP.FieldInfo>);
            _typeTable[21] = typeof(global::Syncfusion.PivotAnalysis.UWP.FieldInfo);
            _typeTable[22] = typeof(global::Syncfusion.PivotAnalysis.UWP.FieldTypes);
            _typeTable[23] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.PivotValueChooser);
            _typeTable[24] = typeof(global::Syncfusion.Olap.UWP.Manager.OlapDataManager);
            _typeTable[25] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[26] = typeof(global::Syncfusion.Olap.UWP.Engine.GridLayout);
            _typeTable[27] = typeof(global::Syncfusion.PivotAnalysis.UWP.GridLayout);
            _typeTable[28] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.ExportingGridStyleInfo);
            _typeTable[29] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle);
            _typeTable[30] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[31] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle);
            _typeTable[32] = typeof(global::Syncfusion.Olap.UWP.Reports.GridAppearanceSettings);
            _typeTable[33] = typeof(global::Windows.UI.Xaml.HorizontalAlignment);
            _typeTable[34] = typeof(global::System.Double);
            _typeTable[35] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[36] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>);
            _typeTable[38] = typeof(global::Syncfusion.PivotAnalysis.UWP.PivotItem);
            _typeTable[39] = typeof(global::System.Collections.IComparer);
            _typeTable[40] = typeof(global::Syncfusion.Data.ListSortDirection);
            _typeTable[41] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryBase);
            _typeTable[42] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryType);
            _typeTable[43] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>);
            _typeTable[44] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>);
            _typeTable[45] = typeof(global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo);
            _typeTable[46] = typeof(global::Syncfusion.PivotAnalysis.UWP.CalculationType);
            _typeTable[47] = typeof(global::Syncfusion.PivotAnalysis.UWP.DisplayOption);
            _typeTable[48] = typeof(global::Syncfusion.PivotAnalysis.UWP.FilterExpression);
            _typeTable[49] = typeof(global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel);
            _typeTable[50] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>);
            _typeTable[51] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>);
            _typeTable[52] = typeof(global::Syncfusion.PivotAnalysis.UWP.ExpressionError);
            _typeTable[53] = typeof(global::System.Delegate);
            _typeTable[54] = typeof(global::Syncfusion.PivotAnalysis.UWP.PivotEngine);
            _typeTable[55] = typeof(global::Syncfusion.Olap.UWP.Engine.PivotCellDescriptor);
            _typeTable[56] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.SelectedItems);
            _typeTable[57] = typeof(global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem>);
            _typeTable[58] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem);
            _typeTable[59] = typeof(global::System.Collections.Generic.List<global::System.String>);
            _typeTable[60] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>);
            _typeTable[61] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>);
            _typeTable[62] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat);
            _typeTable[63] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>);
            _typeTable[64] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>);
            _typeTable[65] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition);
            _typeTable[66] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType);
            _typeTable[67] = typeof(global::Syncfusion.Data.PredicateType);
            _typeTable[68] = typeof(global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator);
            _typeTable[69] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[70] = typeof(global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes);
            _typeTable[71] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[72] = typeof(global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode);
            _typeTable[73] = typeof(global::BI.PivotGrid.Exporting);
            _typeTable[74] = typeof(global::BI.PivotGrid.CellSelection);
            _typeTable[75] = typeof(global::BI.PivotGrid.Tutorials.PivotGridSamples.Converters.ImageConverter);
            _typeTable[76] = typeof(global::Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell);
            _typeTable[77] = typeof(global::Syncfusion.PivotAnalysis.UWP.PivotCellInfo);
            _typeTable[78] = typeof(global::Windows.UI.Xaml.Media.FontFamily);
            _typeTable[79] = typeof(global::System.Int32);
            _typeTable[80] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[81] = typeof(global::Windows.UI.Xaml.TextWrapping);
            _typeTable[82] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[83] = typeof(global::BI.PivotGrid.CellTemplate);
            _typeTable[84] = typeof(global::BI.PivotGrid.ConditionalFormat);
            _typeTable[85] = typeof(global::BI.PivotGrid.CustomSummaries);
            _typeTable[86] = typeof(global::BI.PivotGrid.Drill_Through);
            _typeTable[87] = typeof(global::BI.PivotGrid.Editing);
            _typeTable[88] = typeof(global::BI.PivotGrid.ExpressionFields);
            _typeTable[89] = typeof(global::BI.PivotGrid.GettingStarted);
            _typeTable[90] = typeof(global::BI.PivotGrid.GridLayout);
            _typeTable[91] = typeof(global::BI.PivotGrid.Hyperlink);
            _typeTable[92] = typeof(global::BI.PivotGrid.KPI);
            _typeTable[93] = typeof(global::BI.PivotGrid.Localization);
            _typeTable[94] = typeof(global::BI.PivotGrid.MemberProperties);
            _typeTable[95] = typeof(global::BI.PivotGrid.NamedSets);
            _typeTable[96] = typeof(global::BI.PivotGrid.Relational);
            _typeTable[97] = typeof(global::BI.PivotGrid.SummaryDisplay);
            _typeTable[98] = typeof(global::BI.PivotGrid.TotalsHiding);
            _typeTable[99] = typeof(global::BI.PivotGrid.UIThreading);
            _typeTable[100] = typeof(global::BI.PivotGrid.Updating);
            _typeTable[101] = typeof(global::BI.PivotGrid.GroupingBar);
            _typeTable[102] = typeof(global::BI.PivotGrid.MDXQuery);
            _typeTable[103] = typeof(global::BI.PivotGrid.RowPivotsOnly);
            _typeTable[104] = typeof(global::BI.PivotGrid.Serialization);
            _typeTable[105] = typeof(global::BI.PivotGrid.StatePersistence);
            _typeTable[106] = typeof(global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper);
            _typeTable[107] = typeof(global::Windows.UI.Xaml.Data.Binding);
            _typeTable[108] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>);
            _typeTable[109] = typeof(global::Windows.UI.Xaml.FrameworkElement);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_4_SampleLayout() { return new global::Common.SampleLayout(); }
        private object Activate_10_SfPivotGrid() { return new global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid(); }
        private object Activate_11_PivotGridControlBase() { return new global::Syncfusion.UI.Xaml.PivotGrid.PivotGridControlBase(); }
        private object Activate_12_SfCellGrid() { return new global::Syncfusion.UI.Xaml.CellGrid.SfCellGrid(); }
        private object Activate_20_List() { return new global::System.Collections.Generic.List<global::Syncfusion.PivotAnalysis.UWP.FieldInfo>(); }
        private object Activate_21_FieldInfo() { return new global::Syncfusion.PivotAnalysis.UWP.FieldInfo(); }
        private object Activate_24_OlapDataManager() { return new global::Syncfusion.Olap.UWP.Manager.OlapDataManager(); }
        private object Activate_28_ExportingGridStyleInfo() { return new global::Syncfusion.UI.Xaml.PivotGrid.ExportingGridStyleInfo(); }
        private object Activate_29_PivotGridCellStyle() { return new global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle(); }
        private object Activate_32_GridAppearanceSettings() { return new global::Syncfusion.Olap.UWP.Reports.GridAppearanceSettings(); }
        private object Activate_36_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>(); }
        private object Activate_37_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>(); }
        private object Activate_38_PivotItem() { return new global::Syncfusion.PivotAnalysis.UWP.PivotItem(); }
        private object Activate_43_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>(); }
        private object Activate_44_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>(); }
        private object Activate_45_PivotComputationInfo() { return new global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo(); }
        private object Activate_48_FilterExpression() { return new global::Syncfusion.PivotAnalysis.UWP.FilterExpression(); }
        private object Activate_50_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>(); }
        private object Activate_51_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>(); }
        private object Activate_54_PivotEngine() { return new global::Syncfusion.PivotAnalysis.UWP.PivotEngine(); }
        private object Activate_55_PivotCellDescriptor() { return new global::Syncfusion.Olap.UWP.Engine.PivotCellDescriptor(); }
        private object Activate_56_SelectedItems() { return new global::Syncfusion.UI.Xaml.PivotGrid.SelectedItems(); }
        private object Activate_57_List() { return new global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem>(); }
        private object Activate_58_SelectedItem() { return new global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem(); }
        private object Activate_59_List() { return new global::System.Collections.Generic.List<global::System.String>(); }
        private object Activate_60_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>(); }
        private object Activate_61_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>(); }
        private object Activate_62_PivotGridDataConditionalFormat() { return new global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat(); }
        private object Activate_63_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>(); }
        private object Activate_64_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>(); }
        private object Activate_65_PivotGridDataCondition() { return new global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition(); }
        private object Activate_68_SfBusyIndicator() { return new global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator(); }
        private object Activate_73_Exporting() { return new global::BI.PivotGrid.Exporting(); }
        private object Activate_74_CellSelection() { return new global::BI.PivotGrid.CellSelection(); }
        private object Activate_75_ImageConverter() { return new global::BI.PivotGrid.Tutorials.PivotGridSamples.Converters.ImageConverter(); }
        private object Activate_76_PivotGridTemplateCell() { return new global::Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell(); }
        private object Activate_77_PivotCellInfo() { return new global::Syncfusion.PivotAnalysis.UWP.PivotCellInfo(); }
        private object Activate_83_CellTemplate() { return new global::BI.PivotGrid.CellTemplate(); }
        private object Activate_84_ConditionalFormat() { return new global::BI.PivotGrid.ConditionalFormat(); }
        private object Activate_85_CustomSummaries() { return new global::BI.PivotGrid.CustomSummaries(); }
        private object Activate_86_Drill_Through() { return new global::BI.PivotGrid.Drill_Through(); }
        private object Activate_87_Editing() { return new global::BI.PivotGrid.Editing(); }
        private object Activate_88_ExpressionFields() { return new global::BI.PivotGrid.ExpressionFields(); }
        private object Activate_89_GettingStarted() { return new global::BI.PivotGrid.GettingStarted(); }
        private object Activate_90_GridLayout() { return new global::BI.PivotGrid.GridLayout(); }
        private object Activate_91_Hyperlink() { return new global::BI.PivotGrid.Hyperlink(); }
        private object Activate_92_KPI() { return new global::BI.PivotGrid.KPI(); }
        private object Activate_93_Localization() { return new global::BI.PivotGrid.Localization(); }
        private object Activate_94_MemberProperties() { return new global::BI.PivotGrid.MemberProperties(); }
        private object Activate_95_NamedSets() { return new global::BI.PivotGrid.NamedSets(); }
        private object Activate_96_Relational() { return new global::BI.PivotGrid.Relational(); }
        private object Activate_97_SummaryDisplay() { return new global::BI.PivotGrid.SummaryDisplay(); }
        private object Activate_98_TotalsHiding() { return new global::BI.PivotGrid.TotalsHiding(); }
        private object Activate_99_UIThreading() { return new global::BI.PivotGrid.UIThreading(); }
        private object Activate_100_Updating() { return new global::BI.PivotGrid.Updating(); }
        private object Activate_101_GroupingBar() { return new global::BI.PivotGrid.GroupingBar(); }
        private object Activate_102_MDXQuery() { return new global::BI.PivotGrid.MDXQuery(); }
        private object Activate_103_RowPivotsOnly() { return new global::BI.PivotGrid.RowPivotsOnly(); }
        private object Activate_104_Serialization() { return new global::BI.PivotGrid.Serialization(); }
        private object Activate_105_StatePersistence() { return new global::BI.PivotGrid.StatePersistence(); }
        private object Activate_106_SetterValueBindingHelper() { return new global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper(); }
        private object Activate_108_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>(); }
        private void VectorAdd_20_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.FieldInfo>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.FieldInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_36_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_43_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_44_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_50_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)item;
            collection.Add(newItem);
        }
        private void VectorAdd_51_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>)instance;
            var newItem = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)item;
            collection.Add(newItem);
        }
        private void VectorAdd_56_SelectedItems(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_57_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_59_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }
        private void VectorAdd_60_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat)item;
            collection.Add(newItem);
        }
        private void VectorAdd_61_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat)item;
            collection.Add(newItem);
        }
        private void VectorAdd_63_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_64_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_108_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Windows.UI.Color
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 1:   //  System.ValueType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 2:   //  Object
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Byte
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 4:   //  Common.SampleLayout
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_4_SampleLayout;
                userType.AddMemberName("Header");
                userType.AddMemberName("Sample");
                userType.AddMemberName("Setting");
                userType.AddMemberName("OptionVisibility");
                userType.AddMemberName("FontIcons");
                userType.AddMemberName("Pathstring");
                userType.AddMemberName("ClickCommand");
                xamlType = userType;
                break;

            case 5:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  String
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  System.Windows.Input.ICommand
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_10_SfPivotGrid;
                userType.AddMemberName("InternalGrid");
                userType.AddMemberName("GridArea");
                userType.AddMemberName("EditManager");
                userType.AddMemberName("UpdateManager");
                userType.AddMemberName("SortOption");
                userType.AddMemberName("IgnoreExpandCollapseOnSerialization");
                userType.AddMemberName("AllowedFields");
                userType.AddMemberName("RowPivotsOnly");
                userType.AddMemberName("FieldChooser");
                userType.AddMemberName("ShowCalculationsAsColumns");
                userType.AddMemberName("EnableStatePersistence");
                userType.AddMemberName("EnableHyperlinkOnMouseOver");
                userType.AddMemberName("ShowPivotValueChooser");
                userType.AddMemberName("OlapDataManager");
                userType.AddMemberName("Layout");
                userType.AddMemberName("GridLayout");
                userType.AddMemberName("GridStyleInfo");
                userType.AddMemberName("ColumnHeaderStyle");
                userType.AddMemberName("SummaryRowStyle");
                userType.AddMemberName("SummaryColumnStyle");
                userType.AddMemberName("RowHeaderStyle");
                userType.AddMemberName("ValueCellStyle");
                userType.AddMemberName("EnableAutoExecute");
                userType.AddMemberName("FieldListBorderBrush");
                userType.AddMemberName("GridVisualStyle");
                userType.AddMemberName("FreezeHeaders");
                userType.AddMemberName("ShowValueCellToolTip");
                userType.AddMemberName("ShowHeaderCellsToolTip");
                userType.AddMemberName("GridSettings");
                userType.AddMemberName("EnableRowHeaderArea");
                userType.AddMemberName("EnableValueHeaderArea");
                userType.AddMemberName("EnableFilterHeaderArea");
                userType.AddMemberName("EnableColumnHeaderArea");
                userType.AddMemberName("EnableUpdating");
                userType.AddMemberName("EnableValueEditing");
                userType.AddMemberName("AllowSelection");
                userType.AddMemberName("AllowSelectionWithHeaders");
                userType.AddMemberName("ShowSubTotals");
                userType.AddMemberName("ShowGrandTotals");
                userType.AddMemberName("ShowRowSubTotals");
                userType.AddMemberName("ShowColumnSubTotals");
                userType.AddMemberName("ValueCellTextAlignment");
                userType.AddMemberName("ShowProcessingBar");
                userType.AddMemberName("GridLineStroke");
                userType.AddMemberName("GridLineThickness");
                userType.AddMemberName("ExpanderStyle");
                userType.AddMemberName("PivotRows");
                userType.AddMemberName("PivotColumns");
                userType.AddMemberName("PivotCalculations");
                userType.AddMemberName("Filters");
                userType.AddMemberName("PivotEngine");
                userType.AddMemberName("ItemSource");
                userType.AddMemberName("LoadWithDefaultPropertyFields");
                userType.AddMemberName("LoadInBackground");
                userType.AddMemberName("SelectedCell");
                userType.AddMemberName("SelectedItems");
                userType.AddMemberName("AllowResizeColumns");
                userType.AddMemberName("EnableDrillThrough");
                userType.AddMemberName("AllowResizeRows");
                userType.AddMemberName("ResizeColumnsToFit");
                userType.AddMemberName("ResizeRowsToFit");
                userType.AddMemberName("EnableConditionalFormat");
                userType.AddMemberName("ConditionalFormats");
                userType.AddMemberName("ShowGroupingBar");
                userType.AddMemberName("EnableGroupingBarFiltering");
                userType.AddMemberName("EnableGroupingBarRemoving");
                userType.AddMemberName("EnableGroupingBarSorting");
                userType.AddMemberName("AllowMultiFunctionalSortFilter");
                userType.AddMemberName("GroupingBarBackground");
                userType.AddMemberName("GroupingBarBorderBrush");
                userType.AddMemberName("GroupingBarItemBorderBrush");
                userType.AddMemberName("GroupingBarItemBackground");
                userType.AddMemberName("GroupingBarItemForeground");
                xamlType = userType;
                break;

            case 11:   //  Syncfusion.UI.Xaml.PivotGrid.PivotGridControlBase
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.CellGrid.SfCellGrid"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 12:   //  Syncfusion.UI.Xaml.CellGrid.SfCellGrid
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_12_SfCellGrid;
                xamlType = userType;
                break;

            case 13:   //  Windows.UI.Xaml.UIElement
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  Syncfusion.UI.Xaml.PivotGrid.PivotEditingManager
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 15:   //  Syncfusion.UI.Xaml.PivotGrid.PivotUpdatingManager
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotEngineUpdatingManager"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 16:   //  Syncfusion.PivotAnalysis.UWP.PivotEngineUpdatingManager
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 17:   //  Syncfusion.UI.Xaml.PivotGrid.SortOptions
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.PivotGrid.SortOptions.None);
                userType.AddEnumValue("All", global::Syncfusion.UI.Xaml.PivotGrid.SortOptions.All);
                userType.AddEnumValue("ColumnSorting", global::Syncfusion.UI.Xaml.PivotGrid.SortOptions.ColumnSorting);
                userType.AddEnumValue("TotalSorting", global::Syncfusion.UI.Xaml.PivotGrid.SortOptions.TotalSorting);
                userType.AddEnumValue("GrandTotalSorting", global::Syncfusion.UI.Xaml.PivotGrid.SortOptions.GrandTotalSorting);
                xamlType = userType;
                break;

            case 18:   //  System.Enum
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 19:   //  Boolean
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  System.Collections.Generic.List`1<Syncfusion.PivotAnalysis.UWP.FieldInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_20_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  Syncfusion.PivotAnalysis.UWP.FieldInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_21_FieldInfo;
                userType.AddMemberName("Expression");
                userType.AddMemberName("FieldType");
                userType.AddMemberName("Format");
                userType.AddMemberName("Name");
                xamlType = userType;
                break;

            case 22:   //  Syncfusion.PivotAnalysis.UWP.FieldTypes
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Property", global::Syncfusion.PivotAnalysis.UWP.FieldTypes.Property);
                userType.AddEnumValue("Expression", global::Syncfusion.PivotAnalysis.UWP.FieldTypes.Expression);
                userType.AddEnumValue("Unbound", global::Syncfusion.PivotAnalysis.UWP.FieldTypes.Unbound);
                xamlType = userType;
                break;

            case 23:   //  Syncfusion.UI.Xaml.PivotGrid.PivotValueChooser
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 24:   //  Syncfusion.Olap.UWP.Manager.OlapDataManager
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  Syncfusion.Olap.UWP.Engine.GridLayout
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Syncfusion.Olap.UWP.Engine.GridLayout.Normal);
                userType.AddEnumValue("ExcelLikeLayout", global::Syncfusion.Olap.UWP.Engine.GridLayout.ExcelLikeLayout);
                userType.AddEnumValue("NoSummaries", global::Syncfusion.Olap.UWP.Engine.GridLayout.NoSummaries);
                userType.AddEnumValue("NormalTopSummary", global::Syncfusion.Olap.UWP.Engine.GridLayout.NormalTopSummary);
                userType.AddEnumValue("ExcelLikeLayoutWithMemberProperties", global::Syncfusion.Olap.UWP.Engine.GridLayout.ExcelLikeLayoutWithMemberProperties);
                xamlType = userType;
                break;

            case 27:   //  Syncfusion.PivotAnalysis.UWP.GridLayout
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Syncfusion.PivotAnalysis.UWP.GridLayout.Normal);
                userType.AddEnumValue("TopSummary", global::Syncfusion.PivotAnalysis.UWP.GridLayout.TopSummary);
                xamlType = userType;
                break;

            case 28:   //  Syncfusion.UI.Xaml.PivotGrid.ExportingGridStyleInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_29_PivotGridCellStyle;
                userType.AddMemberName("Background");
                userType.AddMemberName("Style");
                userType.AddMemberName("EnableContextMenu");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("IsHyperlinkCell");
                userType.AddMemberName("TextWrapping");
                userType.AddMemberName("FontStyle");
                xamlType = userType;
                break;

            case 30:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Blend", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Blend);
                userType.AddEnumValue("Lime", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Lime);
                userType.AddEnumValue("Metro", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Metro);
                userType.AddEnumValue("Office2010Black", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Office2010Black);
                userType.AddEnumValue("Office2010Blue", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Office2010Blue);
                userType.AddEnumValue("Office2010Silver", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Office2010Silver);
                userType.AddEnumValue("Office2013DarkGray", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Office2013DarkGray);
                userType.AddEnumValue("Office2013LightGray", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Office2013LightGray);
                userType.AddEnumValue("Office2013White", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Office2013White);
                userType.AddEnumValue("Office2016Colorful", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Office2016Colorful);
                userType.AddEnumValue("Office2016DarkGray", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Office2016DarkGray);
                userType.AddEnumValue("Office2016White", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Office2016White);
                userType.AddEnumValue("Office365", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Office365);
                userType.AddEnumValue("Saffron", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.Saffron);
                userType.AddEnumValue("VisualStudio2013", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.VisualStudio2013);
                userType.AddEnumValue("VisualStudio2015", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle.VisualStudio2015);
                xamlType = userType;
                break;

            case 32:   //  Syncfusion.Olap.UWP.Reports.GridAppearanceSettings
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  Windows.UI.Xaml.HorizontalAlignment
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 34:   //  Double
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  Windows.UI.Xaml.Style
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>"));
                userType.CollectionAdd = VectorAdd_36_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_37_Collection;
                userType.CollectionAdd = VectorAdd_37_Collection;
                xamlType = userType;
                break;

            case 38:   //  Syncfusion.PivotAnalysis.UWP.PivotItem
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_PivotItem;
                userType.AddMemberName("AllowFilter");
                userType.AddMemberName("AllowRunTimeGroupByField");
                userType.AddMemberName("AllowSort");
                userType.AddMemberName("Comparer");
                userType.AddMemberName("EnableHyperlinks");
                userType.AddMemberName("FieldCaption");
                userType.AddMemberName("FieldHeader");
                userType.AddMemberName("FieldMappingName");
                userType.AddMemberName("Format");
                userType.AddMemberName("ShowSubTotal");
                userType.AddMemberName("SortDirection");
                userType.AddMemberName("Summary");
                userType.AddMemberName("SummaryType");
                userType.AddMemberName("TotalHeader");
                userType.AddMemberName("Width");
                xamlType = userType;
                break;

            case 39:   //  System.Collections.IComparer
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 40:   //  Syncfusion.Data.ListSortDirection
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ascending", global::Syncfusion.Data.ListSortDirection.Ascending);
                userType.AddEnumValue("Descending", global::Syncfusion.Data.ListSortDirection.Descending);
                xamlType = userType;
                break;

            case 41:   //  Syncfusion.PivotAnalysis.UWP.SummaryBase
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  Syncfusion.PivotAnalysis.UWP.SummaryType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("DoubleTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleTotalSum);
                userType.AddEnumValue("DoubleAverage", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleAverage);
                userType.AddEnumValue("DoubleMaximum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleMaximum);
                userType.AddEnumValue("DoubleMinimum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleMinimum);
                userType.AddEnumValue("DoubleStandardDeviation", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleStandardDeviation);
                userType.AddEnumValue("DoubleVariance", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DoubleVariance);
                userType.AddEnumValue("Count", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Count);
                userType.AddEnumValue("DecimalTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DecimalTotalSum);
                userType.AddEnumValue("IntTotalSum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.IntTotalSum);
                userType.AddEnumValue("Custom", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Custom);
                userType.AddEnumValue("DisplayIfDiscreteValuesEqual", global::Syncfusion.PivotAnalysis.UWP.SummaryType.DisplayIfDiscreteValuesEqual);
                userType.AddEnumValue("Sum", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Sum);
                userType.AddEnumValue("Average", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Average);
                userType.AddEnumValue("Max", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Max);
                userType.AddEnumValue("Min", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Min);
                userType.AddEnumValue("CountNumbers", global::Syncfusion.PivotAnalysis.UWP.SummaryType.CountNumbers);
                userType.AddEnumValue("StdDev", global::Syncfusion.PivotAnalysis.UWP.SummaryType.StdDev);
                userType.AddEnumValue("StdDevP", global::Syncfusion.PivotAnalysis.UWP.SummaryType.StdDevP);
                userType.AddEnumValue("Var", global::Syncfusion.PivotAnalysis.UWP.SummaryType.Var);
                userType.AddEnumValue("VarP", global::Syncfusion.PivotAnalysis.UWP.SummaryType.VarP);
                xamlType = userType;
                break;

            case 43:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>"));
                userType.CollectionAdd = VectorAdd_43_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 44:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_44_Collection;
                userType.CollectionAdd = VectorAdd_44_Collection;
                xamlType = userType;
                break;

            case 45:   //  Syncfusion.PivotAnalysis.UWP.PivotComputationInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_45_PivotComputationInfo;
                userType.AddMemberName("AllowFilter");
                userType.AddMemberName("AllowRunTimeGroupByField");
                userType.AddMemberName("AllowSort");
                userType.AddMemberName("BaseField");
                userType.AddMemberName("BaseItem");
                userType.AddMemberName("FieldType");
                userType.AddMemberName("CalculationName");
                userType.AddMemberName("CalculationType");
                userType.AddMemberName("DefaultValue");
                userType.AddMemberName("Description");
                userType.AddMemberName("DisplayOption");
                userType.AddMemberName("EnableHyperlinks");
                userType.AddMemberName("Expression");
                userType.AddMemberName("FieldCaption");
                userType.AddMemberName("FieldHeader");
                userType.AddMemberName("FieldName");
                userType.AddMemberName("Format");
                userType.AddMemberName("Formula");
                userType.AddMemberName("InnerMostComputationsOnly");
                userType.AddMemberName("IsTopColumnSummary");
                userType.AddMemberName("PadString");
                userType.AddMemberName("Summary");
                userType.AddMemberName("SummaryType");
                xamlType = userType;
                break;

            case 46:   //  Syncfusion.PivotAnalysis.UWP.CalculationType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("NoCalculation", global::Syncfusion.PivotAnalysis.UWP.CalculationType.NoCalculation);
                userType.AddEnumValue("PercentageOfGrandTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfGrandTotal);
                userType.AddEnumValue("PercentageOfColumnTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfColumnTotal);
                userType.AddEnumValue("PercentageOfRowTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfRowTotal);
                userType.AddEnumValue("PercentageOfParentColumnTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentColumnTotal);
                userType.AddEnumValue("PercentageOfParentRowTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentRowTotal);
                userType.AddEnumValue("PercentageOfParentTotal", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfParentTotal);
                userType.AddEnumValue("Index", global::Syncfusion.PivotAnalysis.UWP.CalculationType.Index);
                userType.AddEnumValue("Formula", global::Syncfusion.PivotAnalysis.UWP.CalculationType.Formula);
                userType.AddEnumValue("PercentageOf", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOf);
                userType.AddEnumValue("DifferenceFrom", global::Syncfusion.PivotAnalysis.UWP.CalculationType.DifferenceFrom);
                userType.AddEnumValue("PercentageOfDifferenceFrom", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfDifferenceFrom);
                userType.AddEnumValue("RunningTotalIn", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RunningTotalIn);
                userType.AddEnumValue("PercentageOfRunningTotalIn", global::Syncfusion.PivotAnalysis.UWP.CalculationType.PercentageOfRunningTotalIn);
                userType.AddEnumValue("RankSmallestToLargest", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RankSmallestToLargest);
                userType.AddEnumValue("RankLargestToSmallest", global::Syncfusion.PivotAnalysis.UWP.CalculationType.RankLargestToSmallest);
                xamlType = userType;
                break;

            case 47:   //  Syncfusion.PivotAnalysis.UWP.DisplayOption
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.None);
                userType.AddEnumValue("Calculations", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.Calculations);
                userType.AddEnumValue("Summary", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.Summary);
                userType.AddEnumValue("GrandTotals", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.GrandTotals);
                userType.AddEnumValue("All", global::Syncfusion.PivotAnalysis.UWP.DisplayOption.All);
                xamlType = userType;
                break;

            case 48:   //  Syncfusion.PivotAnalysis.UWP.FilterExpression
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_48_FilterExpression;
                userType.AddMemberName("CaseSensitive");
                userType.AddMemberName("DimensionHeader");
                userType.AddMemberName("DimensionName");
                userType.AddMemberName("Error");
                userType.AddMemberName("ErrorString");
                userType.AddMemberName("Evaluator");
                userType.AddMemberName("Expression");
                userType.AddMemberName("FieldCaption");
                userType.AddMemberName("Format");
                userType.AddMemberName("Name");
                userType.AddMemberName("Tag");
                xamlType = userType;
                break;

            case 49:   //  Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("All", global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel.All);
                userType.AddEnumValue("InnerMostOnly", global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel.InnerMostOnly);
                xamlType = userType;
                break;

            case 50:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>"));
                userType.CollectionAdd = VectorAdd_50_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 51:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_51_Collection;
                userType.CollectionAdd = VectorAdd_51_Collection;
                xamlType = userType;
                break;

            case 52:   //  Syncfusion.PivotAnalysis.UWP.ExpressionError
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.None);
                userType.AddEnumValue("MissingRightQuote", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.MissingRightQuote);
                userType.AddEnumValue("MismatchedParentheses", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.MismatchedParentheses);
                userType.AddEnumValue("CannotCompareDifferentTypes", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.CannotCompareDifferentTypes);
                userType.AddEnumValue("UnknownOperator", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.UnknownOperator);
                userType.AddEnumValue("NotAValidFormula", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.NotAValidFormula);
                userType.AddEnumValue("ExceptionRaised", global::Syncfusion.PivotAnalysis.UWP.ExpressionError.ExceptionRaised);
                xamlType = userType;
                break;

            case 53:   //  System.Delegate
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 54:   //  Syncfusion.PivotAnalysis.UWP.PivotEngine
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 55:   //  Syncfusion.Olap.UWP.Engine.PivotCellDescriptor
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 56:   //  Syncfusion.UI.Xaml.PivotGrid.SelectedItems
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.Generic.List`1<Syncfusion.UI.Xaml.PivotGrid.SelectedItem>"));
                userType.CollectionAdd = VectorAdd_56_SelectedItems;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  System.Collections.Generic.List`1<Syncfusion.UI.Xaml.PivotGrid.SelectedItem>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_57_List;
                userType.CollectionAdd = VectorAdd_57_List;
                xamlType = userType;
                break;

            case 58:   //  Syncfusion.UI.Xaml.PivotGrid.SelectedItem
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_58_SelectedItem;
                userType.AddMemberName("Column");
                userType.AddMemberName("Row");
                userType.AddMemberName("ColumnList");
                userType.AddMemberName("RowList");
                userType.AddMemberName("Value");
                userType.AddMemberName("FormattedValue");
                xamlType = userType;
                break;

            case 59:   //  System.Collections.Generic.List`1<String>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_59_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 60:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>"));
                userType.CollectionAdd = VectorAdd_60_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 61:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_61_Collection;
                userType.CollectionAdd = VectorAdd_61_Collection;
                xamlType = userType;
                break;

            case 62:   //  Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_62_PivotGridDataConditionalFormat;
                userType.AddMemberName("Name");
                userType.AddMemberName("Conditions");
                userType.AddMemberName("CellStyle");
                xamlType = userType;
                break;

            case 63:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>"));
                userType.CollectionAdd = VectorAdd_63_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 64:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_64_Collection;
                userType.CollectionAdd = VectorAdd_64_Collection;
                xamlType = userType;
                break;

            case 65:   //  Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_65_PivotGridDataCondition;
                userType.AddMemberName("ConditionType");
                userType.AddMemberName("Value");
                userType.AddMemberName("PredicateType");
                userType.AddMemberName("MeasureElement");
                xamlType = userType;
                break;

            case 66:   //  Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Equals", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType.Equals);
                userType.AddEnumValue("NotEquals", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType.NotEquals);
                userType.AddEnumValue("LessThan", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType.LessThan);
                userType.AddEnumValue("LessThanOrEqual", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType.LessThanOrEqual);
                userType.AddEnumValue("GreaterThan", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType.GreaterThan);
                userType.AddEnumValue("GreaterThanOrEqual", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType.GreaterThanOrEqual);
                userType.AddEnumValue("Between", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType.Between);
                userType.AddEnumValue("NotBetween", global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType.NotBetween);
                xamlType = userType;
                break;

            case 67:   //  Syncfusion.Data.PredicateType
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("And", global::Syncfusion.Data.PredicateType.And);
                userType.AddEnumValue("Or", global::Syncfusion.Data.PredicateType.Or);
                userType.AddEnumValue("AndAlso", global::Syncfusion.Data.PredicateType.AndAlso);
                userType.AddEnumValue("OrElse", global::Syncfusion.Data.PredicateType.OrElse);
                xamlType = userType;
                break;

            case 68:   //  Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_68_SfBusyIndicator;
                userType.AddMemberName("AnimationType");
                userType.AddMemberName("IsBusy");
                userType.AddMemberName("ViewboxHeight");
                userType.AddMemberName("ViewboxWidth");
                userType.AddMemberName("AnimationSpeed");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("HeaderPlacementMode");
                xamlType = userType;
                break;

            case 69:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 70:   //  Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("BarChart", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.BarChart);
                userType.AddEnumValue("Message", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Message);
                userType.AddEnumValue("DoubleRing", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DoubleRing);
                userType.AddEnumValue("DualRing", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DualRing);
                userType.AddEnumValue("Ripple", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Ripple);
                userType.AddEnumValue("DotCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DotCircle);
                userType.AddEnumValue("Cupertino", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Cupertino);
                userType.AddEnumValue("Flower", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Flower);
                userType.AddEnumValue("Gear", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Gear);
                userType.AddEnumValue("Liquid", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Liquid);
                userType.AddEnumValue("Box", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Box);
                userType.AddEnumValue("HorizontalPulsingBox", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.HorizontalPulsingBox);
                userType.AddEnumValue("Rotation", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Rotation);
                userType.AddEnumValue("SliceBox", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.SliceBox);
                userType.AddEnumValue("DoubleCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.DoubleCircle);
                userType.AddEnumValue("Drop", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Drop);
                userType.AddEnumValue("Ball", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Ball);
                userType.AddEnumValue("Delete", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Delete);
                userType.AddEnumValue("Sunny", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Sunny);
                userType.AddEnumValue("ECG", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.ECG);
                userType.AddEnumValue("GPS", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.GPS);
                userType.AddEnumValue("Pen", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Pen);
                userType.AddEnumValue("Globe", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Globe);
                userType.AddEnumValue("Print", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Print);
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Rectangle);
                userType.AddEnumValue("ArrowTrack", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.ArrowTrack);
                userType.AddEnumValue("Temperature", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Temperature);
                userType.AddEnumValue("Umbrella", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Umbrella);
                userType.AddEnumValue("Battery", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Battery);
                userType.AddEnumValue("Windmill", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Windmill);
                userType.AddEnumValue("Rainy", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Rainy);
                userType.AddEnumValue("Snow", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Snow);
                userType.AddEnumValue("Flight", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Flight);
                userType.AddEnumValue("Bulb", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Bulb);
                userType.AddEnumValue("Sunrise", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Sunrise);
                userType.AddEnumValue("Thunder", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.Thunder);
                userType.AddEnumValue("SingleCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.SingleCircle);
                userType.AddEnumValue("SlicedCircle", global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes.SlicedCircle);
                xamlType = userType;
                break;

            case 71:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 72:   //  Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode.Top);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode.Bottom);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode.None);
                xamlType = userType;
                break;

            case 73:   //  BI.PivotGrid.Exporting
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_73_Exporting;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 74:   //  BI.PivotGrid.CellSelection
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_74_CellSelection;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 75:   //  BI.PivotGrid.Tutorials.PivotGridSamples.Converters.ImageConverter
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_75_ImageConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 76:   //  Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_76_PivotGridTemplateCell;
                userType.AddMemberName("CellDescriptor");
                userType.AddMemberName("PivotCellDescriptor");
                userType.AddMemberName("CustomExpander");
                userType.AddMemberName("GridControlBase");
                userType.AddMemberName("IsExpanded");
                xamlType = userType;
                break;

            case 77:   //  Syncfusion.PivotAnalysis.UWP.PivotCellInfo
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 78:   //  Windows.UI.Xaml.Media.FontFamily
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 79:   //  Int32
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 80:   //  Windows.UI.Text.FontWeight
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 81:   //  Windows.UI.Xaml.TextWrapping
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 82:   //  Windows.UI.Text.FontStyle
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 83:   //  BI.PivotGrid.CellTemplate
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_83_CellTemplate;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 84:   //  BI.PivotGrid.ConditionalFormat
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_84_ConditionalFormat;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 85:   //  BI.PivotGrid.CustomSummaries
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_85_CustomSummaries;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 86:   //  BI.PivotGrid.Drill_Through
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_86_Drill_Through;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 87:   //  BI.PivotGrid.Editing
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_87_Editing;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 88:   //  BI.PivotGrid.ExpressionFields
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_88_ExpressionFields;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 89:   //  BI.PivotGrid.GettingStarted
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_89_GettingStarted;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 90:   //  BI.PivotGrid.GridLayout
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_90_GridLayout;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 91:   //  BI.PivotGrid.Hyperlink
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_91_Hyperlink;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 92:   //  BI.PivotGrid.KPI
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_92_KPI;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 93:   //  BI.PivotGrid.Localization
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_93_Localization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 94:   //  BI.PivotGrid.MemberProperties
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_94_MemberProperties;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 95:   //  BI.PivotGrid.NamedSets
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_95_NamedSets;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 96:   //  BI.PivotGrid.Relational
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_96_Relational;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 97:   //  BI.PivotGrid.SummaryDisplay
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_97_SummaryDisplay;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 98:   //  BI.PivotGrid.TotalsHiding
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_98_TotalsHiding;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 99:   //  BI.PivotGrid.UIThreading
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_99_UIThreading;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 100:   //  BI.PivotGrid.Updating
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_100_Updating;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 101:   //  BI.PivotGrid.GroupingBar
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_101_GroupingBar;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 102:   //  BI.PivotGrid.MDXQuery
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_102_MDXQuery;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 103:   //  BI.PivotGrid.RowPivotsOnly
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_103_RowPivotsOnly;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 104:   //  BI.PivotGrid.Serialization
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_104_Serialization;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 105:   //  BI.PivotGrid.StatePersistence
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Common.SampleLayout"));
                userType.Activator = Activate_105_StatePersistence;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 106:   //  Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_106_SetterValueBindingHelper;
                userType.AddMemberName("Type");
                userType.AddMemberName("Property");
                userType.AddMemberName("Binding");
                userType.AddMemberName("Values");
                userType.AddMemberName("PropertyBinding");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 107:   //  Windows.UI.Xaml.Data.Binding
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 108:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>
                userType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_108_Collection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 109:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Common_2015.Syncfusion_SampleBrowser_UWP_Common_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfGantt.UWP.Syncfusion_SfGantt_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfImageEditor.UWP.Syncfusion_SfImageEditor_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfSmithChart.UWP.Syncfusion_SfSmithChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2017_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_0_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_1_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_1_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_2_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_2_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_3_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_3_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_4_SampleLayout_Header(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Header;
        }
        private void set_4_SampleLayout_Header(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Header = (global::System.String)Value;
        }
        private object get_5_SampleLayout_Sample(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Sample;
        }
        private void set_5_SampleLayout_Sample(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Sample = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_6_SampleLayout_Setting(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Setting;
        }
        private void set_6_SampleLayout_Setting(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Setting = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_7_SampleLayout_OptionVisibility(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.OptionVisibility;
        }
        private void set_7_SampleLayout_OptionVisibility(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.OptionVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_8_SampleLayout_FontIcons(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.FontIcons;
        }
        private void set_8_SampleLayout_FontIcons(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.FontIcons = (global::System.String)Value;
        }
        private object get_9_SampleLayout_Pathstring(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.Pathstring;
        }
        private void set_9_SampleLayout_Pathstring(object instance, object Value)
        {
            var that = (global::Common.SampleLayout)instance;
            that.Pathstring = (global::System.String)Value;
        }
        private object get_10_SampleLayout_ClickCommand(object instance)
        {
            var that = (global::Common.SampleLayout)instance;
            return that.ClickCommand;
        }
        private object get_11_SfPivotGrid_InternalGrid(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.InternalGrid;
        }
        private void set_11_SfPivotGrid_InternalGrid(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.InternalGrid = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridControlBase)Value;
        }
        private object get_12_SfPivotGrid_GridArea(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GridArea;
        }
        private void set_12_SfPivotGrid_GridArea(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GridArea = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_13_SfPivotGrid_EditManager(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EditManager;
        }
        private void set_13_SfPivotGrid_EditManager(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EditManager = (global::Syncfusion.UI.Xaml.PivotGrid.PivotEditingManager)Value;
        }
        private object get_14_SfPivotGrid_UpdateManager(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.UpdateManager;
        }
        private void set_14_SfPivotGrid_UpdateManager(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.UpdateManager = (global::Syncfusion.UI.Xaml.PivotGrid.PivotUpdatingManager)Value;
        }
        private object get_15_SfPivotGrid_SortOption(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.SortOption;
        }
        private void set_15_SfPivotGrid_SortOption(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.SortOption = (global::Syncfusion.UI.Xaml.PivotGrid.SortOptions)Value;
        }
        private object get_16_SfPivotGrid_IgnoreExpandCollapseOnSerialization(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.IgnoreExpandCollapseOnSerialization;
        }
        private void set_16_SfPivotGrid_IgnoreExpandCollapseOnSerialization(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.IgnoreExpandCollapseOnSerialization = (global::System.Boolean)Value;
        }
        private object get_17_SfPivotGrid_AllowedFields(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.AllowedFields;
        }
        private object get_18_FieldInfo_Expression(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FieldInfo)instance;
            return that.Expression;
        }
        private void set_18_FieldInfo_Expression(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FieldInfo)instance;
            that.Expression = (global::System.String)Value;
        }
        private object get_19_FieldInfo_FieldType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FieldInfo)instance;
            return that.FieldType;
        }
        private void set_19_FieldInfo_FieldType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FieldInfo)instance;
            that.FieldType = (global::Syncfusion.PivotAnalysis.UWP.FieldTypes)Value;
        }
        private object get_20_FieldInfo_Format(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FieldInfo)instance;
            return that.Format;
        }
        private void set_20_FieldInfo_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FieldInfo)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_21_FieldInfo_Name(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FieldInfo)instance;
            return that.Name;
        }
        private void set_21_FieldInfo_Name(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FieldInfo)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_22_SfPivotGrid_RowPivotsOnly(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.RowPivotsOnly;
        }
        private void set_22_SfPivotGrid_RowPivotsOnly(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.RowPivotsOnly = (global::System.Boolean)Value;
        }
        private object get_23_SfPivotGrid_FieldChooser(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.FieldChooser;
        }
        private void set_23_SfPivotGrid_FieldChooser(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.FieldChooser = (global::Syncfusion.UI.Xaml.PivotGrid.PivotValueChooser)Value;
        }
        private object get_24_SfPivotGrid_ShowCalculationsAsColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ShowCalculationsAsColumns;
        }
        private void set_24_SfPivotGrid_ShowCalculationsAsColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ShowCalculationsAsColumns = (global::System.Boolean)Value;
        }
        private object get_25_SfPivotGrid_EnableStatePersistence(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableStatePersistence;
        }
        private void set_25_SfPivotGrid_EnableStatePersistence(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableStatePersistence = (global::System.Boolean)Value;
        }
        private object get_26_SfPivotGrid_EnableHyperlinkOnMouseOver(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableHyperlinkOnMouseOver;
        }
        private void set_26_SfPivotGrid_EnableHyperlinkOnMouseOver(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableHyperlinkOnMouseOver = (global::System.Boolean)Value;
        }
        private object get_27_SfPivotGrid_ShowPivotValueChooser(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ShowPivotValueChooser;
        }
        private void set_27_SfPivotGrid_ShowPivotValueChooser(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ShowPivotValueChooser = (global::System.Boolean)Value;
        }
        private object get_28_SfPivotGrid_OlapDataManager(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.OlapDataManager;
        }
        private void set_28_SfPivotGrid_OlapDataManager(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.OlapDataManager = (global::Syncfusion.Olap.UWP.Manager.OlapDataManager)Value;
        }
        private object get_29_SfPivotGrid_Layout(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.Layout;
        }
        private void set_29_SfPivotGrid_Layout(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.Layout = (global::Syncfusion.Olap.UWP.Engine.GridLayout)Value;
        }
        private object get_30_SfPivotGrid_GridLayout(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GridLayout;
        }
        private void set_30_SfPivotGrid_GridLayout(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GridLayout = (global::Syncfusion.PivotAnalysis.UWP.GridLayout)Value;
        }
        private object get_31_SfPivotGrid_GridStyleInfo(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GridStyleInfo;
        }
        private void set_31_SfPivotGrid_GridStyleInfo(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GridStyleInfo = (global::Syncfusion.UI.Xaml.PivotGrid.ExportingGridStyleInfo)Value;
        }
        private object get_32_SfPivotGrid_ColumnHeaderStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ColumnHeaderStyle;
        }
        private void set_32_SfPivotGrid_ColumnHeaderStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ColumnHeaderStyle = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)Value;
        }
        private object get_33_SfPivotGrid_SummaryRowStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.SummaryRowStyle;
        }
        private void set_33_SfPivotGrid_SummaryRowStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.SummaryRowStyle = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)Value;
        }
        private object get_34_SfPivotGrid_SummaryColumnStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.SummaryColumnStyle;
        }
        private void set_34_SfPivotGrid_SummaryColumnStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.SummaryColumnStyle = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)Value;
        }
        private object get_35_SfPivotGrid_RowHeaderStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.RowHeaderStyle;
        }
        private void set_35_SfPivotGrid_RowHeaderStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.RowHeaderStyle = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)Value;
        }
        private object get_36_SfPivotGrid_ValueCellStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ValueCellStyle;
        }
        private void set_36_SfPivotGrid_ValueCellStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ValueCellStyle = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)Value;
        }
        private object get_37_SfPivotGrid_EnableAutoExecute(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableAutoExecute;
        }
        private void set_37_SfPivotGrid_EnableAutoExecute(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableAutoExecute = (global::System.Boolean)Value;
        }
        private object get_38_SfPivotGrid_FieldListBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.FieldListBorderBrush;
        }
        private void set_38_SfPivotGrid_FieldListBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.FieldListBorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_39_SfPivotGrid_GridVisualStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GridVisualStyle;
        }
        private void set_39_SfPivotGrid_GridVisualStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GridVisualStyle = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle)Value;
        }
        private object get_40_SfPivotGrid_FreezeHeaders(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.FreezeHeaders;
        }
        private void set_40_SfPivotGrid_FreezeHeaders(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.FreezeHeaders = (global::System.Boolean)Value;
        }
        private object get_41_SfPivotGrid_ShowValueCellToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ShowValueCellToolTip;
        }
        private void set_41_SfPivotGrid_ShowValueCellToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ShowValueCellToolTip = (global::System.Boolean)Value;
        }
        private object get_42_SfPivotGrid_ShowHeaderCellsToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ShowHeaderCellsToolTip;
        }
        private void set_42_SfPivotGrid_ShowHeaderCellsToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ShowHeaderCellsToolTip = (global::System.Boolean)Value;
        }
        private object get_43_SfPivotGrid_GridSettings(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GridSettings;
        }
        private void set_43_SfPivotGrid_GridSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GridSettings = (global::Syncfusion.Olap.UWP.Reports.GridAppearanceSettings)Value;
        }
        private object get_44_SfPivotGrid_EnableRowHeaderArea(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableRowHeaderArea;
        }
        private void set_44_SfPivotGrid_EnableRowHeaderArea(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableRowHeaderArea = (global::System.Boolean)Value;
        }
        private object get_45_SfPivotGrid_EnableValueHeaderArea(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableValueHeaderArea;
        }
        private void set_45_SfPivotGrid_EnableValueHeaderArea(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableValueHeaderArea = (global::System.Boolean)Value;
        }
        private object get_46_SfPivotGrid_EnableFilterHeaderArea(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableFilterHeaderArea;
        }
        private void set_46_SfPivotGrid_EnableFilterHeaderArea(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableFilterHeaderArea = (global::System.Boolean)Value;
        }
        private object get_47_SfPivotGrid_EnableColumnHeaderArea(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableColumnHeaderArea;
        }
        private void set_47_SfPivotGrid_EnableColumnHeaderArea(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableColumnHeaderArea = (global::System.Boolean)Value;
        }
        private object get_48_SfPivotGrid_EnableUpdating(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableUpdating;
        }
        private void set_48_SfPivotGrid_EnableUpdating(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableUpdating = (global::System.Boolean)Value;
        }
        private object get_49_SfPivotGrid_EnableValueEditing(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableValueEditing;
        }
        private void set_49_SfPivotGrid_EnableValueEditing(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableValueEditing = (global::System.Boolean)Value;
        }
        private object get_50_SfPivotGrid_AllowSelection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.AllowSelection;
        }
        private void set_50_SfPivotGrid_AllowSelection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.AllowSelection = (global::System.Boolean)Value;
        }
        private object get_51_SfPivotGrid_AllowSelectionWithHeaders(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.AllowSelectionWithHeaders;
        }
        private void set_51_SfPivotGrid_AllowSelectionWithHeaders(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.AllowSelectionWithHeaders = (global::System.Boolean)Value;
        }
        private object get_52_SfPivotGrid_ShowSubTotals(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ShowSubTotals;
        }
        private void set_52_SfPivotGrid_ShowSubTotals(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ShowSubTotals = (global::System.Boolean)Value;
        }
        private object get_53_SfPivotGrid_ShowGrandTotals(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ShowGrandTotals;
        }
        private void set_53_SfPivotGrid_ShowGrandTotals(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ShowGrandTotals = (global::System.Boolean)Value;
        }
        private object get_54_SfPivotGrid_ShowRowSubTotals(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ShowRowSubTotals;
        }
        private void set_54_SfPivotGrid_ShowRowSubTotals(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ShowRowSubTotals = (global::System.Boolean)Value;
        }
        private object get_55_SfPivotGrid_ShowColumnSubTotals(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ShowColumnSubTotals;
        }
        private void set_55_SfPivotGrid_ShowColumnSubTotals(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ShowColumnSubTotals = (global::System.Boolean)Value;
        }
        private object get_56_SfPivotGrid_ValueCellTextAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ValueCellTextAlignment;
        }
        private void set_56_SfPivotGrid_ValueCellTextAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ValueCellTextAlignment = (global::Windows.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_57_SfPivotGrid_ShowProcessingBar(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ShowProcessingBar;
        }
        private void set_57_SfPivotGrid_ShowProcessingBar(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ShowProcessingBar = (global::System.Boolean)Value;
        }
        private object get_58_SfPivotGrid_GridLineStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GridLineStroke;
        }
        private void set_58_SfPivotGrid_GridLineStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GridLineStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_59_SfPivotGrid_GridLineThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GridLineThickness;
        }
        private void set_59_SfPivotGrid_GridLineThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GridLineThickness = (global::System.Double)Value;
        }
        private object get_60_SfPivotGrid_ExpanderStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ExpanderStyle;
        }
        private void set_60_SfPivotGrid_ExpanderStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ExpanderStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_61_SfPivotGrid_PivotRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.PivotRows;
        }
        private void set_61_SfPivotGrid_PivotRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.PivotRows = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)Value;
        }
        private object get_62_PivotItem_AllowFilter(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowFilter;
        }
        private void set_62_PivotItem_AllowFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowFilter = (global::System.Boolean)Value;
        }
        private object get_63_PivotItem_AllowRunTimeGroupByField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowRunTimeGroupByField;
        }
        private void set_63_PivotItem_AllowRunTimeGroupByField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowRunTimeGroupByField = (global::System.Boolean)Value;
        }
        private object get_64_PivotItem_AllowSort(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.AllowSort;
        }
        private void set_64_PivotItem_AllowSort(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.AllowSort = (global::System.Boolean)Value;
        }
        private object get_65_PivotItem_Comparer(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Comparer;
        }
        private void set_65_PivotItem_Comparer(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Comparer = (global::System.Collections.IComparer)Value;
        }
        private object get_66_PivotItem_EnableHyperlinks(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.EnableHyperlinks;
        }
        private void set_66_PivotItem_EnableHyperlinks(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.EnableHyperlinks = (global::System.Boolean)Value;
        }
        private object get_67_PivotItem_FieldCaption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldCaption;
        }
        private void set_67_PivotItem_FieldCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldCaption = (global::System.String)Value;
        }
        private object get_68_PivotItem_FieldHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldHeader;
        }
        private void set_68_PivotItem_FieldHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldHeader = (global::System.String)Value;
        }
        private object get_69_PivotItem_FieldMappingName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.FieldMappingName;
        }
        private void set_69_PivotItem_FieldMappingName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.FieldMappingName = (global::System.String)Value;
        }
        private object get_70_PivotItem_Format(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Format;
        }
        private void set_70_PivotItem_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_71_PivotItem_ShowSubTotal(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.ShowSubTotal;
        }
        private void set_71_PivotItem_ShowSubTotal(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.ShowSubTotal = (global::System.Boolean)Value;
        }
        private object get_72_PivotItem_SortDirection(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.SortDirection;
        }
        private void set_72_PivotItem_SortDirection(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.SortDirection = (global::Syncfusion.Data.ListSortDirection)Value;
        }
        private object get_73_PivotItem_Summary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Summary;
        }
        private void set_73_PivotItem_Summary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Summary = (global::Syncfusion.PivotAnalysis.UWP.SummaryBase)Value;
        }
        private object get_74_PivotItem_SummaryType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.SummaryType;
        }
        private void set_74_PivotItem_SummaryType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.SummaryType = (global::Syncfusion.PivotAnalysis.UWP.SummaryType)Value;
        }
        private object get_75_PivotItem_TotalHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.TotalHeader;
        }
        private void set_75_PivotItem_TotalHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.TotalHeader = (global::System.String)Value;
        }
        private object get_76_PivotItem_Width(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            return that.Width;
        }
        private void set_76_PivotItem_Width(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotItem)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_77_SfPivotGrid_PivotColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.PivotColumns;
        }
        private void set_77_SfPivotGrid_PivotColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.PivotColumns = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotItem>)Value;
        }
        private object get_78_SfPivotGrid_PivotCalculations(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.PivotCalculations;
        }
        private void set_78_SfPivotGrid_PivotCalculations(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.PivotCalculations = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>)Value;
        }
        private object get_79_PivotComputationInfo_AllowFilter(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowFilter;
        }
        private void set_79_PivotComputationInfo_AllowFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowFilter = (global::System.Boolean)Value;
        }
        private object get_80_PivotComputationInfo_AllowRunTimeGroupByField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowRunTimeGroupByField;
        }
        private void set_80_PivotComputationInfo_AllowRunTimeGroupByField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowRunTimeGroupByField = (global::System.Boolean)Value;
        }
        private object get_81_PivotComputationInfo_AllowSort(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.AllowSort;
        }
        private void set_81_PivotComputationInfo_AllowSort(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.AllowSort = (global::System.Boolean)Value;
        }
        private object get_82_PivotComputationInfo_BaseField(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.BaseField;
        }
        private void set_82_PivotComputationInfo_BaseField(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.BaseField = (global::System.String)Value;
        }
        private object get_83_PivotComputationInfo_BaseItem(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.BaseItem;
        }
        private void set_83_PivotComputationInfo_BaseItem(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.BaseItem = (global::System.String)Value;
        }
        private object get_84_PivotComputationInfo_FieldType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldType;
        }
        private void set_84_PivotComputationInfo_FieldType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldType = (global::System.String)Value;
        }
        private object get_85_PivotComputationInfo_CalculationName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.CalculationName;
        }
        private void set_85_PivotComputationInfo_CalculationName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.CalculationName = (global::System.String)Value;
        }
        private object get_86_PivotComputationInfo_CalculationType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.CalculationType;
        }
        private void set_86_PivotComputationInfo_CalculationType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.CalculationType = (global::Syncfusion.PivotAnalysis.UWP.CalculationType)Value;
        }
        private object get_87_PivotComputationInfo_DefaultValue(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.DefaultValue;
        }
        private void set_87_PivotComputationInfo_DefaultValue(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.DefaultValue = (global::System.Object)Value;
        }
        private object get_88_PivotComputationInfo_Description(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Description;
        }
        private void set_88_PivotComputationInfo_Description(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_89_PivotComputationInfo_DisplayOption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.DisplayOption;
        }
        private void set_89_PivotComputationInfo_DisplayOption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.DisplayOption = (global::Syncfusion.PivotAnalysis.UWP.DisplayOption)Value;
        }
        private object get_90_PivotComputationInfo_EnableHyperlinks(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.EnableHyperlinks;
        }
        private void set_90_PivotComputationInfo_EnableHyperlinks(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.EnableHyperlinks = (global::System.Boolean)Value;
        }
        private object get_91_PivotComputationInfo_Expression(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Expression;
        }
        private void set_91_PivotComputationInfo_Expression(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Expression = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)Value;
        }
        private object get_92_PivotComputationInfo_FieldCaption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldCaption;
        }
        private void set_92_PivotComputationInfo_FieldCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldCaption = (global::System.String)Value;
        }
        private object get_93_PivotComputationInfo_FieldHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldHeader;
        }
        private void set_93_PivotComputationInfo_FieldHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldHeader = (global::System.String)Value;
        }
        private object get_94_PivotComputationInfo_FieldName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.FieldName;
        }
        private void set_94_PivotComputationInfo_FieldName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.FieldName = (global::System.String)Value;
        }
        private object get_95_PivotComputationInfo_Format(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Format;
        }
        private void set_95_PivotComputationInfo_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_96_PivotComputationInfo_Formula(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Formula;
        }
        private void set_96_PivotComputationInfo_Formula(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Formula = (global::System.String)Value;
        }
        private object get_97_PivotComputationInfo_InnerMostComputationsOnly(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.InnerMostComputationsOnly;
        }
        private void set_97_PivotComputationInfo_InnerMostComputationsOnly(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.InnerMostComputationsOnly = (global::Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel)Value;
        }
        private object get_98_PivotComputationInfo_IsTopColumnSummary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.IsTopColumnSummary;
        }
        private void set_98_PivotComputationInfo_IsTopColumnSummary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.IsTopColumnSummary = (global::System.Boolean)Value;
        }
        private object get_99_PivotComputationInfo_PadString(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.PadString;
        }
        private void set_99_PivotComputationInfo_PadString(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.PadString = (global::System.String)Value;
        }
        private object get_100_PivotComputationInfo_Summary(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.Summary;
        }
        private void set_100_PivotComputationInfo_Summary(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.Summary = (global::Syncfusion.PivotAnalysis.UWP.SummaryBase)Value;
        }
        private object get_101_PivotComputationInfo_SummaryType(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            return that.SummaryType;
        }
        private void set_101_PivotComputationInfo_SummaryType(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.PivotComputationInfo)instance;
            that.SummaryType = (global::Syncfusion.PivotAnalysis.UWP.SummaryType)Value;
        }
        private object get_102_SfPivotGrid_Filters(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.Filters;
        }
        private void set_102_SfPivotGrid_Filters(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.Filters = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.PivotAnalysis.UWP.FilterExpression>)Value;
        }
        private object get_103_FilterExpression_CaseSensitive(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.CaseSensitive;
        }
        private void set_103_FilterExpression_CaseSensitive(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.CaseSensitive = (global::System.Boolean)Value;
        }
        private object get_104_FilterExpression_DimensionHeader(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.DimensionHeader;
        }
        private void set_104_FilterExpression_DimensionHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.DimensionHeader = (global::System.String)Value;
        }
        private object get_105_FilterExpression_DimensionName(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.DimensionName;
        }
        private void set_105_FilterExpression_DimensionName(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.DimensionName = (global::System.String)Value;
        }
        private object get_106_FilterExpression_Error(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Error;
        }
        private object get_107_FilterExpression_ErrorString(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.ErrorString;
        }
        private object get_108_FilterExpression_Evaluator(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Evaluator;
        }
        private void set_108_FilterExpression_Evaluator(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.Evaluator = (global::System.Delegate)Value;
        }
        private object get_109_FilterExpression_Expression(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Expression;
        }
        private void set_109_FilterExpression_Expression(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.Expression = (global::System.String)Value;
        }
        private object get_110_FilterExpression_FieldCaption(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.FieldCaption;
        }
        private void set_110_FilterExpression_FieldCaption(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.FieldCaption = (global::System.String)Value;
        }
        private object get_111_FilterExpression_Format(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Format;
        }
        private void set_111_FilterExpression_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_112_FilterExpression_Name(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Name;
        }
        private void set_112_FilterExpression_Name(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_113_FilterExpression_Tag(object instance)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            return that.Tag;
        }
        private void set_113_FilterExpression_Tag(object instance, object Value)
        {
            var that = (global::Syncfusion.PivotAnalysis.UWP.FilterExpression)instance;
            that.Tag = (global::System.Object)Value;
        }
        private object get_114_SfPivotGrid_PivotEngine(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.PivotEngine;
        }
        private void set_114_SfPivotGrid_PivotEngine(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.PivotEngine = (global::Syncfusion.PivotAnalysis.UWP.PivotEngine)Value;
        }
        private object get_115_SfPivotGrid_ItemSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ItemSource;
        }
        private void set_115_SfPivotGrid_ItemSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ItemSource = (global::System.Object)Value;
        }
        private object get_116_SfPivotGrid_LoadWithDefaultPropertyFields(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.LoadWithDefaultPropertyFields;
        }
        private void set_116_SfPivotGrid_LoadWithDefaultPropertyFields(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.LoadWithDefaultPropertyFields = (global::System.Boolean)Value;
        }
        private object get_117_SfPivotGrid_LoadInBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.LoadInBackground;
        }
        private void set_117_SfPivotGrid_LoadInBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.LoadInBackground = (global::System.Boolean)Value;
        }
        private object get_118_SfPivotGrid_SelectedCell(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.SelectedCell;
        }
        private void set_118_SfPivotGrid_SelectedCell(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.SelectedCell = (global::Syncfusion.Olap.UWP.Engine.PivotCellDescriptor)Value;
        }
        private object get_119_SfPivotGrid_SelectedItems(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.SelectedItems;
        }
        private object get_120_SelectedItem_Column(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem)instance;
            return that.Column;
        }
        private object get_121_SelectedItem_Row(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem)instance;
            return that.Row;
        }
        private object get_122_SelectedItem_ColumnList(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem)instance;
            return that.ColumnList;
        }
        private object get_123_SelectedItem_RowList(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem)instance;
            return that.RowList;
        }
        private object get_124_SelectedItem_Value(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem)instance;
            return that.Value;
        }
        private object get_125_SelectedItem_FormattedValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SelectedItem)instance;
            return that.FormattedValue;
        }
        private object get_126_SfPivotGrid_AllowResizeColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.AllowResizeColumns;
        }
        private void set_126_SfPivotGrid_AllowResizeColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.AllowResizeColumns = (global::System.Boolean)Value;
        }
        private object get_127_SfPivotGrid_EnableDrillThrough(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableDrillThrough;
        }
        private void set_127_SfPivotGrid_EnableDrillThrough(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableDrillThrough = (global::System.Boolean)Value;
        }
        private object get_128_SfPivotGrid_AllowResizeRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.AllowResizeRows;
        }
        private void set_128_SfPivotGrid_AllowResizeRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.AllowResizeRows = (global::System.Boolean)Value;
        }
        private object get_129_SfPivotGrid_ResizeColumnsToFit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ResizeColumnsToFit;
        }
        private void set_129_SfPivotGrid_ResizeColumnsToFit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ResizeColumnsToFit = (global::System.Boolean)Value;
        }
        private object get_130_SfPivotGrid_ResizeRowsToFit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ResizeRowsToFit;
        }
        private void set_130_SfPivotGrid_ResizeRowsToFit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ResizeRowsToFit = (global::System.Boolean)Value;
        }
        private object get_131_SfPivotGrid_EnableConditionalFormat(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableConditionalFormat;
        }
        private void set_131_SfPivotGrid_EnableConditionalFormat(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableConditionalFormat = (global::System.Boolean)Value;
        }
        private object get_132_SfPivotGrid_ConditionalFormats(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ConditionalFormats;
        }
        private void set_132_SfPivotGrid_ConditionalFormats(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ConditionalFormats = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>)Value;
        }
        private object get_133_PivotGridDataConditionalFormat_Name(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat)instance;
            return that.Name;
        }
        private void set_133_PivotGridDataConditionalFormat_Name(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_134_PivotGridDataConditionalFormat_Conditions(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat)instance;
            return that.Conditions;
        }
        private void set_134_PivotGridDataConditionalFormat_Conditions(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat)instance;
            that.Conditions = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>)Value;
        }
        private object get_135_PivotGridDataCondition_ConditionType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition)instance;
            return that.ConditionType;
        }
        private void set_135_PivotGridDataCondition_ConditionType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition)instance;
            that.ConditionType = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType)Value;
        }
        private object get_136_PivotGridDataCondition_Value(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition)instance;
            return that.Value;
        }
        private void set_136_PivotGridDataCondition_Value(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition)instance;
            that.Value = (global::System.Object)Value;
        }
        private object get_137_PivotGridDataCondition_PredicateType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition)instance;
            return that.PredicateType;
        }
        private void set_137_PivotGridDataCondition_PredicateType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition)instance;
            that.PredicateType = (global::Syncfusion.Data.PredicateType)Value;
        }
        private object get_138_PivotGridDataCondition_MeasureElement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition)instance;
            return that.MeasureElement;
        }
        private void set_138_PivotGridDataCondition_MeasureElement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition)instance;
            that.MeasureElement = (global::System.String)Value;
        }
        private object get_139_PivotGridDataConditionalFormat_CellStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat)instance;
            return that.CellStyle;
        }
        private void set_139_PivotGridDataConditionalFormat_CellStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat)instance;
            that.CellStyle = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)Value;
        }
        private object get_140_SfPivotGrid_ShowGroupingBar(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.ShowGroupingBar;
        }
        private void set_140_SfPivotGrid_ShowGroupingBar(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.ShowGroupingBar = (global::System.Boolean)Value;
        }
        private object get_141_SfPivotGrid_EnableGroupingBarFiltering(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableGroupingBarFiltering;
        }
        private void set_141_SfPivotGrid_EnableGroupingBarFiltering(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableGroupingBarFiltering = (global::System.Boolean)Value;
        }
        private object get_142_SfPivotGrid_EnableGroupingBarRemoving(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableGroupingBarRemoving;
        }
        private void set_142_SfPivotGrid_EnableGroupingBarRemoving(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableGroupingBarRemoving = (global::System.Boolean)Value;
        }
        private object get_143_SfPivotGrid_EnableGroupingBarSorting(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.EnableGroupingBarSorting;
        }
        private void set_143_SfPivotGrid_EnableGroupingBarSorting(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.EnableGroupingBarSorting = (global::System.Boolean)Value;
        }
        private object get_144_SfPivotGrid_AllowMultiFunctionalSortFilter(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.AllowMultiFunctionalSortFilter;
        }
        private void set_144_SfPivotGrid_AllowMultiFunctionalSortFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.AllowMultiFunctionalSortFilter = (global::System.Boolean)Value;
        }
        private object get_145_SfPivotGrid_GroupingBarBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GroupingBarBackground;
        }
        private void set_145_SfPivotGrid_GroupingBarBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GroupingBarBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_146_SfPivotGrid_GroupingBarBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GroupingBarBorderBrush;
        }
        private void set_146_SfPivotGrid_GroupingBarBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GroupingBarBorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_147_SfPivotGrid_GroupingBarItemBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GroupingBarItemBorderBrush;
        }
        private void set_147_SfPivotGrid_GroupingBarItemBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GroupingBarItemBorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_148_SfPivotGrid_GroupingBarItemBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GroupingBarItemBackground;
        }
        private void set_148_SfPivotGrid_GroupingBarItemBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GroupingBarItemBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_149_SfPivotGrid_GroupingBarItemForeground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            return that.GroupingBarItemForeground;
        }
        private void set_149_SfPivotGrid_GroupingBarItemForeground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid)instance;
            that.GroupingBarItemForeground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_150_SfBusyIndicator_AnimationType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.AnimationType;
        }
        private void set_150_SfBusyIndicator_AnimationType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.AnimationType = (global::Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes)Value;
        }
        private object get_151_SfBusyIndicator_IsBusy(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.IsBusy;
        }
        private void set_151_SfBusyIndicator_IsBusy(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.IsBusy = (global::System.Boolean)Value;
        }
        private object get_152_SfBusyIndicator_ViewboxHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.ViewboxHeight;
        }
        private void set_152_SfBusyIndicator_ViewboxHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.ViewboxHeight = (global::System.Double)Value;
        }
        private object get_153_SfBusyIndicator_ViewboxWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.ViewboxWidth;
        }
        private void set_153_SfBusyIndicator_ViewboxWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.ViewboxWidth = (global::System.Double)Value;
        }
        private object get_154_SfBusyIndicator_AnimationSpeed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.AnimationSpeed;
        }
        private void set_154_SfBusyIndicator_AnimationSpeed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.AnimationSpeed = (global::System.Double)Value;
        }
        private object get_155_SfBusyIndicator_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.Header;
        }
        private void set_155_SfBusyIndicator_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_156_SfBusyIndicator_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.HeaderTemplate;
        }
        private void set_156_SfBusyIndicator_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_157_SfBusyIndicator_HeaderPlacementMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            return that.HeaderPlacementMode;
        }
        private void set_157_SfBusyIndicator_HeaderPlacementMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator)instance;
            that.HeaderPlacementMode = (global::Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode)Value;
        }
        private object get_158_PivotGridTemplateCell_CellDescriptor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell)instance;
            return that.CellDescriptor;
        }
        private void set_158_PivotGridTemplateCell_CellDescriptor(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell)instance;
            that.CellDescriptor = (global::Syncfusion.Olap.UWP.Engine.PivotCellDescriptor)Value;
        }
        private object get_159_PivotGridTemplateCell_PivotCellDescriptor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell)instance;
            return that.PivotCellDescriptor;
        }
        private void set_159_PivotGridTemplateCell_PivotCellDescriptor(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell)instance;
            that.PivotCellDescriptor = (global::Syncfusion.PivotAnalysis.UWP.PivotCellInfo)Value;
        }
        private object get_160_PivotGridTemplateCell_CustomExpander(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell)instance;
            return that.CustomExpander;
        }
        private void set_160_PivotGridTemplateCell_CustomExpander(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell)instance;
            that.CustomExpander = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_161_PivotGridTemplateCell_GridControlBase(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell)instance;
            return that.GridControlBase;
        }
        private void set_161_PivotGridTemplateCell_GridControlBase(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell)instance;
            that.GridControlBase = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridControlBase)Value;
        }
        private object get_162_PivotGridTemplateCell_IsExpanded(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell)instance;
            return that.IsExpanded;
        }
        private object get_163_PivotGridCellStyle_Background(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            return that.Background;
        }
        private void set_163_PivotGridCellStyle_Background(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            that.Background = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_164_PivotGridCellStyle_Style(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            return that.Style;
        }
        private void set_164_PivotGridCellStyle_Style(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            that.Style = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_165_PivotGridCellStyle_EnableContextMenu(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            return that.EnableContextMenu;
        }
        private void set_165_PivotGridCellStyle_EnableContextMenu(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            that.EnableContextMenu = (global::System.Boolean)Value;
        }
        private object get_166_PivotGridCellStyle_FontFamily(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            return that.FontFamily;
        }
        private void set_166_PivotGridCellStyle_FontFamily(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_167_PivotGridCellStyle_FontSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            return that.FontSize;
        }
        private void set_167_PivotGridCellStyle_FontSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            that.FontSize = (global::System.Int32)Value;
        }
        private object get_168_PivotGridCellStyle_FontWeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            return that.FontWeight;
        }
        private void set_168_PivotGridCellStyle_FontWeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_169_PivotGridCellStyle_Foreground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            return that.Foreground;
        }
        private void set_169_PivotGridCellStyle_Foreground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_170_PivotGridCellStyle_IsHyperlinkCell(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            return that.IsHyperlinkCell;
        }
        private void set_170_PivotGridCellStyle_IsHyperlinkCell(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            that.IsHyperlinkCell = (global::System.Boolean)Value;
        }
        private object get_171_PivotGridCellStyle_TextWrapping(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            return that.TextWrapping;
        }
        private void set_171_PivotGridCellStyle_TextWrapping(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            that.TextWrapping = (global::Windows.UI.Xaml.TextWrapping)Value;
        }
        private object get_172_PivotGridCellStyle_FontStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            return that.FontStyle;
        }
        private void set_172_PivotGridCellStyle_FontStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_173_SetterValueBindingHelper_Type(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Type;
        }
        private void set_173_SetterValueBindingHelper_Type(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Type = (global::System.String)Value;
        }
        private object get_174_SetterValueBindingHelper_Property(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Property;
        }
        private void set_174_SetterValueBindingHelper_Property(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Property = (global::System.String)Value;
        }
        private object get_175_SetterValueBindingHelper_Binding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Binding;
        }
        private void set_175_SetterValueBindingHelper_Binding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            that.Binding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_176_SetterValueBindingHelper_Values(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)instance;
            return that.Values;
        }
        private object get_177_SetterValueBindingHelper_PropertyBinding(object instance)
        {
            return global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.GetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance);
        }
        private void set_177_SetterValueBindingHelper_PropertyBinding(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.SetPropertyBinding((global::Windows.UI.Xaml.FrameworkElement)instance, (global::Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper)Value);
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember xamlMember = null;
            global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Windows.UI.Color.A":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_0_Color_A;
                xamlMember.Setter = set_0_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_1_Color_B;
                xamlMember.Setter = set_1_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_2_Color_G;
                xamlMember.Setter = set_2_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_3_Color_R;
                xamlMember.Setter = set_3_Color_R;
                break;
            case "Common.SampleLayout.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Header", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_SampleLayout_Header;
                xamlMember.Setter = set_4_SampleLayout_Header;
                break;
            case "Common.SampleLayout.Sample":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Sample", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SampleLayout_Sample;
                xamlMember.Setter = set_5_SampleLayout_Sample;
                break;
            case "Common.SampleLayout.Setting":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Setting", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_SampleLayout_Setting;
                xamlMember.Setter = set_6_SampleLayout_Setting;
                break;
            case "Common.SampleLayout.OptionVisibility":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "OptionVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_SampleLayout_OptionVisibility;
                xamlMember.Setter = set_7_SampleLayout_OptionVisibility;
                break;
            case "Common.SampleLayout.FontIcons":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FontIcons", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_SampleLayout_FontIcons;
                xamlMember.Setter = set_8_SampleLayout_FontIcons;
                break;
            case "Common.SampleLayout.Pathstring":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Pathstring", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_SampleLayout_Pathstring;
                xamlMember.Setter = set_9_SampleLayout_Pathstring;
                break;
            case "Common.SampleLayout.ClickCommand":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Common.SampleLayout");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ClickCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_10_SampleLayout_ClickCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.InternalGrid":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "InternalGrid", "Syncfusion.UI.Xaml.PivotGrid.PivotGridControlBase");
                xamlMember.Getter = get_11_SfPivotGrid_InternalGrid;
                xamlMember.Setter = set_11_SfPivotGrid_InternalGrid;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GridArea":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GridArea", "Windows.UI.Xaml.UIElement");
                xamlMember.Getter = get_12_SfPivotGrid_GridArea;
                xamlMember.Setter = set_12_SfPivotGrid_GridArea;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EditManager":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EditManager", "Syncfusion.UI.Xaml.PivotGrid.PivotEditingManager");
                xamlMember.Getter = get_13_SfPivotGrid_EditManager;
                xamlMember.Setter = set_13_SfPivotGrid_EditManager;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.UpdateManager":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "UpdateManager", "Syncfusion.UI.Xaml.PivotGrid.PivotUpdatingManager");
                xamlMember.Getter = get_14_SfPivotGrid_UpdateManager;
                xamlMember.Setter = set_14_SfPivotGrid_UpdateManager;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.SortOption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "SortOption", "Syncfusion.UI.Xaml.PivotGrid.SortOptions");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_SfPivotGrid_SortOption;
                xamlMember.Setter = set_15_SfPivotGrid_SortOption;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.IgnoreExpandCollapseOnSerialization":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "IgnoreExpandCollapseOnSerialization", "Boolean");
                xamlMember.Getter = get_16_SfPivotGrid_IgnoreExpandCollapseOnSerialization;
                xamlMember.Setter = set_16_SfPivotGrid_IgnoreExpandCollapseOnSerialization;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.AllowedFields":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowedFields", "System.Collections.Generic.List`1<Syncfusion.PivotAnalysis.UWP.FieldInfo>");
                xamlMember.Getter = get_17_SfPivotGrid_AllowedFields;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.PivotAnalysis.UWP.FieldInfo.Expression":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FieldInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Expression", "String");
                xamlMember.Getter = get_18_FieldInfo_Expression;
                xamlMember.Setter = set_18_FieldInfo_Expression;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FieldInfo.FieldType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FieldInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FieldType", "Syncfusion.PivotAnalysis.UWP.FieldTypes");
                xamlMember.Getter = get_19_FieldInfo_FieldType;
                xamlMember.Setter = set_19_FieldInfo_FieldType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FieldInfo.Format":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FieldInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_20_FieldInfo_Format;
                xamlMember.Setter = set_20_FieldInfo_Format;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FieldInfo.Name":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FieldInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_21_FieldInfo_Name;
                xamlMember.Setter = set_21_FieldInfo_Name;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.RowPivotsOnly":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "RowPivotsOnly", "Boolean");
                xamlMember.Getter = get_22_SfPivotGrid_RowPivotsOnly;
                xamlMember.Setter = set_22_SfPivotGrid_RowPivotsOnly;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.FieldChooser":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FieldChooser", "Syncfusion.UI.Xaml.PivotGrid.PivotValueChooser");
                xamlMember.Getter = get_23_SfPivotGrid_FieldChooser;
                xamlMember.Setter = set_23_SfPivotGrid_FieldChooser;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ShowCalculationsAsColumns":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ShowCalculationsAsColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_SfPivotGrid_ShowCalculationsAsColumns;
                xamlMember.Setter = set_24_SfPivotGrid_ShowCalculationsAsColumns;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableStatePersistence":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableStatePersistence", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_SfPivotGrid_EnableStatePersistence;
                xamlMember.Setter = set_25_SfPivotGrid_EnableStatePersistence;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableHyperlinkOnMouseOver":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableHyperlinkOnMouseOver", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_SfPivotGrid_EnableHyperlinkOnMouseOver;
                xamlMember.Setter = set_26_SfPivotGrid_EnableHyperlinkOnMouseOver;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ShowPivotValueChooser":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ShowPivotValueChooser", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_SfPivotGrid_ShowPivotValueChooser;
                xamlMember.Setter = set_27_SfPivotGrid_ShowPivotValueChooser;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.OlapDataManager":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "OlapDataManager", "Syncfusion.Olap.UWP.Manager.OlapDataManager");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_SfPivotGrid_OlapDataManager;
                xamlMember.Setter = set_28_SfPivotGrid_OlapDataManager;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.Layout":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Layout", "Syncfusion.Olap.UWP.Engine.GridLayout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_SfPivotGrid_Layout;
                xamlMember.Setter = set_29_SfPivotGrid_Layout;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GridLayout":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GridLayout", "Syncfusion.PivotAnalysis.UWP.GridLayout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_SfPivotGrid_GridLayout;
                xamlMember.Setter = set_30_SfPivotGrid_GridLayout;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GridStyleInfo":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GridStyleInfo", "Syncfusion.UI.Xaml.PivotGrid.ExportingGridStyleInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_SfPivotGrid_GridStyleInfo;
                xamlMember.Setter = set_31_SfPivotGrid_GridStyleInfo;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ColumnHeaderStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ColumnHeaderStyle", "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_SfPivotGrid_ColumnHeaderStyle;
                xamlMember.Setter = set_32_SfPivotGrid_ColumnHeaderStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.SummaryRowStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "SummaryRowStyle", "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_SfPivotGrid_SummaryRowStyle;
                xamlMember.Setter = set_33_SfPivotGrid_SummaryRowStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.SummaryColumnStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "SummaryColumnStyle", "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_SfPivotGrid_SummaryColumnStyle;
                xamlMember.Setter = set_34_SfPivotGrid_SummaryColumnStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.RowHeaderStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "RowHeaderStyle", "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_SfPivotGrid_RowHeaderStyle;
                xamlMember.Setter = set_35_SfPivotGrid_RowHeaderStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ValueCellStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ValueCellStyle", "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_SfPivotGrid_ValueCellStyle;
                xamlMember.Setter = set_36_SfPivotGrid_ValueCellStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableAutoExecute":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableAutoExecute", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_SfPivotGrid_EnableAutoExecute;
                xamlMember.Setter = set_37_SfPivotGrid_EnableAutoExecute;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.FieldListBorderBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FieldListBorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_SfPivotGrid_FieldListBorderBrush;
                xamlMember.Setter = set_38_SfPivotGrid_FieldListBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GridVisualStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GridVisualStyle", "Syncfusion.UI.Xaml.PivotGrid.PivotGridVisualStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_SfPivotGrid_GridVisualStyle;
                xamlMember.Setter = set_39_SfPivotGrid_GridVisualStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.FreezeHeaders":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FreezeHeaders", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_SfPivotGrid_FreezeHeaders;
                xamlMember.Setter = set_40_SfPivotGrid_FreezeHeaders;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ShowValueCellToolTip":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ShowValueCellToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_SfPivotGrid_ShowValueCellToolTip;
                xamlMember.Setter = set_41_SfPivotGrid_ShowValueCellToolTip;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ShowHeaderCellsToolTip":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ShowHeaderCellsToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_SfPivotGrid_ShowHeaderCellsToolTip;
                xamlMember.Setter = set_42_SfPivotGrid_ShowHeaderCellsToolTip;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GridSettings":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GridSettings", "Syncfusion.Olap.UWP.Reports.GridAppearanceSettings");
                xamlMember.Getter = get_43_SfPivotGrid_GridSettings;
                xamlMember.Setter = set_43_SfPivotGrid_GridSettings;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableRowHeaderArea":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableRowHeaderArea", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_SfPivotGrid_EnableRowHeaderArea;
                xamlMember.Setter = set_44_SfPivotGrid_EnableRowHeaderArea;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableValueHeaderArea":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableValueHeaderArea", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_SfPivotGrid_EnableValueHeaderArea;
                xamlMember.Setter = set_45_SfPivotGrid_EnableValueHeaderArea;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableFilterHeaderArea":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableFilterHeaderArea", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_SfPivotGrid_EnableFilterHeaderArea;
                xamlMember.Setter = set_46_SfPivotGrid_EnableFilterHeaderArea;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableColumnHeaderArea":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableColumnHeaderArea", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_SfPivotGrid_EnableColumnHeaderArea;
                xamlMember.Setter = set_47_SfPivotGrid_EnableColumnHeaderArea;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableUpdating":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableUpdating", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_SfPivotGrid_EnableUpdating;
                xamlMember.Setter = set_48_SfPivotGrid_EnableUpdating;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableValueEditing":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableValueEditing", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_SfPivotGrid_EnableValueEditing;
                xamlMember.Setter = set_49_SfPivotGrid_EnableValueEditing;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.AllowSelection":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowSelection", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_SfPivotGrid_AllowSelection;
                xamlMember.Setter = set_50_SfPivotGrid_AllowSelection;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.AllowSelectionWithHeaders":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowSelectionWithHeaders", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_SfPivotGrid_AllowSelectionWithHeaders;
                xamlMember.Setter = set_51_SfPivotGrid_AllowSelectionWithHeaders;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ShowSubTotals":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ShowSubTotals", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_SfPivotGrid_ShowSubTotals;
                xamlMember.Setter = set_52_SfPivotGrid_ShowSubTotals;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ShowGrandTotals":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ShowGrandTotals", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_SfPivotGrid_ShowGrandTotals;
                xamlMember.Setter = set_53_SfPivotGrid_ShowGrandTotals;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ShowRowSubTotals":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ShowRowSubTotals", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_SfPivotGrid_ShowRowSubTotals;
                xamlMember.Setter = set_54_SfPivotGrid_ShowRowSubTotals;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ShowColumnSubTotals":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ShowColumnSubTotals", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_SfPivotGrid_ShowColumnSubTotals;
                xamlMember.Setter = set_55_SfPivotGrid_ShowColumnSubTotals;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ValueCellTextAlignment":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ValueCellTextAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_SfPivotGrid_ValueCellTextAlignment;
                xamlMember.Setter = set_56_SfPivotGrid_ValueCellTextAlignment;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ShowProcessingBar":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ShowProcessingBar", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_SfPivotGrid_ShowProcessingBar;
                xamlMember.Setter = set_57_SfPivotGrid_ShowProcessingBar;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GridLineStroke":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GridLineStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_SfPivotGrid_GridLineStroke;
                xamlMember.Setter = set_58_SfPivotGrid_GridLineStroke;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GridLineThickness":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GridLineThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_SfPivotGrid_GridLineThickness;
                xamlMember.Setter = set_59_SfPivotGrid_GridLineThickness;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ExpanderStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ExpanderStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_SfPivotGrid_ExpanderStyle;
                xamlMember.Setter = set_60_SfPivotGrid_ExpanderStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.PivotRows":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "PivotRows", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_SfPivotGrid_PivotRows;
                xamlMember.Setter = set_61_SfPivotGrid_PivotRows;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowFilter":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowFilter", "Boolean");
                xamlMember.Getter = get_62_PivotItem_AllowFilter;
                xamlMember.Setter = set_62_PivotItem_AllowFilter;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowRunTimeGroupByField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowRunTimeGroupByField", "Boolean");
                xamlMember.Getter = get_63_PivotItem_AllowRunTimeGroupByField;
                xamlMember.Setter = set_63_PivotItem_AllowRunTimeGroupByField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.AllowSort":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowSort", "Boolean");
                xamlMember.Getter = get_64_PivotItem_AllowSort;
                xamlMember.Setter = set_64_PivotItem_AllowSort;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Comparer":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Comparer", "System.Collections.IComparer");
                xamlMember.Getter = get_65_PivotItem_Comparer;
                xamlMember.Setter = set_65_PivotItem_Comparer;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.EnableHyperlinks":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableHyperlinks", "Boolean");
                xamlMember.Getter = get_66_PivotItem_EnableHyperlinks;
                xamlMember.Setter = set_66_PivotItem_EnableHyperlinks;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FieldCaption", "String");
                xamlMember.Getter = get_67_PivotItem_FieldCaption;
                xamlMember.Setter = set_67_PivotItem_FieldCaption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FieldHeader", "String");
                xamlMember.Getter = get_68_PivotItem_FieldHeader;
                xamlMember.Setter = set_68_PivotItem_FieldHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.FieldMappingName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FieldMappingName", "String");
                xamlMember.Getter = get_69_PivotItem_FieldMappingName;
                xamlMember.Setter = set_69_PivotItem_FieldMappingName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Format":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_70_PivotItem_Format;
                xamlMember.Setter = set_70_PivotItem_Format;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.ShowSubTotal":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ShowSubTotal", "Boolean");
                xamlMember.Getter = get_71_PivotItem_ShowSubTotal;
                xamlMember.Setter = set_71_PivotItem_ShowSubTotal;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.SortDirection":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "SortDirection", "Syncfusion.Data.ListSortDirection");
                xamlMember.Getter = get_72_PivotItem_SortDirection;
                xamlMember.Setter = set_72_PivotItem_SortDirection;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Summary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Summary", "Syncfusion.PivotAnalysis.UWP.SummaryBase");
                xamlMember.Getter = get_73_PivotItem_Summary;
                xamlMember.Setter = set_73_PivotItem_Summary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.SummaryType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "SummaryType", "Syncfusion.PivotAnalysis.UWP.SummaryType");
                xamlMember.Getter = get_74_PivotItem_SummaryType;
                xamlMember.Setter = set_74_PivotItem_SummaryType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.TotalHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "TotalHeader", "String");
                xamlMember.Getter = get_75_PivotItem_TotalHeader;
                xamlMember.Setter = set_75_PivotItem_TotalHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotItem.Width":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.Getter = get_76_PivotItem_Width;
                xamlMember.Setter = set_76_PivotItem_Width;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.PivotColumns":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "PivotColumns", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_SfPivotGrid_PivotColumns;
                xamlMember.Setter = set_77_SfPivotGrid_PivotColumns;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.PivotCalculations":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "PivotCalculations", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.PivotComputationInfo>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_SfPivotGrid_PivotCalculations;
                xamlMember.Setter = set_78_SfPivotGrid_PivotCalculations;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowFilter":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowFilter", "Boolean");
                xamlMember.Getter = get_79_PivotComputationInfo_AllowFilter;
                xamlMember.Setter = set_79_PivotComputationInfo_AllowFilter;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowRunTimeGroupByField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowRunTimeGroupByField", "Boolean");
                xamlMember.Getter = get_80_PivotComputationInfo_AllowRunTimeGroupByField;
                xamlMember.Setter = set_80_PivotComputationInfo_AllowRunTimeGroupByField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.AllowSort":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowSort", "Boolean");
                xamlMember.Getter = get_81_PivotComputationInfo_AllowSort;
                xamlMember.Setter = set_81_PivotComputationInfo_AllowSort;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.BaseField":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "BaseField", "String");
                xamlMember.Getter = get_82_PivotComputationInfo_BaseField;
                xamlMember.Setter = set_82_PivotComputationInfo_BaseField;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.BaseItem":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "BaseItem", "String");
                xamlMember.Getter = get_83_PivotComputationInfo_BaseItem;
                xamlMember.Setter = set_83_PivotComputationInfo_BaseItem;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FieldType", "String");
                xamlMember.Getter = get_84_PivotComputationInfo_FieldType;
                xamlMember.Setter = set_84_PivotComputationInfo_FieldType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.CalculationName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "CalculationName", "String");
                xamlMember.Getter = get_85_PivotComputationInfo_CalculationName;
                xamlMember.Setter = set_85_PivotComputationInfo_CalculationName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.CalculationType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "CalculationType", "Syncfusion.PivotAnalysis.UWP.CalculationType");
                xamlMember.Getter = get_86_PivotComputationInfo_CalculationType;
                xamlMember.Setter = set_86_PivotComputationInfo_CalculationType;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.DefaultValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "DefaultValue", "Object");
                xamlMember.Getter = get_87_PivotComputationInfo_DefaultValue;
                xamlMember.Setter = set_87_PivotComputationInfo_DefaultValue;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Description":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_88_PivotComputationInfo_Description;
                xamlMember.Setter = set_88_PivotComputationInfo_Description;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.DisplayOption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "DisplayOption", "Syncfusion.PivotAnalysis.UWP.DisplayOption");
                xamlMember.Getter = get_89_PivotComputationInfo_DisplayOption;
                xamlMember.Setter = set_89_PivotComputationInfo_DisplayOption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.EnableHyperlinks":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableHyperlinks", "Boolean");
                xamlMember.Getter = get_90_PivotComputationInfo_EnableHyperlinks;
                xamlMember.Setter = set_90_PivotComputationInfo_EnableHyperlinks;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Expression":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Expression", "Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember.Getter = get_91_PivotComputationInfo_Expression;
                xamlMember.Setter = set_91_PivotComputationInfo_Expression;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FieldCaption", "String");
                xamlMember.Getter = get_92_PivotComputationInfo_FieldCaption;
                xamlMember.Setter = set_92_PivotComputationInfo_FieldCaption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FieldHeader", "String");
                xamlMember.Getter = get_93_PivotComputationInfo_FieldHeader;
                xamlMember.Setter = set_93_PivotComputationInfo_FieldHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.FieldName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FieldName", "String");
                xamlMember.Getter = get_94_PivotComputationInfo_FieldName;
                xamlMember.Setter = set_94_PivotComputationInfo_FieldName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Format":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_95_PivotComputationInfo_Format;
                xamlMember.Setter = set_95_PivotComputationInfo_Format;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Formula":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Formula", "String");
                xamlMember.Getter = get_96_PivotComputationInfo_Formula;
                xamlMember.Setter = set_96_PivotComputationInfo_Formula;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.InnerMostComputationsOnly":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "InnerMostComputationsOnly", "Syncfusion.PivotAnalysis.UWP.SummaryDisplayLevel");
                xamlMember.Getter = get_97_PivotComputationInfo_InnerMostComputationsOnly;
                xamlMember.Setter = set_97_PivotComputationInfo_InnerMostComputationsOnly;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.IsTopColumnSummary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "IsTopColumnSummary", "Boolean");
                xamlMember.Getter = get_98_PivotComputationInfo_IsTopColumnSummary;
                xamlMember.Setter = set_98_PivotComputationInfo_IsTopColumnSummary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.PadString":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "PadString", "String");
                xamlMember.Getter = get_99_PivotComputationInfo_PadString;
                xamlMember.Setter = set_99_PivotComputationInfo_PadString;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.Summary":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Summary", "Syncfusion.PivotAnalysis.UWP.SummaryBase");
                xamlMember.Getter = get_100_PivotComputationInfo_Summary;
                xamlMember.Setter = set_100_PivotComputationInfo_Summary;
                break;
            case "Syncfusion.PivotAnalysis.UWP.PivotComputationInfo.SummaryType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.PivotComputationInfo");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "SummaryType", "Syncfusion.PivotAnalysis.UWP.SummaryType");
                xamlMember.Getter = get_101_PivotComputationInfo_SummaryType;
                xamlMember.Setter = set_101_PivotComputationInfo_SummaryType;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.Filters":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Filters", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.PivotAnalysis.UWP.FilterExpression>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_SfPivotGrid_Filters;
                xamlMember.Setter = set_102_SfPivotGrid_Filters;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.CaseSensitive":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "CaseSensitive", "Boolean");
                xamlMember.Getter = get_103_FilterExpression_CaseSensitive;
                xamlMember.Setter = set_103_FilterExpression_CaseSensitive;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.DimensionHeader":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "DimensionHeader", "String");
                xamlMember.Getter = get_104_FilterExpression_DimensionHeader;
                xamlMember.Setter = set_104_FilterExpression_DimensionHeader;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.DimensionName":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "DimensionName", "String");
                xamlMember.Getter = get_105_FilterExpression_DimensionName;
                xamlMember.Setter = set_105_FilterExpression_DimensionName;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Error":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Error", "Syncfusion.PivotAnalysis.UWP.ExpressionError");
                xamlMember.Getter = get_106_FilterExpression_Error;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.ErrorString":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ErrorString", "String");
                xamlMember.Getter = get_107_FilterExpression_ErrorString;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Evaluator":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Evaluator", "System.Delegate");
                xamlMember.Getter = get_108_FilterExpression_Evaluator;
                xamlMember.Setter = set_108_FilterExpression_Evaluator;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Expression":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Expression", "String");
                xamlMember.Getter = get_109_FilterExpression_Expression;
                xamlMember.Setter = set_109_FilterExpression_Expression;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.FieldCaption":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FieldCaption", "String");
                xamlMember.Getter = get_110_FilterExpression_FieldCaption;
                xamlMember.Setter = set_110_FilterExpression_FieldCaption;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Format":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_111_FilterExpression_Format;
                xamlMember.Setter = set_111_FilterExpression_Format;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Name":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_112_FilterExpression_Name;
                xamlMember.Setter = set_112_FilterExpression_Name;
                break;
            case "Syncfusion.PivotAnalysis.UWP.FilterExpression.Tag":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.PivotAnalysis.UWP.FilterExpression");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Tag", "Object");
                xamlMember.Getter = get_113_FilterExpression_Tag;
                xamlMember.Setter = set_113_FilterExpression_Tag;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.PivotEngine":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "PivotEngine", "Syncfusion.PivotAnalysis.UWP.PivotEngine");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_SfPivotGrid_PivotEngine;
                xamlMember.Setter = set_114_SfPivotGrid_PivotEngine;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ItemSource":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ItemSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_SfPivotGrid_ItemSource;
                xamlMember.Setter = set_115_SfPivotGrid_ItemSource;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.LoadWithDefaultPropertyFields":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "LoadWithDefaultPropertyFields", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_SfPivotGrid_LoadWithDefaultPropertyFields;
                xamlMember.Setter = set_116_SfPivotGrid_LoadWithDefaultPropertyFields;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.LoadInBackground":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "LoadInBackground", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_SfPivotGrid_LoadInBackground;
                xamlMember.Setter = set_117_SfPivotGrid_LoadInBackground;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.SelectedCell":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "SelectedCell", "Syncfusion.Olap.UWP.Engine.PivotCellDescriptor");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_SfPivotGrid_SelectedCell;
                xamlMember.Setter = set_118_SfPivotGrid_SelectedCell;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.SelectedItems":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "SelectedItems", "Syncfusion.UI.Xaml.PivotGrid.SelectedItems");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_SfPivotGrid_SelectedItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SelectedItem.Column":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SelectedItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Column", "String");
                xamlMember.Getter = get_120_SelectedItem_Column;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SelectedItem.Row":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SelectedItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Row", "String");
                xamlMember.Getter = get_121_SelectedItem_Row;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SelectedItem.ColumnList":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SelectedItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ColumnList", "System.Collections.Generic.List`1<String>");
                xamlMember.Getter = get_122_SelectedItem_ColumnList;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SelectedItem.RowList":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SelectedItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "RowList", "System.Collections.Generic.List`1<String>");
                xamlMember.Getter = get_123_SelectedItem_RowList;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SelectedItem.Value":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SelectedItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Value", "String");
                xamlMember.Getter = get_124_SelectedItem_Value;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SelectedItem.FormattedValue":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SelectedItem");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FormattedValue", "String");
                xamlMember.Getter = get_125_SelectedItem_FormattedValue;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.AllowResizeColumns":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowResizeColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_SfPivotGrid_AllowResizeColumns;
                xamlMember.Setter = set_126_SfPivotGrid_AllowResizeColumns;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableDrillThrough":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableDrillThrough", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_SfPivotGrid_EnableDrillThrough;
                xamlMember.Setter = set_127_SfPivotGrid_EnableDrillThrough;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.AllowResizeRows":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowResizeRows", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_SfPivotGrid_AllowResizeRows;
                xamlMember.Setter = set_128_SfPivotGrid_AllowResizeRows;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ResizeColumnsToFit":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ResizeColumnsToFit", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_SfPivotGrid_ResizeColumnsToFit;
                xamlMember.Setter = set_129_SfPivotGrid_ResizeColumnsToFit;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ResizeRowsToFit":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ResizeRowsToFit", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_SfPivotGrid_ResizeRowsToFit;
                xamlMember.Setter = set_130_SfPivotGrid_ResizeRowsToFit;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableConditionalFormat":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableConditionalFormat", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_SfPivotGrid_EnableConditionalFormat;
                xamlMember.Setter = set_131_SfPivotGrid_EnableConditionalFormat;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ConditionalFormats":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ConditionalFormats", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_SfPivotGrid_ConditionalFormats;
                xamlMember.Setter = set_132_SfPivotGrid_ConditionalFormats;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat.Name":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_PivotGridDataConditionalFormat_Name;
                xamlMember.Setter = set_133_PivotGridDataConditionalFormat_Name;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat.Conditions":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Conditions", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_PivotGridDataConditionalFormat_Conditions;
                xamlMember.Setter = set_134_PivotGridDataConditionalFormat_Conditions;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition.ConditionType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ConditionType", "Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_PivotGridDataCondition_ConditionType;
                xamlMember.Setter = set_135_PivotGridDataCondition_ConditionType;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition.Value":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Value", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_PivotGridDataCondition_Value;
                xamlMember.Setter = set_136_PivotGridDataCondition_Value;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition.PredicateType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "PredicateType", "Syncfusion.Data.PredicateType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_PivotGridDataCondition_PredicateType;
                xamlMember.Setter = set_137_PivotGridDataCondition_PredicateType;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition.MeasureElement":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridDataCondition");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "MeasureElement", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_PivotGridDataCondition_MeasureElement;
                xamlMember.Setter = set_138_PivotGridDataCondition_MeasureElement;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat.CellStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridDataConditionalFormat");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "CellStyle", "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_PivotGridDataConditionalFormat_CellStyle;
                xamlMember.Setter = set_139_PivotGridDataConditionalFormat_CellStyle;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.ShowGroupingBar":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ShowGroupingBar", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_SfPivotGrid_ShowGroupingBar;
                xamlMember.Setter = set_140_SfPivotGrid_ShowGroupingBar;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableGroupingBarFiltering":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableGroupingBarFiltering", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_SfPivotGrid_EnableGroupingBarFiltering;
                xamlMember.Setter = set_141_SfPivotGrid_EnableGroupingBarFiltering;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableGroupingBarRemoving":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableGroupingBarRemoving", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_SfPivotGrid_EnableGroupingBarRemoving;
                xamlMember.Setter = set_142_SfPivotGrid_EnableGroupingBarRemoving;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.EnableGroupingBarSorting":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableGroupingBarSorting", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_SfPivotGrid_EnableGroupingBarSorting;
                xamlMember.Setter = set_143_SfPivotGrid_EnableGroupingBarSorting;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.AllowMultiFunctionalSortFilter":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AllowMultiFunctionalSortFilter", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_SfPivotGrid_AllowMultiFunctionalSortFilter;
                xamlMember.Setter = set_144_SfPivotGrid_AllowMultiFunctionalSortFilter;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GroupingBarBackground":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GroupingBarBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_SfPivotGrid_GroupingBarBackground;
                xamlMember.Setter = set_145_SfPivotGrid_GroupingBarBackground;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GroupingBarBorderBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GroupingBarBorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_SfPivotGrid_GroupingBarBorderBrush;
                xamlMember.Setter = set_146_SfPivotGrid_GroupingBarBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GroupingBarItemBorderBrush":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GroupingBarItemBorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_SfPivotGrid_GroupingBarItemBorderBrush;
                xamlMember.Setter = set_147_SfPivotGrid_GroupingBarItemBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GroupingBarItemBackground":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GroupingBarItemBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_SfPivotGrid_GroupingBarItemBackground;
                xamlMember.Setter = set_148_SfPivotGrid_GroupingBarItemBackground;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid.GroupingBarItemForeground":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.SfPivotGrid");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GroupingBarItemForeground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_SfPivotGrid_GroupingBarItemForeground;
                xamlMember.Setter = set_149_SfPivotGrid_GroupingBarItemForeground;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.AnimationType":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AnimationType", "Syncfusion.UI.Xaml.Controls.Notification.AnimationTypes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_150_SfBusyIndicator_AnimationType;
                xamlMember.Setter = set_150_SfBusyIndicator_AnimationType;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.IsBusy":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "IsBusy", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_SfBusyIndicator_IsBusy;
                xamlMember.Setter = set_151_SfBusyIndicator_IsBusy;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.ViewboxHeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ViewboxHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_SfBusyIndicator_ViewboxHeight;
                xamlMember.Setter = set_152_SfBusyIndicator_ViewboxHeight;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.ViewboxWidth":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "ViewboxWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_SfBusyIndicator_ViewboxWidth;
                xamlMember.Setter = set_153_SfBusyIndicator_ViewboxWidth;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.AnimationSpeed":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "AnimationSpeed", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_SfBusyIndicator_AnimationSpeed;
                xamlMember.Setter = set_154_SfBusyIndicator_AnimationSpeed;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.Header":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_SfBusyIndicator_Header;
                xamlMember.Setter = set_155_SfBusyIndicator_Header;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.HeaderTemplate":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_SfBusyIndicator_HeaderTemplate;
                xamlMember.Setter = set_156_SfBusyIndicator_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator.HeaderPlacementMode":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Notification.SfBusyIndicator");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "HeaderPlacementMode", "Syncfusion.UI.Xaml.Controls.Notification.HeaderPlacementMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_157_SfBusyIndicator_HeaderPlacementMode;
                xamlMember.Setter = set_157_SfBusyIndicator_HeaderPlacementMode;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell.CellDescriptor":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "CellDescriptor", "Syncfusion.Olap.UWP.Engine.PivotCellDescriptor");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_PivotGridTemplateCell_CellDescriptor;
                xamlMember.Setter = set_158_PivotGridTemplateCell_CellDescriptor;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell.PivotCellDescriptor":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "PivotCellDescriptor", "Syncfusion.PivotAnalysis.UWP.PivotCellInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_PivotGridTemplateCell_PivotCellDescriptor;
                xamlMember.Setter = set_159_PivotGridTemplateCell_PivotCellDescriptor;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell.CustomExpander":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "CustomExpander", "Windows.UI.Xaml.UIElement");
                xamlMember.Getter = get_160_PivotGridTemplateCell_CustomExpander;
                xamlMember.Setter = set_160_PivotGridTemplateCell_CustomExpander;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell.GridControlBase":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "GridControlBase", "Syncfusion.UI.Xaml.PivotGrid.PivotGridControlBase");
                xamlMember.Getter = get_161_PivotGridTemplateCell_GridControlBase;
                xamlMember.Setter = set_161_PivotGridTemplateCell_GridControlBase;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell.IsExpanded":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridTemplateCell");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.Getter = get_162_PivotGridTemplateCell_IsExpanded;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle.Background":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Background", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_163_PivotGridCellStyle_Background;
                xamlMember.Setter = set_163_PivotGridCellStyle_Background;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle.Style":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Style", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_PivotGridCellStyle_Style;
                xamlMember.Setter = set_164_PivotGridCellStyle_Style;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle.EnableContextMenu":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "EnableContextMenu", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_PivotGridCellStyle_EnableContextMenu;
                xamlMember.Setter = set_165_PivotGridCellStyle_EnableContextMenu;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle.FontFamily":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_166_PivotGridCellStyle_FontFamily;
                xamlMember.Setter = set_166_PivotGridCellStyle_FontFamily;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle.FontSize":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FontSize", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_PivotGridCellStyle_FontSize;
                xamlMember.Setter = set_167_PivotGridCellStyle_FontSize;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle.FontWeight":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_PivotGridCellStyle_FontWeight;
                xamlMember.Setter = set_168_PivotGridCellStyle_FontWeight;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle.Foreground":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_PivotGridCellStyle_Foreground;
                xamlMember.Setter = set_169_PivotGridCellStyle_Foreground;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle.IsHyperlinkCell":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "IsHyperlinkCell", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_PivotGridCellStyle_IsHyperlinkCell;
                xamlMember.Setter = set_170_PivotGridCellStyle_IsHyperlinkCell;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle.TextWrapping":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "TextWrapping", "Windows.UI.Xaml.TextWrapping");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_PivotGridCellStyle_TextWrapping;
                xamlMember.Setter = set_171_PivotGridCellStyle_TextWrapping;
                break;
            case "Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle.FontStyle":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.PivotGrid.PivotGridCellStyle");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_172_PivotGridCellStyle_FontStyle;
                xamlMember.Setter = set_172_PivotGridCellStyle_FontStyle;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Type":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Type", "String");
                xamlMember.Getter = get_173_SetterValueBindingHelper_Type;
                xamlMember.Setter = set_173_SetterValueBindingHelper_Type;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Property":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Property", "String");
                xamlMember.Getter = get_174_SetterValueBindingHelper_Property;
                xamlMember.Setter = set_174_SetterValueBindingHelper_Property;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Binding":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Binding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_175_SetterValueBindingHelper_Binding;
                xamlMember.Setter = set_175_SetterValueBindingHelper_Binding;
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.Values":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "Values", "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper>");
                xamlMember.Getter = get_176_SetterValueBindingHelper_Values;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper.PropertyBinding":
                userType = (global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember = new global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlMember(this, "PropertyBinding", "Syncfusion.UI.Xaml.Utils.SetterValueBindingHelper");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_177_SetterValueBindingHelper_PropertyBinding;
                xamlMember.Setter = set_177_SetterValueBindingHelper_PropertyBinding;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlSystemBaseType
    {
        global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Syncfusion.SampleBrowser.UWP.PivotGrid.Syncfusion_SampleBrowser_UWP_PivotGrid_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

